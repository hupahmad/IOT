"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/mqtt";
exports.ids = ["vendor-chunks/mqtt"];
exports.modules = {

/***/ "(ssr)/../node_modules/mqtt/build/index.js":
/*!*******************************************!*\
  !*** ../node_modules/mqtt/build/index.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst mqtt = __importStar(__webpack_require__(/*! ./mqtt */ \"(ssr)/../node_modules/mqtt/build/mqtt.js\"));\nexports[\"default\"] = mqtt;\n__exportStar(__webpack_require__(/*! ./mqtt */ \"(ssr)/../node_modules/mqtt/build/mqtt.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQixtQkFBTyxDQUFDLHdEQUFRO0FBQzFDLGtCQUFlO0FBQ2YsYUFBYSxtQkFBTyxDQUFDLHdEQUFRO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4uL25vZGVfbW9kdWxlcy9tcXR0L2J1aWxkL2luZGV4LmpzPzNjZmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBtcXR0ID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL21xdHRcIikpO1xuZXhwb3J0cy5kZWZhdWx0ID0gbXF0dDtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9tcXR0XCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/BufferedDuplex.js":
/*!********************************************************!*\
  !*** ../node_modules/mqtt/build/lib/BufferedDuplex.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BufferedDuplex = exports.writev = void 0;\nconst readable_stream_1 = __webpack_require__(/*! readable-stream */ \"(ssr)/../node_modules/readable-stream/lib/ours/index.js\");\nfunction writev(chunks, cb) {\n    const buffers = new Array(chunks.length);\n    for (let i = 0; i < chunks.length; i++) {\n        if (typeof chunks[i].chunk === 'string') {\n            buffers[i] = Buffer.from(chunks[i].chunk, 'utf8');\n        }\n        else {\n            buffers[i] = chunks[i].chunk;\n        }\n    }\n    this._write(Buffer.concat(buffers), 'binary', cb);\n}\nexports.writev = writev;\nclass BufferedDuplex extends readable_stream_1.Duplex {\n    constructor(opts, proxy, socket) {\n        super({\n            objectMode: true,\n        });\n        this.proxy = proxy;\n        this.socket = socket;\n        this.writeQueue = [];\n        if (!opts.objectMode) {\n            this._writev = writev.bind(this);\n        }\n        this.isSocketOpen = false;\n        this.proxy.on('data', (chunk) => {\n            this.push(chunk);\n        });\n    }\n    _read(size) {\n        this.proxy.read(size);\n    }\n    _write(chunk, encoding, cb) {\n        if (!this.isSocketOpen) {\n            this.writeQueue.push({ chunk, encoding, cb });\n        }\n        else {\n            this.writeToProxy(chunk, encoding, cb);\n        }\n    }\n    _final(callback) {\n        this.writeQueue = [];\n        this.proxy.end(callback);\n    }\n    socketReady() {\n        this.emit('connect');\n        this.isSocketOpen = true;\n        this.processWriteQueue();\n    }\n    writeToProxy(chunk, encoding, cb) {\n        if (this.proxy.write(chunk, encoding) === false) {\n            this.proxy.once('drain', cb);\n        }\n        else {\n            cb();\n        }\n    }\n    processWriteQueue() {\n        while (this.writeQueue.length > 0) {\n            const { chunk, encoding, cb } = this.writeQueue.shift();\n            this.writeToProxy(chunk, encoding, cb);\n        }\n    }\n}\nexports.BufferedDuplex = BufferedDuplex;\n//# sourceMappingURL=BufferedDuplex.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL0J1ZmZlcmVkRHVwbGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixHQUFHLGNBQWM7QUFDdkMsMEJBQTBCLG1CQUFPLENBQUMsZ0ZBQWlCO0FBQ25EO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQW1CO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLHFCQUFxQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isc0JBQXNCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4uL25vZGVfbW9kdWxlcy9tcXR0L2J1aWxkL2xpYi9CdWZmZXJlZER1cGxleC5qcz9kYzVmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CdWZmZXJlZER1cGxleCA9IGV4cG9ydHMud3JpdGV2ID0gdm9pZCAwO1xuY29uc3QgcmVhZGFibGVfc3RyZWFtXzEgPSByZXF1aXJlKFwicmVhZGFibGUtc3RyZWFtXCIpO1xuZnVuY3Rpb24gd3JpdGV2KGNodW5rcywgY2IpIHtcbiAgICBjb25zdCBidWZmZXJzID0gbmV3IEFycmF5KGNodW5rcy5sZW5ndGgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2h1bmtzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0eXBlb2YgY2h1bmtzW2ldLmNodW5rID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgYnVmZmVyc1tpXSA9IEJ1ZmZlci5mcm9tKGNodW5rc1tpXS5jaHVuaywgJ3V0ZjgnKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGJ1ZmZlcnNbaV0gPSBjaHVua3NbaV0uY2h1bms7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5fd3JpdGUoQnVmZmVyLmNvbmNhdChidWZmZXJzKSwgJ2JpbmFyeScsIGNiKTtcbn1cbmV4cG9ydHMud3JpdGV2ID0gd3JpdGV2O1xuY2xhc3MgQnVmZmVyZWREdXBsZXggZXh0ZW5kcyByZWFkYWJsZV9zdHJlYW1fMS5EdXBsZXgge1xuICAgIGNvbnN0cnVjdG9yKG9wdHMsIHByb3h5LCBzb2NrZXQpIHtcbiAgICAgICAgc3VwZXIoe1xuICAgICAgICAgICAgb2JqZWN0TW9kZTogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMucHJveHkgPSBwcm94eTtcbiAgICAgICAgdGhpcy5zb2NrZXQgPSBzb2NrZXQ7XG4gICAgICAgIHRoaXMud3JpdGVRdWV1ZSA9IFtdO1xuICAgICAgICBpZiAoIW9wdHMub2JqZWN0TW9kZSkge1xuICAgICAgICAgICAgdGhpcy5fd3JpdGV2ID0gd3JpdGV2LmJpbmQodGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pc1NvY2tldE9wZW4gPSBmYWxzZTtcbiAgICAgICAgdGhpcy5wcm94eS5vbignZGF0YScsIChjaHVuaykgPT4ge1xuICAgICAgICAgICAgdGhpcy5wdXNoKGNodW5rKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIF9yZWFkKHNpemUpIHtcbiAgICAgICAgdGhpcy5wcm94eS5yZWFkKHNpemUpO1xuICAgIH1cbiAgICBfd3JpdGUoY2h1bmssIGVuY29kaW5nLCBjYikge1xuICAgICAgICBpZiAoIXRoaXMuaXNTb2NrZXRPcGVuKSB7XG4gICAgICAgICAgICB0aGlzLndyaXRlUXVldWUucHVzaCh7IGNodW5rLCBlbmNvZGluZywgY2IgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLndyaXRlVG9Qcm94eShjaHVuaywgZW5jb2RpbmcsIGNiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBfZmluYWwoY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy53cml0ZVF1ZXVlID0gW107XG4gICAgICAgIHRoaXMucHJveHkuZW5kKGNhbGxiYWNrKTtcbiAgICB9XG4gICAgc29ja2V0UmVhZHkoKSB7XG4gICAgICAgIHRoaXMuZW1pdCgnY29ubmVjdCcpO1xuICAgICAgICB0aGlzLmlzU29ja2V0T3BlbiA9IHRydWU7XG4gICAgICAgIHRoaXMucHJvY2Vzc1dyaXRlUXVldWUoKTtcbiAgICB9XG4gICAgd3JpdGVUb1Byb3h5KGNodW5rLCBlbmNvZGluZywgY2IpIHtcbiAgICAgICAgaWYgKHRoaXMucHJveHkud3JpdGUoY2h1bmssIGVuY29kaW5nKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHRoaXMucHJveHkub25jZSgnZHJhaW4nLCBjYik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjYigpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHByb2Nlc3NXcml0ZVF1ZXVlKCkge1xuICAgICAgICB3aGlsZSAodGhpcy53cml0ZVF1ZXVlLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGNvbnN0IHsgY2h1bmssIGVuY29kaW5nLCBjYiB9ID0gdGhpcy53cml0ZVF1ZXVlLnNoaWZ0KCk7XG4gICAgICAgICAgICB0aGlzLndyaXRlVG9Qcm94eShjaHVuaywgZW5jb2RpbmcsIGNiKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuQnVmZmVyZWREdXBsZXggPSBCdWZmZXJlZER1cGxleDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJ1ZmZlcmVkRHVwbGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/BufferedDuplex.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/PingTimer.js":
/*!***************************************************!*\
  !*** ../node_modules/mqtt/build/lib/PingTimer.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst timers_1 = __importDefault(__webpack_require__(/*! ./timers */ \"(ssr)/../node_modules/mqtt/build/lib/timers.js\"));\nclass PingTimer {\n    constructor(keepalive, checkPing) {\n        this.keepalive = keepalive * 1000;\n        this.checkPing = checkPing;\n        this.reschedule();\n    }\n    clear() {\n        if (this.timer) {\n            timers_1.default.clear(this.timer);\n            this.timer = null;\n        }\n    }\n    reschedule() {\n        this.clear();\n        this.timer = timers_1.default.set(() => {\n            this.checkPing();\n            if (this.timer) {\n                this.reschedule();\n            }\n        }, this.keepalive);\n    }\n}\nexports[\"default\"] = PingTimer;\n//# sourceMappingURL=PingTimer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL1BpbmdUaW1lci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlDQUFpQyxtQkFBTyxDQUFDLGdFQUFVO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4uL25vZGVfbW9kdWxlcy9tcXR0L2J1aWxkL2xpYi9QaW5nVGltZXIuanM/NjkxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRpbWVyc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3RpbWVyc1wiKSk7XG5jbGFzcyBQaW5nVGltZXIge1xuICAgIGNvbnN0cnVjdG9yKGtlZXBhbGl2ZSwgY2hlY2tQaW5nKSB7XG4gICAgICAgIHRoaXMua2VlcGFsaXZlID0ga2VlcGFsaXZlICogMTAwMDtcbiAgICAgICAgdGhpcy5jaGVja1BpbmcgPSBjaGVja1Bpbmc7XG4gICAgICAgIHRoaXMucmVzY2hlZHVsZSgpO1xuICAgIH1cbiAgICBjbGVhcigpIHtcbiAgICAgICAgaWYgKHRoaXMudGltZXIpIHtcbiAgICAgICAgICAgIHRpbWVyc18xLmRlZmF1bHQuY2xlYXIodGhpcy50aW1lcik7XG4gICAgICAgICAgICB0aGlzLnRpbWVyID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXNjaGVkdWxlKCkge1xuICAgICAgICB0aGlzLmNsZWFyKCk7XG4gICAgICAgIHRoaXMudGltZXIgPSB0aW1lcnNfMS5kZWZhdWx0LnNldCgoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNoZWNrUGluZygpO1xuICAgICAgICAgICAgaWYgKHRoaXMudGltZXIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlc2NoZWR1bGUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgdGhpcy5rZWVwYWxpdmUpO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFBpbmdUaW1lcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBpbmdUaW1lci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/PingTimer.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/TypedEmitter.js":
/*!******************************************************!*\
  !*** ../node_modules/mqtt/build/lib/TypedEmitter.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TypedEventEmitter = void 0;\nconst events_1 = __importDefault(__webpack_require__(/*! events */ \"events\"));\nconst shared_1 = __webpack_require__(/*! ./shared */ \"(ssr)/../node_modules/mqtt/build/lib/shared.js\");\nclass TypedEventEmitter {\n}\nexports.TypedEventEmitter = TypedEventEmitter;\n(0, shared_1.applyMixin)(TypedEventEmitter, events_1.default);\n//# sourceMappingURL=TypedEmitter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL1R5cGVkRW1pdHRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6QixpQ0FBaUMsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqRCxpQkFBaUIsbUJBQU8sQ0FBQyxnRUFBVTtBQUNuQztBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL1R5cGVkRW1pdHRlci5qcz80ZTBiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UeXBlZEV2ZW50RW1pdHRlciA9IHZvaWQgMDtcbmNvbnN0IGV2ZW50c18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJldmVudHNcIikpO1xuY29uc3Qgc2hhcmVkXzEgPSByZXF1aXJlKFwiLi9zaGFyZWRcIik7XG5jbGFzcyBUeXBlZEV2ZW50RW1pdHRlciB7XG59XG5leHBvcnRzLlR5cGVkRXZlbnRFbWl0dGVyID0gVHlwZWRFdmVudEVtaXR0ZXI7XG4oMCwgc2hhcmVkXzEuYXBwbHlNaXhpbikoVHlwZWRFdmVudEVtaXR0ZXIsIGV2ZW50c18xLmRlZmF1bHQpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VHlwZWRFbWl0dGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/TypedEmitter.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/client.js":
/*!************************************************!*\
  !*** ../node_modules/mqtt/build/lib/client.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst topic_alias_recv_1 = __importDefault(__webpack_require__(/*! ./topic-alias-recv */ \"(ssr)/../node_modules/mqtt/build/lib/topic-alias-recv.js\"));\nconst mqtt_packet_1 = __importDefault(__webpack_require__(/*! mqtt-packet */ \"(ssr)/../node_modules/mqtt-packet/mqtt.js\"));\nconst default_message_id_provider_1 = __importDefault(__webpack_require__(/*! ./default-message-id-provider */ \"(ssr)/../node_modules/mqtt/build/lib/default-message-id-provider.js\"));\nconst readable_stream_1 = __webpack_require__(/*! readable-stream */ \"(ssr)/../node_modules/readable-stream/lib/ours/index.js\");\nconst default_1 = __importDefault(__webpack_require__(/*! rfdc/default */ \"(ssr)/../node_modules/rfdc/default.js\"));\nconst validations = __importStar(__webpack_require__(/*! ./validations */ \"(ssr)/../node_modules/mqtt/build/lib/validations.js\"));\nconst debug_1 = __importDefault(__webpack_require__(/*! debug */ \"(ssr)/../node_modules/debug/src/index.js\"));\nconst store_1 = __importDefault(__webpack_require__(/*! ./store */ \"(ssr)/../node_modules/mqtt/build/lib/store.js\"));\nconst handlers_1 = __importDefault(__webpack_require__(/*! ./handlers */ \"(ssr)/../node_modules/mqtt/build/lib/handlers/index.js\"));\nconst shared_1 = __webpack_require__(/*! ./shared */ \"(ssr)/../node_modules/mqtt/build/lib/shared.js\");\nconst TypedEmitter_1 = __webpack_require__(/*! ./TypedEmitter */ \"(ssr)/../node_modules/mqtt/build/lib/TypedEmitter.js\");\nconst PingTimer_1 = __importDefault(__webpack_require__(/*! ./PingTimer */ \"(ssr)/../node_modules/mqtt/build/lib/PingTimer.js\"));\nconst is_browser_1 = __importStar(__webpack_require__(/*! ./is-browser */ \"(ssr)/../node_modules/mqtt/build/lib/is-browser.js\"));\nconst setImmediate = globalThis.setImmediate ||\n    ((...args) => {\n        const callback = args.shift();\n        (0, shared_1.nextTick)(() => {\n            callback(...args);\n        });\n    });\nconst defaultConnectOptions = {\n    keepalive: 60,\n    reschedulePings: true,\n    protocolId: 'MQTT',\n    protocolVersion: 4,\n    reconnectPeriod: 1000,\n    connectTimeout: 30 * 1000,\n    clean: true,\n    resubscribe: true,\n    writeCache: true,\n};\nclass MqttClient extends TypedEmitter_1.TypedEventEmitter {\n    static defaultId() {\n        return `mqttjs_${Math.random().toString(16).substr(2, 8)}`;\n    }\n    constructor(streamBuilder, options) {\n        super();\n        this.options = options || {};\n        for (const k in defaultConnectOptions) {\n            if (typeof this.options[k] === 'undefined') {\n                this.options[k] = defaultConnectOptions[k];\n            }\n            else {\n                this.options[k] = options[k];\n            }\n        }\n        this.log = this.options.log || (0, debug_1.default)('mqttjs:client');\n        this.noop = this._noop.bind(this);\n        this.log('MqttClient :: version:', process.env.npm_package_version);\n        if (is_browser_1.isWebWorker) {\n            this.log('MqttClient :: environment', 'webworker');\n        }\n        else {\n            this.log('MqttClient :: environment', is_browser_1.default ? 'browser' : 'node');\n        }\n        this.log('MqttClient :: options.protocol', options.protocol);\n        this.log('MqttClient :: options.protocolVersion', options.protocolVersion);\n        this.log('MqttClient :: options.username', options.username);\n        this.log('MqttClient :: options.keepalive', options.keepalive);\n        this.log('MqttClient :: options.reconnectPeriod', options.reconnectPeriod);\n        this.log('MqttClient :: options.rejectUnauthorized', options.rejectUnauthorized);\n        this.log('MqttClient :: options.properties.topicAliasMaximum', options.properties\n            ? options.properties.topicAliasMaximum\n            : undefined);\n        this.options.clientId =\n            typeof options.clientId === 'string'\n                ? options.clientId\n                : MqttClient.defaultId();\n        this.log('MqttClient :: clientId', this.options.clientId);\n        this.options.customHandleAcks =\n            options.protocolVersion === 5 && options.customHandleAcks\n                ? options.customHandleAcks\n                : (...args) => {\n                    args[3](null, 0);\n                };\n        if (!this.options.writeCache) {\n            mqtt_packet_1.default.writeToStream.cacheNumbers = false;\n        }\n        this.streamBuilder = streamBuilder;\n        this.messageIdProvider =\n            typeof this.options.messageIdProvider === 'undefined'\n                ? new default_message_id_provider_1.default()\n                : this.options.messageIdProvider;\n        this.outgoingStore = options.outgoingStore || new store_1.default();\n        this.incomingStore = options.incomingStore || new store_1.default();\n        this.queueQoSZero =\n            options.queueQoSZero === undefined ? true : options.queueQoSZero;\n        this._resubscribeTopics = {};\n        this.messageIdToTopic = {};\n        this.pingTimer = null;\n        this.connected = false;\n        this.disconnecting = false;\n        this.reconnecting = false;\n        this.queue = [];\n        this.connackTimer = null;\n        this.reconnectTimer = null;\n        this._storeProcessing = false;\n        this._packetIdsDuringStoreProcessing = {};\n        this._storeProcessingQueue = [];\n        this.outgoing = {};\n        this._firstConnection = true;\n        if (options.properties && options.properties.topicAliasMaximum > 0) {\n            if (options.properties.topicAliasMaximum > 0xffff) {\n                this.log('MqttClient :: options.properties.topicAliasMaximum is out of range');\n            }\n            else {\n                this.topicAliasRecv = new topic_alias_recv_1.default(options.properties.topicAliasMaximum);\n            }\n        }\n        this.on('connect', () => {\n            const { queue } = this;\n            const deliver = () => {\n                const entry = queue.shift();\n                this.log('deliver :: entry %o', entry);\n                let packet = null;\n                if (!entry) {\n                    this._resubscribe();\n                    return;\n                }\n                packet = entry.packet;\n                this.log('deliver :: call _sendPacket for %o', packet);\n                let send = true;\n                if (packet.messageId && packet.messageId !== 0) {\n                    if (!this.messageIdProvider.register(packet.messageId)) {\n                        send = false;\n                    }\n                }\n                if (send) {\n                    this._sendPacket(packet, (err) => {\n                        if (entry.cb) {\n                            entry.cb(err);\n                        }\n                        deliver();\n                    });\n                }\n                else {\n                    this.log('messageId: %d has already used. The message is skipped and removed.', packet.messageId);\n                    deliver();\n                }\n            };\n            this.log('connect :: sending queued packets');\n            deliver();\n        });\n        this.on('close', () => {\n            this.log('close :: connected set to `false`');\n            this.connected = false;\n            this.log('close :: clearing connackTimer');\n            clearTimeout(this.connackTimer);\n            this.log('close :: clearing ping timer');\n            if (this.pingTimer) {\n                this.pingTimer.clear();\n                this.pingTimer = null;\n            }\n            if (this.topicAliasRecv) {\n                this.topicAliasRecv.clear();\n            }\n            this.log('close :: calling _setupReconnect');\n            this._setupReconnect();\n        });\n        if (!this.options.manualConnect) {\n            this.log('MqttClient :: setting up stream');\n            this.connect();\n        }\n    }\n    handleAuth(packet, callback) {\n        callback();\n    }\n    handleMessage(packet, callback) {\n        callback();\n    }\n    _nextId() {\n        return this.messageIdProvider.allocate();\n    }\n    getLastMessageId() {\n        return this.messageIdProvider.getLastAllocated();\n    }\n    connect() {\n        var _a;\n        const writable = new readable_stream_1.Writable();\n        const parser = mqtt_packet_1.default.parser(this.options);\n        let completeParse = null;\n        const packets = [];\n        this.log('connect :: calling method to clear reconnect');\n        this._clearReconnect();\n        this.log('connect :: using streamBuilder provided to client to create stream');\n        this.stream = this.streamBuilder(this);\n        parser.on('packet', (packet) => {\n            this.log('parser :: on packet push to packets array.');\n            packets.push(packet);\n        });\n        const work = () => {\n            this.log('work :: getting next packet in queue');\n            const packet = packets.shift();\n            if (packet) {\n                this.log('work :: packet pulled from queue');\n                (0, handlers_1.default)(this, packet, nextTickWork);\n            }\n            else {\n                this.log('work :: no packets in queue');\n                const done = completeParse;\n                completeParse = null;\n                this.log('work :: done flag is %s', !!done);\n                if (done)\n                    done();\n            }\n        };\n        const nextTickWork = () => {\n            if (packets.length) {\n                (0, shared_1.nextTick)(work);\n            }\n            else {\n                const done = completeParse;\n                completeParse = null;\n                done();\n            }\n        };\n        writable._write = (buf, enc, done) => {\n            completeParse = done;\n            this.log('writable stream :: parsing buffer');\n            parser.parse(buf);\n            work();\n        };\n        const streamErrorHandler = (error) => {\n            this.log('streamErrorHandler :: error', error.message);\n            if (error.code) {\n                this.log('streamErrorHandler :: emitting error');\n                this.emit('error', error);\n            }\n            else {\n                this.noop(error);\n            }\n        };\n        this.log('connect :: pipe stream to writable stream');\n        this.stream.pipe(writable);\n        this.stream.on('error', streamErrorHandler);\n        this.stream.on('close', () => {\n            this.log('(%s)stream :: on close', this.options.clientId);\n            this._flushVolatile();\n            this.log('stream: emit close to MqttClient');\n            this.emit('close');\n        });\n        this.log('connect: sending packet `connect`');\n        const connectPacket = {\n            cmd: 'connect',\n            protocolId: this.options.protocolId,\n            protocolVersion: this.options.protocolVersion,\n            clean: this.options.clean,\n            clientId: this.options.clientId,\n            keepalive: this.options.keepalive,\n            username: this.options.username,\n            password: this.options.password,\n            properties: this.options.properties,\n        };\n        if (this.options.will) {\n            connectPacket.will = Object.assign(Object.assign({}, this.options.will), { payload: (_a = this.options.will) === null || _a === void 0 ? void 0 : _a.payload });\n        }\n        if (this.topicAliasRecv) {\n            if (!connectPacket.properties) {\n                connectPacket.properties = {};\n            }\n            if (this.topicAliasRecv) {\n                connectPacket.properties.topicAliasMaximum =\n                    this.topicAliasRecv.max;\n            }\n        }\n        this._writePacket(connectPacket);\n        parser.on('error', this.emit.bind(this, 'error'));\n        if (this.options.properties) {\n            if (!this.options.properties.authenticationMethod &&\n                this.options.properties.authenticationData) {\n                this.end(() => this.emit('error', new Error('Packet has no Authentication Method')));\n                return this;\n            }\n            if (this.options.properties.authenticationMethod &&\n                this.options.authPacket &&\n                typeof this.options.authPacket === 'object') {\n                const authPacket = Object.assign({ cmd: 'auth', reasonCode: 0 }, this.options.authPacket);\n                this._writePacket(authPacket);\n            }\n        }\n        this.stream.setMaxListeners(1000);\n        clearTimeout(this.connackTimer);\n        this.connackTimer = setTimeout(() => {\n            this.log('!!connectTimeout hit!! Calling _cleanUp with force `true`');\n            this.emit('error', new Error('connack timeout'));\n            this._cleanUp(true);\n        }, this.options.connectTimeout);\n        return this;\n    }\n    publish(topic, message, opts, callback) {\n        this.log('publish :: message `%s` to topic `%s`', message, topic);\n        const { options } = this;\n        if (typeof opts === 'function') {\n            callback = opts;\n            opts = null;\n        }\n        opts = opts || {};\n        const defaultOpts = {\n            qos: 0,\n            retain: false,\n            dup: false,\n        };\n        opts = Object.assign(Object.assign({}, defaultOpts), opts);\n        const { qos, retain, dup, properties, cbStorePut } = opts;\n        if (this._checkDisconnecting(callback)) {\n            return this;\n        }\n        const publishProc = () => {\n            let messageId = 0;\n            if (qos === 1 || qos === 2) {\n                messageId = this._nextId();\n                if (messageId === null) {\n                    this.log('No messageId left');\n                    return false;\n                }\n            }\n            const packet = {\n                cmd: 'publish',\n                topic,\n                payload: message,\n                qos,\n                retain,\n                messageId,\n                dup,\n            };\n            if (options.protocolVersion === 5) {\n                packet.properties = properties;\n            }\n            this.log('publish :: qos', qos);\n            switch (qos) {\n                case 1:\n                case 2:\n                    this.outgoing[packet.messageId] = {\n                        volatile: false,\n                        cb: callback || this.noop,\n                    };\n                    this.log('MqttClient:publish: packet cmd: %s', packet.cmd);\n                    this._sendPacket(packet, undefined, cbStorePut);\n                    break;\n                default:\n                    this.log('MqttClient:publish: packet cmd: %s', packet.cmd);\n                    this._sendPacket(packet, callback, cbStorePut);\n                    break;\n            }\n            return true;\n        };\n        if (this._storeProcessing ||\n            this._storeProcessingQueue.length > 0 ||\n            !publishProc()) {\n            this._storeProcessingQueue.push({\n                invoke: publishProc,\n                cbStorePut: opts.cbStorePut,\n                callback,\n            });\n        }\n        return this;\n    }\n    publishAsync(topic, message, opts) {\n        return new Promise((resolve, reject) => {\n            this.publish(topic, message, opts, (err, packet) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(packet);\n                }\n            });\n        });\n    }\n    subscribe(topicObject, opts, callback) {\n        const version = this.options.protocolVersion;\n        if (typeof opts === 'function') {\n            callback = opts;\n        }\n        callback = callback || this.noop;\n        let resubscribe = false;\n        let topicsList = [];\n        if (typeof topicObject === 'string') {\n            topicObject = [topicObject];\n            topicsList = topicObject;\n        }\n        else if (Array.isArray(topicObject)) {\n            topicsList = topicObject;\n        }\n        else if (typeof topicObject === 'object') {\n            resubscribe = topicObject.resubscribe;\n            delete topicObject.resubscribe;\n            topicsList = Object.keys(topicObject);\n        }\n        const invalidTopic = validations.validateTopics(topicsList);\n        if (invalidTopic !== null) {\n            setImmediate(callback, new Error(`Invalid topic ${invalidTopic}`));\n            return this;\n        }\n        if (this._checkDisconnecting(callback)) {\n            this.log('subscribe: discconecting true');\n            return this;\n        }\n        const defaultOpts = {\n            qos: 0,\n        };\n        if (version === 5) {\n            defaultOpts.nl = false;\n            defaultOpts.rap = false;\n            defaultOpts.rh = 0;\n        }\n        opts = Object.assign(Object.assign({}, defaultOpts), opts);\n        const properties = opts.properties;\n        const subs = [];\n        const parseSub = (topic, subOptions) => {\n            subOptions = (subOptions || opts);\n            if (!Object.prototype.hasOwnProperty.call(this._resubscribeTopics, topic) ||\n                this._resubscribeTopics[topic].qos < subOptions.qos ||\n                resubscribe) {\n                const currentOpts = {\n                    topic,\n                    qos: subOptions.qos,\n                };\n                if (version === 5) {\n                    currentOpts.nl = subOptions.nl;\n                    currentOpts.rap = subOptions.rap;\n                    currentOpts.rh = subOptions.rh;\n                    currentOpts.properties = properties;\n                }\n                this.log('subscribe: pushing topic `%s` and qos `%s` to subs list', currentOpts.topic, currentOpts.qos);\n                subs.push(currentOpts);\n            }\n        };\n        if (Array.isArray(topicObject)) {\n            topicObject.forEach((topic) => {\n                this.log('subscribe: array topic %s', topic);\n                parseSub(topic);\n            });\n        }\n        else {\n            Object.keys(topicObject).forEach((topic) => {\n                this.log('subscribe: object topic %s, %o', topic, topicObject[topic]);\n                parseSub(topic, topicObject[topic]);\n            });\n        }\n        if (!subs.length) {\n            callback(null, []);\n            return this;\n        }\n        const subscribeProc = () => {\n            const messageId = this._nextId();\n            if (messageId === null) {\n                this.log('No messageId left');\n                return false;\n            }\n            const packet = {\n                cmd: 'subscribe',\n                subscriptions: subs,\n                messageId,\n            };\n            if (properties) {\n                packet.properties = properties;\n            }\n            if (this.options.resubscribe) {\n                this.log('subscribe :: resubscribe true');\n                const topics = [];\n                subs.forEach((sub) => {\n                    if (this.options.reconnectPeriod > 0) {\n                        const topic = { qos: sub.qos };\n                        if (version === 5) {\n                            topic.nl = sub.nl || false;\n                            topic.rap = sub.rap || false;\n                            topic.rh = sub.rh || 0;\n                            topic.properties = sub.properties;\n                        }\n                        this._resubscribeTopics[sub.topic] = topic;\n                        topics.push(sub.topic);\n                    }\n                });\n                this.messageIdToTopic[packet.messageId] = topics;\n            }\n            this.outgoing[packet.messageId] = {\n                volatile: true,\n                cb(err, packet2) {\n                    if (!err) {\n                        const { granted } = packet2;\n                        for (let i = 0; i < granted.length; i += 1) {\n                            subs[i].qos = granted[i];\n                        }\n                    }\n                    callback(err, subs);\n                },\n            };\n            this.log('subscribe :: call _sendPacket');\n            this._sendPacket(packet);\n            return true;\n        };\n        if (this._storeProcessing ||\n            this._storeProcessingQueue.length > 0 ||\n            !subscribeProc()) {\n            this._storeProcessingQueue.push({\n                invoke: subscribeProc,\n                callback,\n            });\n        }\n        return this;\n    }\n    subscribeAsync(topicObject, opts) {\n        return new Promise((resolve, reject) => {\n            this.subscribe(topicObject, opts, (err, granted) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(granted);\n                }\n            });\n        });\n    }\n    unsubscribe(topic, opts, callback) {\n        if (typeof topic === 'string') {\n            topic = [topic];\n        }\n        if (typeof opts === 'function') {\n            callback = opts;\n        }\n        callback = callback || this.noop;\n        const invalidTopic = validations.validateTopics(topic);\n        if (invalidTopic !== null) {\n            setImmediate(callback, new Error(`Invalid topic ${invalidTopic}`));\n            return this;\n        }\n        if (this._checkDisconnecting(callback)) {\n            return this;\n        }\n        const unsubscribeProc = () => {\n            const messageId = this._nextId();\n            if (messageId === null) {\n                this.log('No messageId left');\n                return false;\n            }\n            const packet = {\n                cmd: 'unsubscribe',\n                messageId,\n                unsubscriptions: [],\n            };\n            if (typeof topic === 'string') {\n                packet.unsubscriptions = [topic];\n            }\n            else if (Array.isArray(topic)) {\n                packet.unsubscriptions = topic;\n            }\n            if (this.options.resubscribe) {\n                packet.unsubscriptions.forEach((topic2) => {\n                    delete this._resubscribeTopics[topic2];\n                });\n            }\n            if (typeof opts === 'object' && opts.properties) {\n                packet.properties = opts.properties;\n            }\n            this.outgoing[packet.messageId] = {\n                volatile: true,\n                cb: callback,\n            };\n            this.log('unsubscribe: call _sendPacket');\n            this._sendPacket(packet);\n            return true;\n        };\n        if (this._storeProcessing ||\n            this._storeProcessingQueue.length > 0 ||\n            !unsubscribeProc()) {\n            this._storeProcessingQueue.push({\n                invoke: unsubscribeProc,\n                callback,\n            });\n        }\n        return this;\n    }\n    unsubscribeAsync(topic, opts) {\n        return new Promise((resolve, reject) => {\n            this.unsubscribe(topic, opts, (err, packet) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(packet);\n                }\n            });\n        });\n    }\n    end(force, opts, cb) {\n        this.log('end :: (%s)', this.options.clientId);\n        if (force == null || typeof force !== 'boolean') {\n            cb = cb || opts;\n            opts = force;\n            force = false;\n        }\n        if (typeof opts !== 'object') {\n            cb = cb || opts;\n            opts = null;\n        }\n        this.log('end :: cb? %s', !!cb);\n        if (!cb || typeof cb !== 'function') {\n            cb = this.noop;\n        }\n        const closeStores = () => {\n            this.log('end :: closeStores: closing incoming and outgoing stores');\n            this.disconnected = true;\n            this.incomingStore.close((e1) => {\n                this.outgoingStore.close((e2) => {\n                    this.log('end :: closeStores: emitting end');\n                    this.emit('end');\n                    if (cb) {\n                        const err = e1 || e2;\n                        this.log('end :: closeStores: invoking callback with args');\n                        cb(err);\n                    }\n                });\n            });\n            if (this._deferredReconnect) {\n                this._deferredReconnect();\n            }\n        };\n        const finish = () => {\n            this.log('end :: (%s) :: finish :: calling _cleanUp with force %s', this.options.clientId, force);\n            this._cleanUp(force, () => {\n                this.log('end :: finish :: calling process.nextTick on closeStores');\n                (0, shared_1.nextTick)(closeStores);\n            }, opts);\n        };\n        if (this.disconnecting) {\n            cb();\n            return this;\n        }\n        this._clearReconnect();\n        this.disconnecting = true;\n        if (!force && Object.keys(this.outgoing).length > 0) {\n            this.log('end :: (%s) :: calling finish in 10ms once outgoing is empty', this.options.clientId);\n            this.once('outgoingEmpty', setTimeout.bind(null, finish, 10));\n        }\n        else {\n            this.log('end :: (%s) :: immediately calling finish', this.options.clientId);\n            finish();\n        }\n        return this;\n    }\n    endAsync(force, opts) {\n        return new Promise((resolve, reject) => {\n            this.end(force, opts, (err) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve();\n                }\n            });\n        });\n    }\n    removeOutgoingMessage(messageId) {\n        if (this.outgoing[messageId]) {\n            const { cb } = this.outgoing[messageId];\n            this._removeOutgoingAndStoreMessage(messageId, () => {\n                cb(new Error('Message removed'));\n            });\n        }\n        return this;\n    }\n    reconnect(opts) {\n        this.log('client reconnect');\n        const f = () => {\n            if (opts) {\n                this.options.incomingStore = opts.incomingStore;\n                this.options.outgoingStore = opts.outgoingStore;\n            }\n            else {\n                this.options.incomingStore = null;\n                this.options.outgoingStore = null;\n            }\n            this.incomingStore = this.options.incomingStore || new store_1.default();\n            this.outgoingStore = this.options.outgoingStore || new store_1.default();\n            this.disconnecting = false;\n            this.disconnected = false;\n            this._deferredReconnect = null;\n            this._reconnect();\n        };\n        if (this.disconnecting && !this.disconnected) {\n            this._deferredReconnect = f;\n        }\n        else {\n            f();\n        }\n        return this;\n    }\n    _flushVolatile() {\n        if (this.outgoing) {\n            this.log('_flushVolatile :: deleting volatile messages from the queue and setting their callbacks as error function');\n            Object.keys(this.outgoing).forEach((messageId) => {\n                if (this.outgoing[messageId].volatile &&\n                    typeof this.outgoing[messageId].cb === 'function') {\n                    this.outgoing[messageId].cb(new Error('Connection closed'));\n                    delete this.outgoing[messageId];\n                }\n            });\n        }\n    }\n    _flush() {\n        if (this.outgoing) {\n            this.log('_flush: queue exists? %b', !!this.outgoing);\n            Object.keys(this.outgoing).forEach((messageId) => {\n                if (typeof this.outgoing[messageId].cb === 'function') {\n                    this.outgoing[messageId].cb(new Error('Connection closed'));\n                    delete this.outgoing[messageId];\n                }\n            });\n        }\n    }\n    _removeTopicAliasAndRecoverTopicName(packet) {\n        let alias;\n        if (packet.properties) {\n            alias = packet.properties.topicAlias;\n        }\n        let topic = packet.topic.toString();\n        this.log('_removeTopicAliasAndRecoverTopicName :: alias %d, topic %o', alias, topic);\n        if (topic.length === 0) {\n            if (typeof alias === 'undefined') {\n                return new Error('Unregistered Topic Alias');\n            }\n            topic = this.topicAliasSend.getTopicByAlias(alias);\n            if (typeof topic === 'undefined') {\n                return new Error('Unregistered Topic Alias');\n            }\n            packet.topic = topic;\n        }\n        if (alias) {\n            delete packet.properties.topicAlias;\n        }\n    }\n    _checkDisconnecting(callback) {\n        if (this.disconnecting) {\n            if (callback && callback !== this.noop) {\n                callback(new Error('client disconnecting'));\n            }\n            else {\n                this.emit('error', new Error('client disconnecting'));\n            }\n        }\n        return this.disconnecting;\n    }\n    _reconnect() {\n        this.log('_reconnect: emitting reconnect to client');\n        this.emit('reconnect');\n        if (this.connected) {\n            this.end(() => {\n                this.connect();\n            });\n            this.log('client already connected. disconnecting first.');\n        }\n        else {\n            this.log('_reconnect: calling connect');\n            this.connect();\n        }\n    }\n    _setupReconnect() {\n        if (!this.disconnecting &&\n            !this.reconnectTimer &&\n            this.options.reconnectPeriod > 0) {\n            if (!this.reconnecting) {\n                this.log('_setupReconnect :: emit `offline` state');\n                this.emit('offline');\n                this.log('_setupReconnect :: set `reconnecting` to `true`');\n                this.reconnecting = true;\n            }\n            this.log('_setupReconnect :: setting reconnectTimer for %d ms', this.options.reconnectPeriod);\n            this.reconnectTimer = setInterval(() => {\n                this.log('reconnectTimer :: reconnect triggered!');\n                this._reconnect();\n            }, this.options.reconnectPeriod);\n        }\n        else {\n            this.log('_setupReconnect :: doing nothing...');\n        }\n    }\n    _clearReconnect() {\n        this.log('_clearReconnect : clearing reconnect timer');\n        if (this.reconnectTimer) {\n            clearInterval(this.reconnectTimer);\n            this.reconnectTimer = null;\n        }\n    }\n    _cleanUp(forced, done, opts = {}) {\n        if (done) {\n            this.log('_cleanUp :: done callback provided for on stream close');\n            this.stream.on('close', done);\n        }\n        this.log('_cleanUp :: forced? %s', forced);\n        if (forced) {\n            if (this.options.reconnectPeriod === 0 && this.options.clean) {\n                this._flush();\n            }\n            this.log('_cleanUp :: (%s) :: destroying stream', this.options.clientId);\n            this.stream.destroy();\n        }\n        else {\n            const packet = Object.assign({ cmd: 'disconnect' }, opts);\n            this.log('_cleanUp :: (%s) :: call _sendPacket with disconnect packet', this.options.clientId);\n            this._sendPacket(packet, () => {\n                this.log('_cleanUp :: (%s) :: destroying stream', this.options.clientId);\n                setImmediate(() => {\n                    this.stream.end(() => {\n                        this.log('_cleanUp :: (%s) :: stream destroyed', this.options.clientId);\n                    });\n                });\n            });\n        }\n        if (!this.disconnecting && !this.reconnecting) {\n            this.log('_cleanUp :: client not disconnecting/reconnecting. Clearing and resetting reconnect.');\n            this._clearReconnect();\n            this._setupReconnect();\n        }\n        if (this.pingTimer) {\n            this.log('_cleanUp :: clearing pingTimer');\n            this.pingTimer.clear();\n            this.pingTimer = null;\n        }\n        if (done && !this.connected) {\n            this.log('_cleanUp :: (%s) :: removing stream `done` callback `close` listener', this.options.clientId);\n            this.stream.removeListener('close', done);\n            done();\n        }\n    }\n    _storeAndSend(packet, cb, cbStorePut) {\n        this.log('storeAndSend :: store packet with cmd %s to outgoingStore', packet.cmd);\n        let storePacket = packet;\n        let err;\n        if (storePacket.cmd === 'publish') {\n            storePacket = (0, default_1.default)(packet);\n            err = this._removeTopicAliasAndRecoverTopicName(storePacket);\n            if (err) {\n                return cb && cb(err);\n            }\n        }\n        this.outgoingStore.put(storePacket, (err2) => {\n            if (err2) {\n                return cb && cb(err2);\n            }\n            cbStorePut();\n            this._writePacket(packet, cb);\n        });\n    }\n    _applyTopicAlias(packet) {\n        if (this.options.protocolVersion === 5) {\n            if (packet.cmd === 'publish') {\n                let alias;\n                if (packet.properties) {\n                    alias = packet.properties.topicAlias;\n                }\n                const topic = packet.topic.toString();\n                if (this.topicAliasSend) {\n                    if (alias) {\n                        if (topic.length !== 0) {\n                            this.log('applyTopicAlias :: register topic: %s - alias: %d', topic, alias);\n                            if (!this.topicAliasSend.put(topic, alias)) {\n                                this.log('applyTopicAlias :: error out of range. topic: %s - alias: %d', topic, alias);\n                                return new Error('Sending Topic Alias out of range');\n                            }\n                        }\n                    }\n                    else if (topic.length !== 0) {\n                        if (this.options.autoAssignTopicAlias) {\n                            alias = this.topicAliasSend.getAliasByTopic(topic);\n                            if (alias) {\n                                packet.topic = '';\n                                packet.properties = Object.assign(Object.assign({}, packet.properties), { topicAlias: alias });\n                                this.log('applyTopicAlias :: auto assign(use) topic: %s - alias: %d', topic, alias);\n                            }\n                            else {\n                                alias = this.topicAliasSend.getLruAlias();\n                                this.topicAliasSend.put(topic, alias);\n                                packet.properties = Object.assign(Object.assign({}, packet.properties), { topicAlias: alias });\n                                this.log('applyTopicAlias :: auto assign topic: %s - alias: %d', topic, alias);\n                            }\n                        }\n                        else if (this.options.autoUseTopicAlias) {\n                            alias = this.topicAliasSend.getAliasByTopic(topic);\n                            if (alias) {\n                                packet.topic = '';\n                                packet.properties = Object.assign(Object.assign({}, packet.properties), { topicAlias: alias });\n                                this.log('applyTopicAlias :: auto use topic: %s - alias: %d', topic, alias);\n                            }\n                        }\n                    }\n                }\n                else if (alias) {\n                    this.log('applyTopicAlias :: error out of range. topic: %s - alias: %d', topic, alias);\n                    return new Error('Sending Topic Alias out of range');\n                }\n            }\n        }\n    }\n    _noop(err) {\n        this.log('noop ::', err);\n    }\n    _writePacket(packet, cb) {\n        this.log('_writePacket :: packet: %O', packet);\n        this.log('_writePacket :: emitting `packetsend`');\n        this.emit('packetsend', packet);\n        this._shiftPingInterval();\n        this.log('_writePacket :: writing to stream');\n        const result = mqtt_packet_1.default.writeToStream(packet, this.stream, this.options);\n        this.log('_writePacket :: writeToStream result %s', result);\n        if (!result && cb && cb !== this.noop) {\n            this.log('_writePacket :: handle events on `drain` once through callback.');\n            this.stream.once('drain', cb);\n        }\n        else if (cb) {\n            this.log('_writePacket :: invoking cb');\n            cb();\n        }\n    }\n    _sendPacket(packet, cb, cbStorePut, noStore) {\n        this.log('_sendPacket :: (%s) ::  start', this.options.clientId);\n        cbStorePut = cbStorePut || this.noop;\n        cb = cb || this.noop;\n        const err = this._applyTopicAlias(packet);\n        if (err) {\n            cb(err);\n            return;\n        }\n        if (!this.connected) {\n            if (packet.cmd === 'auth') {\n                this._writePacket(packet, cb);\n                return;\n            }\n            this.log('_sendPacket :: client not connected. Storing packet offline.');\n            this._storePacket(packet, cb, cbStorePut);\n            return;\n        }\n        if (noStore) {\n            this._writePacket(packet, cb);\n            return;\n        }\n        switch (packet.cmd) {\n            case 'publish':\n                break;\n            case 'pubrel':\n                this._storeAndSend(packet, cb, cbStorePut);\n                return;\n            default:\n                this._writePacket(packet, cb);\n                return;\n        }\n        switch (packet.qos) {\n            case 2:\n            case 1:\n                this._storeAndSend(packet, cb, cbStorePut);\n                break;\n            case 0:\n            default:\n                this._writePacket(packet, cb);\n                break;\n        }\n        this.log('_sendPacket :: (%s) ::  end', this.options.clientId);\n    }\n    _storePacket(packet, cb, cbStorePut) {\n        this.log('_storePacket :: packet: %o', packet);\n        this.log('_storePacket :: cb? %s', !!cb);\n        cbStorePut = cbStorePut || this.noop;\n        let storePacket = packet;\n        if (storePacket.cmd === 'publish') {\n            storePacket = (0, default_1.default)(packet);\n            const err = this._removeTopicAliasAndRecoverTopicName(storePacket);\n            if (err) {\n                return cb && cb(err);\n            }\n        }\n        const qos = storePacket.qos || 0;\n        if ((qos === 0 && this.queueQoSZero) || storePacket.cmd !== 'publish') {\n            this.queue.push({ packet: storePacket, cb });\n        }\n        else if (qos > 0) {\n            cb = this.outgoing[storePacket.messageId]\n                ? this.outgoing[storePacket.messageId].cb\n                : null;\n            this.outgoingStore.put(storePacket, (err) => {\n                if (err) {\n                    return cb && cb(err);\n                }\n                cbStorePut();\n            });\n        }\n        else if (cb) {\n            cb(new Error('No connection to broker'));\n        }\n    }\n    _setupPingTimer() {\n        this.log('_setupPingTimer :: keepalive %d (seconds)', this.options.keepalive);\n        if (!this.pingTimer && this.options.keepalive) {\n            this.pingResp = true;\n            this.pingTimer = new PingTimer_1.default(this.options.keepalive, () => {\n                this._checkPing();\n            });\n        }\n    }\n    _shiftPingInterval() {\n        if (this.pingTimer &&\n            this.options.keepalive &&\n            this.options.reschedulePings) {\n            this.pingTimer.reschedule();\n        }\n    }\n    _checkPing() {\n        this.log('_checkPing :: checking ping...');\n        if (this.pingResp) {\n            this.log('_checkPing :: ping response received. Clearing flag and sending `pingreq`');\n            this.pingResp = false;\n            this._sendPacket({ cmd: 'pingreq' });\n        }\n        else {\n            this.emit('error', new Error('Keepalive timeout'));\n            this.log('_checkPing :: calling _cleanUp with force true');\n            this._cleanUp(true);\n        }\n    }\n    _resubscribe() {\n        this.log('_resubscribe');\n        const _resubscribeTopicsKeys = Object.keys(this._resubscribeTopics);\n        if (!this._firstConnection &&\n            (this.options.clean ||\n                (this.options.protocolVersion >= 4 &&\n                    !this.connackPacket.sessionPresent)) &&\n            _resubscribeTopicsKeys.length > 0) {\n            if (this.options.resubscribe) {\n                if (this.options.protocolVersion === 5) {\n                    this.log('_resubscribe: protocolVersion 5');\n                    for (let topicI = 0; topicI < _resubscribeTopicsKeys.length; topicI++) {\n                        const resubscribeTopic = {};\n                        resubscribeTopic[_resubscribeTopicsKeys[topicI]] =\n                            this._resubscribeTopics[_resubscribeTopicsKeys[topicI]];\n                        resubscribeTopic.resubscribe = true;\n                        this.subscribe(resubscribeTopic, {\n                            properties: resubscribeTopic[_resubscribeTopicsKeys[topicI]]\n                                .properties,\n                        });\n                    }\n                }\n                else {\n                    this._resubscribeTopics.resubscribe = true;\n                    this.subscribe(this._resubscribeTopics);\n                }\n            }\n            else {\n                this._resubscribeTopics = {};\n            }\n        }\n        this._firstConnection = false;\n    }\n    _onConnect(packet) {\n        if (this.disconnected) {\n            this.emit('connect', packet);\n            return;\n        }\n        this.connackPacket = packet;\n        this.messageIdProvider.clear();\n        this._setupPingTimer();\n        this.connected = true;\n        const startStreamProcess = () => {\n            let outStore = this.outgoingStore.createStream();\n            const remove = () => {\n                outStore.destroy();\n                outStore = null;\n                this._flushStoreProcessingQueue();\n                clearStoreProcessing();\n            };\n            const clearStoreProcessing = () => {\n                this._storeProcessing = false;\n                this._packetIdsDuringStoreProcessing = {};\n            };\n            this.once('close', remove);\n            outStore.on('error', (err) => {\n                clearStoreProcessing();\n                this._flushStoreProcessingQueue();\n                this.removeListener('close', remove);\n                this.emit('error', err);\n            });\n            const storeDeliver = () => {\n                if (!outStore) {\n                    return;\n                }\n                const packet2 = outStore.read(1);\n                let cb;\n                if (!packet2) {\n                    outStore.once('readable', storeDeliver);\n                    return;\n                }\n                this._storeProcessing = true;\n                if (this._packetIdsDuringStoreProcessing[packet2.messageId]) {\n                    storeDeliver();\n                    return;\n                }\n                if (!this.disconnecting && !this.reconnectTimer) {\n                    cb = this.outgoing[packet2.messageId]\n                        ? this.outgoing[packet2.messageId].cb\n                        : null;\n                    this.outgoing[packet2.messageId] = {\n                        volatile: false,\n                        cb(err, status) {\n                            if (cb) {\n                                cb(err, status);\n                            }\n                            storeDeliver();\n                        },\n                    };\n                    this._packetIdsDuringStoreProcessing[packet2.messageId] =\n                        true;\n                    if (this.messageIdProvider.register(packet2.messageId)) {\n                        this._sendPacket(packet2, undefined, undefined, true);\n                    }\n                    else {\n                        this.log('messageId: %d has already used.', packet2.messageId);\n                    }\n                }\n                else if (outStore.destroy) {\n                    outStore.destroy();\n                }\n            };\n            outStore.on('end', () => {\n                let allProcessed = true;\n                for (const id in this._packetIdsDuringStoreProcessing) {\n                    if (!this._packetIdsDuringStoreProcessing[id]) {\n                        allProcessed = false;\n                        break;\n                    }\n                }\n                this.removeListener('close', remove);\n                if (allProcessed) {\n                    clearStoreProcessing();\n                    this._invokeAllStoreProcessingQueue();\n                    this.emit('connect', packet);\n                }\n                else {\n                    startStreamProcess();\n                }\n            });\n            storeDeliver();\n        };\n        startStreamProcess();\n    }\n    _invokeStoreProcessingQueue() {\n        if (!this._storeProcessing && this._storeProcessingQueue.length > 0) {\n            const f = this._storeProcessingQueue[0];\n            if (f && f.invoke()) {\n                this._storeProcessingQueue.shift();\n                return true;\n            }\n        }\n        return false;\n    }\n    _invokeAllStoreProcessingQueue() {\n        while (this._invokeStoreProcessingQueue()) {\n        }\n    }\n    _flushStoreProcessingQueue() {\n        for (const f of this._storeProcessingQueue) {\n            if (f.cbStorePut)\n                f.cbStorePut(new Error('Connection closed'));\n            if (f.callback)\n                f.callback(new Error('Connection closed'));\n        }\n        this._storeProcessingQueue.splice(0);\n    }\n    _removeOutgoingAndStoreMessage(messageId, cb) {\n        delete this.outgoing[messageId];\n        this.outgoingStore.del({ messageId }, (err, packet) => {\n            cb(err, packet);\n            this.messageIdProvider.deallocate(messageId);\n            this._invokeStoreProcessingQueue();\n        });\n    }\n}\nexports[\"default\"] = MqttClient;\n//# sourceMappingURL=client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/client.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/connect/ali.js":
/*!*****************************************************!*\
  !*** ../node_modules/mqtt/build/lib/connect/ali.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst readable_stream_1 = __webpack_require__(/*! readable-stream */ \"(ssr)/../node_modules/readable-stream/lib/ours/index.js\");\nconst BufferedDuplex_1 = __webpack_require__(/*! ../BufferedDuplex */ \"(ssr)/../node_modules/mqtt/build/lib/BufferedDuplex.js\");\nlet my;\nlet proxy;\nlet stream;\nlet isInitialized = false;\nfunction buildProxy() {\n    const _proxy = new readable_stream_1.Transform();\n    _proxy._write = (chunk, encoding, next) => {\n        my.sendSocketMessage({\n            data: chunk.buffer,\n            success() {\n                next();\n            },\n            fail() {\n                next(new Error());\n            },\n        });\n    };\n    _proxy._flush = (done) => {\n        my.closeSocket({\n            success() {\n                done();\n            },\n        });\n    };\n    return _proxy;\n}\nfunction setDefaultOpts(opts) {\n    if (!opts.hostname) {\n        opts.hostname = 'localhost';\n    }\n    if (!opts.path) {\n        opts.path = '/';\n    }\n    if (!opts.wsOptions) {\n        opts.wsOptions = {};\n    }\n}\nfunction buildUrl(opts, client) {\n    const protocol = opts.protocol === 'alis' ? 'wss' : 'ws';\n    let url = `${protocol}://${opts.hostname}${opts.path}`;\n    if (opts.port && opts.port !== 80 && opts.port !== 443) {\n        url = `${protocol}://${opts.hostname}:${opts.port}${opts.path}`;\n    }\n    if (typeof opts.transformWsUrl === 'function') {\n        url = opts.transformWsUrl(url, opts, client);\n    }\n    return url;\n}\nfunction bindEventHandler() {\n    if (isInitialized)\n        return;\n    isInitialized = true;\n    my.onSocketOpen(() => {\n        stream.socketReady();\n    });\n    my.onSocketMessage((res) => {\n        if (typeof res.data === 'string') {\n            const buffer = buffer_1.Buffer.from(res.data, 'base64');\n            proxy.push(buffer);\n        }\n        else {\n            const reader = new FileReader();\n            reader.addEventListener('load', () => {\n                let data = reader.result;\n                if (data instanceof ArrayBuffer)\n                    data = buffer_1.Buffer.from(data);\n                else\n                    data = buffer_1.Buffer.from(data, 'utf8');\n                proxy.push(data);\n            });\n            reader.readAsArrayBuffer(res.data);\n        }\n    });\n    my.onSocketClose(() => {\n        stream.end();\n        stream.destroy();\n    });\n    my.onSocketError((err) => {\n        stream.destroy(err);\n    });\n}\nconst buildStream = (client, opts) => {\n    opts.hostname = opts.hostname || opts.host;\n    if (!opts.hostname) {\n        throw new Error('Could not determine host. Specify host manually.');\n    }\n    const websocketSubProtocol = opts.protocolId === 'MQIsdp' && opts.protocolVersion === 3\n        ? 'mqttv3.1'\n        : 'mqtt';\n    setDefaultOpts(opts);\n    const url = buildUrl(opts, client);\n    my = opts.my;\n    my.connectSocket({\n        url,\n        protocols: websocketSubProtocol,\n    });\n    proxy = buildProxy();\n    stream = new BufferedDuplex_1.BufferedDuplex(opts, proxy, my);\n    bindEventHandler();\n    return stream;\n};\nexports[\"default\"] = buildStream;\n//# sourceMappingURL=ali.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL2Nvbm5lY3QvYWxpLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixtQkFBTyxDQUFDLHNCQUFRO0FBQ2pDLDBCQUEwQixtQkFBTyxDQUFDLGdGQUFpQjtBQUNuRCx5QkFBeUIsbUJBQU8sQ0FBQyxpRkFBbUI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixTQUFTLEtBQUssY0FBYyxFQUFFLFVBQVU7QUFDekQ7QUFDQSxpQkFBaUIsU0FBUyxLQUFLLGNBQWMsR0FBRyxVQUFVLEVBQUUsVUFBVTtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uLi9ub2RlX21vZHVsZXMvbXF0dC9idWlsZC9saWIvY29ubmVjdC9hbGkuanM/NmI3YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlclwiKTtcbmNvbnN0IHJlYWRhYmxlX3N0cmVhbV8xID0gcmVxdWlyZShcInJlYWRhYmxlLXN0cmVhbVwiKTtcbmNvbnN0IEJ1ZmZlcmVkRHVwbGV4XzEgPSByZXF1aXJlKFwiLi4vQnVmZmVyZWREdXBsZXhcIik7XG5sZXQgbXk7XG5sZXQgcHJveHk7XG5sZXQgc3RyZWFtO1xubGV0IGlzSW5pdGlhbGl6ZWQgPSBmYWxzZTtcbmZ1bmN0aW9uIGJ1aWxkUHJveHkoKSB7XG4gICAgY29uc3QgX3Byb3h5ID0gbmV3IHJlYWRhYmxlX3N0cmVhbV8xLlRyYW5zZm9ybSgpO1xuICAgIF9wcm94eS5fd3JpdGUgPSAoY2h1bmssIGVuY29kaW5nLCBuZXh0KSA9PiB7XG4gICAgICAgIG15LnNlbmRTb2NrZXRNZXNzYWdlKHtcbiAgICAgICAgICAgIGRhdGE6IGNodW5rLmJ1ZmZlcixcbiAgICAgICAgICAgIHN1Y2Nlc3MoKSB7XG4gICAgICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWwoKSB7XG4gICAgICAgICAgICAgICAgbmV4dChuZXcgRXJyb3IoKSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIF9wcm94eS5fZmx1c2ggPSAoZG9uZSkgPT4ge1xuICAgICAgICBteS5jbG9zZVNvY2tldCh7XG4gICAgICAgICAgICBzdWNjZXNzKCkge1xuICAgICAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgcmV0dXJuIF9wcm94eTtcbn1cbmZ1bmN0aW9uIHNldERlZmF1bHRPcHRzKG9wdHMpIHtcbiAgICBpZiAoIW9wdHMuaG9zdG5hbWUpIHtcbiAgICAgICAgb3B0cy5ob3N0bmFtZSA9ICdsb2NhbGhvc3QnO1xuICAgIH1cbiAgICBpZiAoIW9wdHMucGF0aCkge1xuICAgICAgICBvcHRzLnBhdGggPSAnLyc7XG4gICAgfVxuICAgIGlmICghb3B0cy53c09wdGlvbnMpIHtcbiAgICAgICAgb3B0cy53c09wdGlvbnMgPSB7fTtcbiAgICB9XG59XG5mdW5jdGlvbiBidWlsZFVybChvcHRzLCBjbGllbnQpIHtcbiAgICBjb25zdCBwcm90b2NvbCA9IG9wdHMucHJvdG9jb2wgPT09ICdhbGlzJyA/ICd3c3MnIDogJ3dzJztcbiAgICBsZXQgdXJsID0gYCR7cHJvdG9jb2x9Oi8vJHtvcHRzLmhvc3RuYW1lfSR7b3B0cy5wYXRofWA7XG4gICAgaWYgKG9wdHMucG9ydCAmJiBvcHRzLnBvcnQgIT09IDgwICYmIG9wdHMucG9ydCAhPT0gNDQzKSB7XG4gICAgICAgIHVybCA9IGAke3Byb3RvY29sfTovLyR7b3B0cy5ob3N0bmFtZX06JHtvcHRzLnBvcnR9JHtvcHRzLnBhdGh9YDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBvcHRzLnRyYW5zZm9ybVdzVXJsID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHVybCA9IG9wdHMudHJhbnNmb3JtV3NVcmwodXJsLCBvcHRzLCBjbGllbnQpO1xuICAgIH1cbiAgICByZXR1cm4gdXJsO1xufVxuZnVuY3Rpb24gYmluZEV2ZW50SGFuZGxlcigpIHtcbiAgICBpZiAoaXNJbml0aWFsaXplZClcbiAgICAgICAgcmV0dXJuO1xuICAgIGlzSW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgIG15Lm9uU29ja2V0T3BlbigoKSA9PiB7XG4gICAgICAgIHN0cmVhbS5zb2NrZXRSZWFkeSgpO1xuICAgIH0pO1xuICAgIG15Lm9uU29ja2V0TWVzc2FnZSgocmVzKSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2YgcmVzLmRhdGEgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBjb25zdCBidWZmZXIgPSBidWZmZXJfMS5CdWZmZXIuZnJvbShyZXMuZGF0YSwgJ2Jhc2U2NCcpO1xuICAgICAgICAgICAgcHJveHkucHVzaChidWZmZXIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcbiAgICAgICAgICAgIHJlYWRlci5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBkYXRhID0gcmVhZGVyLnJlc3VsdDtcbiAgICAgICAgICAgICAgICBpZiAoZGF0YSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKVxuICAgICAgICAgICAgICAgICAgICBkYXRhID0gYnVmZmVyXzEuQnVmZmVyLmZyb20oZGF0YSk7XG4gICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICBkYXRhID0gYnVmZmVyXzEuQnVmZmVyLmZyb20oZGF0YSwgJ3V0ZjgnKTtcbiAgICAgICAgICAgICAgICBwcm94eS5wdXNoKGRhdGEpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIocmVzLmRhdGEpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgbXkub25Tb2NrZXRDbG9zZSgoKSA9PiB7XG4gICAgICAgIHN0cmVhbS5lbmQoKTtcbiAgICAgICAgc3RyZWFtLmRlc3Ryb3koKTtcbiAgICB9KTtcbiAgICBteS5vblNvY2tldEVycm9yKChlcnIpID0+IHtcbiAgICAgICAgc3RyZWFtLmRlc3Ryb3koZXJyKTtcbiAgICB9KTtcbn1cbmNvbnN0IGJ1aWxkU3RyZWFtID0gKGNsaWVudCwgb3B0cykgPT4ge1xuICAgIG9wdHMuaG9zdG5hbWUgPSBvcHRzLmhvc3RuYW1lIHx8IG9wdHMuaG9zdDtcbiAgICBpZiAoIW9wdHMuaG9zdG5hbWUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDb3VsZCBub3QgZGV0ZXJtaW5lIGhvc3QuIFNwZWNpZnkgaG9zdCBtYW51YWxseS4nKTtcbiAgICB9XG4gICAgY29uc3Qgd2Vic29ja2V0U3ViUHJvdG9jb2wgPSBvcHRzLnByb3RvY29sSWQgPT09ICdNUUlzZHAnICYmIG9wdHMucHJvdG9jb2xWZXJzaW9uID09PSAzXG4gICAgICAgID8gJ21xdHR2My4xJ1xuICAgICAgICA6ICdtcXR0JztcbiAgICBzZXREZWZhdWx0T3B0cyhvcHRzKTtcbiAgICBjb25zdCB1cmwgPSBidWlsZFVybChvcHRzLCBjbGllbnQpO1xuICAgIG15ID0gb3B0cy5teTtcbiAgICBteS5jb25uZWN0U29ja2V0KHtcbiAgICAgICAgdXJsLFxuICAgICAgICBwcm90b2NvbHM6IHdlYnNvY2tldFN1YlByb3RvY29sLFxuICAgIH0pO1xuICAgIHByb3h5ID0gYnVpbGRQcm94eSgpO1xuICAgIHN0cmVhbSA9IG5ldyBCdWZmZXJlZER1cGxleF8xLkJ1ZmZlcmVkRHVwbGV4KG9wdHMsIHByb3h5LCBteSk7XG4gICAgYmluZEV2ZW50SGFuZGxlcigpO1xuICAgIHJldHVybiBzdHJlYW07XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gYnVpbGRTdHJlYW07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hbGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/connect/ali.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/connect/index.js":
/*!*******************************************************!*\
  !*** ../node_modules/mqtt/build/lib/connect/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.connectAsync = void 0;\nconst debug_1 = __importDefault(__webpack_require__(/*! debug */ \"(ssr)/../node_modules/debug/src/index.js\"));\nconst url_1 = __importDefault(__webpack_require__(/*! url */ \"url\"));\nconst client_1 = __importDefault(__webpack_require__(/*! ../client */ \"(ssr)/../node_modules/mqtt/build/lib/client.js\"));\nconst is_browser_1 = __importDefault(__webpack_require__(/*! ../is-browser */ \"(ssr)/../node_modules/mqtt/build/lib/is-browser.js\"));\nconst debug = (0, debug_1.default)('mqttjs');\nconst protocols = {};\nif (!is_browser_1.default) {\n    protocols.mqtt = (__webpack_require__(/*! ./tcp */ \"(ssr)/../node_modules/mqtt/build/lib/connect/tcp.js\")[\"default\"]);\n    protocols.tcp = (__webpack_require__(/*! ./tcp */ \"(ssr)/../node_modules/mqtt/build/lib/connect/tcp.js\")[\"default\"]);\n    protocols.ssl = (__webpack_require__(/*! ./tls */ \"(ssr)/../node_modules/mqtt/build/lib/connect/tls.js\")[\"default\"]);\n    protocols.tls = protocols.ssl;\n    protocols.mqtts = (__webpack_require__(/*! ./tls */ \"(ssr)/../node_modules/mqtt/build/lib/connect/tls.js\")[\"default\"]);\n}\nelse {\n    protocols.wx = (__webpack_require__(/*! ./wx */ \"(ssr)/../node_modules/mqtt/build/lib/connect/wx.js\")[\"default\"]);\n    protocols.wxs = (__webpack_require__(/*! ./wx */ \"(ssr)/../node_modules/mqtt/build/lib/connect/wx.js\")[\"default\"]);\n    protocols.ali = (__webpack_require__(/*! ./ali */ \"(ssr)/../node_modules/mqtt/build/lib/connect/ali.js\")[\"default\"]);\n    protocols.alis = (__webpack_require__(/*! ./ali */ \"(ssr)/../node_modules/mqtt/build/lib/connect/ali.js\")[\"default\"]);\n}\nprotocols.ws = (__webpack_require__(/*! ./ws */ \"(ssr)/../node_modules/mqtt/build/lib/connect/ws.js\")[\"default\"]);\nprotocols.wss = (__webpack_require__(/*! ./ws */ \"(ssr)/../node_modules/mqtt/build/lib/connect/ws.js\")[\"default\"]);\nfunction parseAuthOptions(opts) {\n    let matches;\n    if (opts.auth) {\n        matches = opts.auth.match(/^(.+):(.+)$/);\n        if (matches) {\n            opts.username = matches[1];\n            opts.password = matches[2];\n        }\n        else {\n            opts.username = opts.auth;\n        }\n    }\n}\nfunction connect(brokerUrl, opts) {\n    debug('connecting to an MQTT broker...');\n    if (typeof brokerUrl === 'object' && !opts) {\n        opts = brokerUrl;\n        brokerUrl = '';\n    }\n    opts = opts || {};\n    if (brokerUrl && typeof brokerUrl === 'string') {\n        const parsed = url_1.default.parse(brokerUrl, true);\n        if (parsed.port != null) {\n            parsed.port = Number(parsed.port);\n        }\n        opts = Object.assign(Object.assign({}, parsed), opts);\n        if (opts.protocol === null) {\n            throw new Error('Missing protocol');\n        }\n        opts.protocol = opts.protocol.replace(/:$/, '');\n    }\n    parseAuthOptions(opts);\n    if (opts.query && typeof opts.query.clientId === 'string') {\n        opts.clientId = opts.query.clientId;\n    }\n    if (opts.cert && opts.key) {\n        if (opts.protocol) {\n            if (['mqtts', 'wss', 'wxs', 'alis'].indexOf(opts.protocol) === -1) {\n                switch (opts.protocol) {\n                    case 'mqtt':\n                        opts.protocol = 'mqtts';\n                        break;\n                    case 'ws':\n                        opts.protocol = 'wss';\n                        break;\n                    case 'wx':\n                        opts.protocol = 'wxs';\n                        break;\n                    case 'ali':\n                        opts.protocol = 'alis';\n                        break;\n                    default:\n                        throw new Error(`Unknown protocol for secure connection: \"${opts.protocol}\"!`);\n                }\n            }\n        }\n        else {\n            throw new Error('Missing secure protocol key');\n        }\n    }\n    if (!protocols[opts.protocol]) {\n        const isSecure = ['mqtts', 'wss'].indexOf(opts.protocol) !== -1;\n        opts.protocol = [\n            'mqtt',\n            'mqtts',\n            'ws',\n            'wss',\n            'wx',\n            'wxs',\n            'ali',\n            'alis',\n        ].filter((key, index) => {\n            if (isSecure && index % 2 === 0) {\n                return false;\n            }\n            return typeof protocols[key] === 'function';\n        })[0];\n    }\n    if (opts.clean === false && !opts.clientId) {\n        throw new Error('Missing clientId for unclean clients');\n    }\n    if (opts.protocol) {\n        opts.defaultProtocol = opts.protocol;\n    }\n    function wrapper(client) {\n        if (opts.servers) {\n            if (!client._reconnectCount ||\n                client._reconnectCount === opts.servers.length) {\n                client._reconnectCount = 0;\n            }\n            opts.host = opts.servers[client._reconnectCount].host;\n            opts.port = opts.servers[client._reconnectCount].port;\n            opts.protocol = !opts.servers[client._reconnectCount].protocol\n                ? opts.defaultProtocol\n                : opts.servers[client._reconnectCount].protocol;\n            opts.hostname = opts.host;\n            client._reconnectCount++;\n        }\n        debug('calling streambuilder for', opts.protocol);\n        return protocols[opts.protocol](client, opts);\n    }\n    const client = new client_1.default(wrapper, opts);\n    client.on('error', () => {\n    });\n    return client;\n}\nfunction connectAsync(brokerUrl, opts, allowRetries = true) {\n    return new Promise((resolve, reject) => {\n        const client = connect(brokerUrl, opts);\n        const promiseResolutionListeners = {\n            connect: (connack) => {\n                removePromiseResolutionListeners();\n                resolve(client);\n            },\n            end: () => {\n                removePromiseResolutionListeners();\n                resolve(client);\n            },\n            error: (err) => {\n                removePromiseResolutionListeners();\n                client.end();\n                reject(err);\n            },\n        };\n        if (allowRetries === false) {\n            promiseResolutionListeners.close = () => {\n                promiseResolutionListeners.error(new Error(\"Couldn't connect to server\"));\n            };\n        }\n        function removePromiseResolutionListeners() {\n            Object.keys(promiseResolutionListeners).forEach((eventName) => {\n                client.off(eventName, promiseResolutionListeners[eventName]);\n            });\n        }\n        Object.keys(promiseResolutionListeners).forEach((eventName) => {\n            client.on(eventName, promiseResolutionListeners[eventName]);\n        });\n    });\n}\nexports.connectAsync = connectAsync;\nexports[\"default\"] = connect;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/connect/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/connect/tcp.js":
/*!*****************************************************!*\
  !*** ../node_modules/mqtt/build/lib/connect/tcp.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst net_1 = __importDefault(__webpack_require__(/*! net */ \"net\"));\nconst debug_1 = __importDefault(__webpack_require__(/*! debug */ \"(ssr)/../node_modules/debug/src/index.js\"));\nconst debug = (0, debug_1.default)('mqttjs:tcp');\nconst buildStream = (client, opts) => {\n    opts.port = opts.port || 1883;\n    opts.hostname = opts.hostname || opts.host || 'localhost';\n    const { port } = opts;\n    const host = opts.hostname;\n    debug('port %d and host %s', port, host);\n    return net_1.default.createConnection(port, host);\n};\nexports[\"default\"] = buildStream;\n//# sourceMappingURL=tcp.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL2Nvbm5lY3QvdGNwLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsOEJBQThCLG1CQUFPLENBQUMsZ0JBQUs7QUFDM0MsZ0NBQWdDLG1CQUFPLENBQUMsdURBQU87QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4uL25vZGVfbW9kdWxlcy9tcXR0L2J1aWxkL2xpYi9jb25uZWN0L3RjcC5qcz8zY2MxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgbmV0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIm5ldFwiKSk7XG5jb25zdCBkZWJ1Z18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJkZWJ1Z1wiKSk7XG5jb25zdCBkZWJ1ZyA9ICgwLCBkZWJ1Z18xLmRlZmF1bHQpKCdtcXR0anM6dGNwJyk7XG5jb25zdCBidWlsZFN0cmVhbSA9IChjbGllbnQsIG9wdHMpID0+IHtcbiAgICBvcHRzLnBvcnQgPSBvcHRzLnBvcnQgfHwgMTg4MztcbiAgICBvcHRzLmhvc3RuYW1lID0gb3B0cy5ob3N0bmFtZSB8fCBvcHRzLmhvc3QgfHwgJ2xvY2FsaG9zdCc7XG4gICAgY29uc3QgeyBwb3J0IH0gPSBvcHRzO1xuICAgIGNvbnN0IGhvc3QgPSBvcHRzLmhvc3RuYW1lO1xuICAgIGRlYnVnKCdwb3J0ICVkIGFuZCBob3N0ICVzJywgcG9ydCwgaG9zdCk7XG4gICAgcmV0dXJuIG5ldF8xLmRlZmF1bHQuY3JlYXRlQ29ubmVjdGlvbihwb3J0LCBob3N0KTtcbn07XG5leHBvcnRzLmRlZmF1bHQgPSBidWlsZFN0cmVhbTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRjcC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/connect/tcp.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/connect/tls.js":
/*!*****************************************************!*\
  !*** ../node_modules/mqtt/build/lib/connect/tls.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tls_1 = __importDefault(__webpack_require__(/*! tls */ \"tls\"));\nconst net_1 = __importDefault(__webpack_require__(/*! net */ \"net\"));\nconst debug_1 = __importDefault(__webpack_require__(/*! debug */ \"(ssr)/../node_modules/debug/src/index.js\"));\nconst debug = (0, debug_1.default)('mqttjs:tls');\nconst buildStream = (client, opts) => {\n    opts.port = opts.port || 8883;\n    opts.host = opts.hostname || opts.host || 'localhost';\n    if (net_1.default.isIP(opts.host) === 0) {\n        opts.servername = opts.host;\n    }\n    opts.rejectUnauthorized = opts.rejectUnauthorized !== false;\n    delete opts.path;\n    debug('port %d host %s rejectUnauthorized %b', opts.port, opts.host, opts.rejectUnauthorized);\n    const connection = tls_1.default.connect(opts);\n    connection.on('secureConnect', () => {\n        if (opts.rejectUnauthorized && !connection.authorized) {\n            connection.emit('error', new Error('TLS not authorized'));\n        }\n        else {\n            connection.removeListener('error', handleTLSerrors);\n        }\n    });\n    function handleTLSerrors(err) {\n        if (opts.rejectUnauthorized) {\n            client.emit('error', err);\n        }\n        connection.end();\n    }\n    connection.on('error', handleTLSerrors);\n    return connection;\n};\nexports[\"default\"] = buildStream;\n//# sourceMappingURL=tls.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL2Nvbm5lY3QvdGxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsOEJBQThCLG1CQUFPLENBQUMsZ0JBQUs7QUFDM0MsOEJBQThCLG1CQUFPLENBQUMsZ0JBQUs7QUFDM0MsZ0NBQWdDLG1CQUFPLENBQUMsdURBQU87QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL2Nvbm5lY3QvdGxzLmpzP2NiZjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0bHNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwidGxzXCIpKTtcbmNvbnN0IG5ldF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJuZXRcIikpO1xuY29uc3QgZGVidWdfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZGVidWdcIikpO1xuY29uc3QgZGVidWcgPSAoMCwgZGVidWdfMS5kZWZhdWx0KSgnbXF0dGpzOnRscycpO1xuY29uc3QgYnVpbGRTdHJlYW0gPSAoY2xpZW50LCBvcHRzKSA9PiB7XG4gICAgb3B0cy5wb3J0ID0gb3B0cy5wb3J0IHx8IDg4ODM7XG4gICAgb3B0cy5ob3N0ID0gb3B0cy5ob3N0bmFtZSB8fCBvcHRzLmhvc3QgfHwgJ2xvY2FsaG9zdCc7XG4gICAgaWYgKG5ldF8xLmRlZmF1bHQuaXNJUChvcHRzLmhvc3QpID09PSAwKSB7XG4gICAgICAgIG9wdHMuc2VydmVybmFtZSA9IG9wdHMuaG9zdDtcbiAgICB9XG4gICAgb3B0cy5yZWplY3RVbmF1dGhvcml6ZWQgPSBvcHRzLnJlamVjdFVuYXV0aG9yaXplZCAhPT0gZmFsc2U7XG4gICAgZGVsZXRlIG9wdHMucGF0aDtcbiAgICBkZWJ1ZygncG9ydCAlZCBob3N0ICVzIHJlamVjdFVuYXV0aG9yaXplZCAlYicsIG9wdHMucG9ydCwgb3B0cy5ob3N0LCBvcHRzLnJlamVjdFVuYXV0aG9yaXplZCk7XG4gICAgY29uc3QgY29ubmVjdGlvbiA9IHRsc18xLmRlZmF1bHQuY29ubmVjdChvcHRzKTtcbiAgICBjb25uZWN0aW9uLm9uKCdzZWN1cmVDb25uZWN0JywgKCkgPT4ge1xuICAgICAgICBpZiAob3B0cy5yZWplY3RVbmF1dGhvcml6ZWQgJiYgIWNvbm5lY3Rpb24uYXV0aG9yaXplZCkge1xuICAgICAgICAgICAgY29ubmVjdGlvbi5lbWl0KCdlcnJvcicsIG5ldyBFcnJvcignVExTIG5vdCBhdXRob3JpemVkJykpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29ubmVjdGlvbi5yZW1vdmVMaXN0ZW5lcignZXJyb3InLCBoYW5kbGVUTFNlcnJvcnMpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgZnVuY3Rpb24gaGFuZGxlVExTZXJyb3JzKGVycikge1xuICAgICAgICBpZiAob3B0cy5yZWplY3RVbmF1dGhvcml6ZWQpIHtcbiAgICAgICAgICAgIGNsaWVudC5lbWl0KCdlcnJvcicsIGVycik7XG4gICAgICAgIH1cbiAgICAgICAgY29ubmVjdGlvbi5lbmQoKTtcbiAgICB9XG4gICAgY29ubmVjdGlvbi5vbignZXJyb3InLCBoYW5kbGVUTFNlcnJvcnMpO1xuICAgIHJldHVybiBjb25uZWN0aW9uO1xufTtcbmV4cG9ydHMuZGVmYXVsdCA9IGJ1aWxkU3RyZWFtO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/connect/tls.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/connect/ws.js":
/*!****************************************************!*\
  !*** ../node_modules/mqtt/build/lib/connect/ws.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst ws_1 = __importDefault(__webpack_require__(/*! ws */ \"(ssr)/../node_modules/ws/index.js\"));\nconst debug_1 = __importDefault(__webpack_require__(/*! debug */ \"(ssr)/../node_modules/debug/src/index.js\"));\nconst readable_stream_1 = __webpack_require__(/*! readable-stream */ \"(ssr)/../node_modules/readable-stream/lib/ours/index.js\");\nconst is_browser_1 = __importDefault(__webpack_require__(/*! ../is-browser */ \"(ssr)/../node_modules/mqtt/build/lib/is-browser.js\"));\nconst BufferedDuplex_1 = __webpack_require__(/*! ../BufferedDuplex */ \"(ssr)/../node_modules/mqtt/build/lib/BufferedDuplex.js\");\nconst debug = (0, debug_1.default)('mqttjs:ws');\nconst WSS_OPTIONS = [\n    'rejectUnauthorized',\n    'ca',\n    'cert',\n    'key',\n    'pfx',\n    'passphrase',\n];\nfunction buildUrl(opts, client) {\n    let url = `${opts.protocol}://${opts.hostname}:${opts.port}${opts.path}`;\n    if (typeof opts.transformWsUrl === 'function') {\n        url = opts.transformWsUrl(url, opts, client);\n    }\n    return url;\n}\nfunction setDefaultOpts(opts) {\n    const options = opts;\n    if (!opts.hostname) {\n        options.hostname = 'localhost';\n    }\n    if (!opts.port) {\n        if (opts.protocol === 'wss') {\n            options.port = 443;\n        }\n        else {\n            options.port = 80;\n        }\n    }\n    if (!opts.path) {\n        options.path = '/';\n    }\n    if (!opts.wsOptions) {\n        options.wsOptions = {};\n    }\n    if (!is_browser_1.default && opts.protocol === 'wss') {\n        WSS_OPTIONS.forEach((prop) => {\n            if (Object.prototype.hasOwnProperty.call(opts, prop) &&\n                !Object.prototype.hasOwnProperty.call(opts.wsOptions, prop)) {\n                options.wsOptions[prop] = opts[prop];\n            }\n        });\n    }\n    return options;\n}\nfunction setDefaultBrowserOpts(opts) {\n    const options = setDefaultOpts(opts);\n    if (!options.hostname) {\n        options.hostname = options.host;\n    }\n    if (!options.hostname) {\n        if (typeof document === 'undefined') {\n            throw new Error('Could not determine host. Specify host manually.');\n        }\n        const parsed = new URL(document.URL);\n        options.hostname = parsed.hostname;\n        if (!options.port) {\n            options.port = Number(parsed.port);\n        }\n    }\n    if (options.objectMode === undefined) {\n        options.objectMode = !(options.binary === true || options.binary === undefined);\n    }\n    return options;\n}\nfunction createWebSocket(client, url, opts) {\n    debug('createWebSocket');\n    debug(`protocol: ${opts.protocolId} ${opts.protocolVersion}`);\n    const websocketSubProtocol = opts.protocolId === 'MQIsdp' && opts.protocolVersion === 3\n        ? 'mqttv3.1'\n        : 'mqtt';\n    debug(`creating new Websocket for url: ${url} and protocol: ${websocketSubProtocol}`);\n    let socket;\n    if (opts.createWebsocket) {\n        socket = opts.createWebsocket(url, [websocketSubProtocol], opts);\n    }\n    else {\n        socket = new ws_1.default(url, [websocketSubProtocol], opts.wsOptions);\n    }\n    return socket;\n}\nfunction createBrowserWebSocket(client, opts) {\n    const websocketSubProtocol = opts.protocolId === 'MQIsdp' && opts.protocolVersion === 3\n        ? 'mqttv3.1'\n        : 'mqtt';\n    const url = buildUrl(opts, client);\n    let socket;\n    if (opts.createWebsocket) {\n        socket = opts.createWebsocket(url, [websocketSubProtocol], opts);\n    }\n    else {\n        socket = new WebSocket(url, [websocketSubProtocol]);\n    }\n    socket.binaryType = 'arraybuffer';\n    return socket;\n}\nconst streamBuilder = (client, opts) => {\n    debug('streamBuilder');\n    const options = setDefaultOpts(opts);\n    const url = buildUrl(options, client);\n    const socket = createWebSocket(client, url, options);\n    const webSocketStream = ws_1.default.createWebSocketStream(socket, options.wsOptions);\n    webSocketStream['url'] = url;\n    socket.on('close', () => {\n        webSocketStream.destroy();\n    });\n    return webSocketStream;\n};\nconst browserStreamBuilder = (client, opts) => {\n    debug('browserStreamBuilder');\n    let stream;\n    const options = setDefaultBrowserOpts(opts);\n    const bufferSize = options.browserBufferSize || 1024 * 512;\n    const bufferTimeout = opts.browserBufferTimeout || 1000;\n    const coerceToBuffer = !opts.objectMode;\n    const socket = createBrowserWebSocket(client, opts);\n    const proxy = buildProxy(opts, socketWriteBrowser, socketEndBrowser);\n    if (!opts.objectMode) {\n        proxy._writev = BufferedDuplex_1.writev.bind(proxy);\n    }\n    proxy.on('close', () => {\n        socket.close();\n    });\n    const eventListenerSupport = typeof socket.addEventListener !== 'undefined';\n    if (socket.readyState === socket.OPEN) {\n        stream = proxy;\n        stream.socket = socket;\n    }\n    else {\n        stream = new BufferedDuplex_1.BufferedDuplex(opts, proxy, socket);\n        if (eventListenerSupport) {\n            socket.addEventListener('open', onOpen);\n        }\n        else {\n            socket.onopen = onOpen;\n        }\n    }\n    if (eventListenerSupport) {\n        socket.addEventListener('close', onClose);\n        socket.addEventListener('error', onError);\n        socket.addEventListener('message', onMessage);\n    }\n    else {\n        socket.onclose = onClose;\n        socket.onerror = onError;\n        socket.onmessage = onMessage;\n    }\n    function buildProxy(pOptions, socketWrite, socketEnd) {\n        const _proxy = new readable_stream_1.Transform({\n            objectMode: pOptions.objectMode,\n        });\n        _proxy._write = socketWrite;\n        _proxy._flush = socketEnd;\n        return _proxy;\n    }\n    function onOpen() {\n        debug('WebSocket onOpen');\n        if (stream instanceof BufferedDuplex_1.BufferedDuplex) {\n            stream.socketReady();\n        }\n    }\n    function onClose(event) {\n        debug('WebSocket onClose', event);\n        stream.end();\n        stream.destroy();\n    }\n    function onError(err) {\n        debug('WebSocket onError', err);\n        const error = new Error('WebSocket error');\n        error['event'] = err;\n        stream.destroy(error);\n    }\n    function onMessage(event) {\n        let { data } = event;\n        if (data instanceof ArrayBuffer)\n            data = buffer_1.Buffer.from(data);\n        else\n            data = buffer_1.Buffer.from(data, 'utf8');\n        proxy.push(data);\n    }\n    function socketWriteBrowser(chunk, enc, next) {\n        if (socket.bufferedAmount > bufferSize) {\n            setTimeout(socketWriteBrowser, bufferTimeout, chunk, enc, next);\n            return;\n        }\n        if (coerceToBuffer && typeof chunk === 'string') {\n            chunk = buffer_1.Buffer.from(chunk, 'utf8');\n        }\n        try {\n            socket.send(chunk);\n        }\n        catch (err) {\n            return next(err);\n        }\n        next();\n    }\n    function socketEndBrowser(done) {\n        socket.close();\n        done();\n    }\n    return stream;\n};\nexports[\"default\"] = is_browser_1.default ? browserStreamBuilder : streamBuilder;\n//# sourceMappingURL=ws.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL2Nvbm5lY3Qvd3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqQyw2QkFBNkIsbUJBQU8sQ0FBQyw2Q0FBSTtBQUN6QyxnQ0FBZ0MsbUJBQU8sQ0FBQyx1REFBTztBQUMvQywwQkFBMEIsbUJBQU8sQ0FBQyxnRkFBaUI7QUFDbkQscUNBQXFDLG1CQUFPLENBQUMseUVBQWU7QUFDNUQseUJBQXlCLG1CQUFPLENBQUMsaUZBQW1CO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGNBQWMsS0FBSyxjQUFjLEdBQUcsVUFBVSxFQUFFLFVBQVU7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGlCQUFpQixFQUFFLHFCQUFxQjtBQUMvRDtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsS0FBSyxnQkFBZ0IscUJBQXFCO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLE9BQU87QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4uL25vZGVfbW9kdWxlcy9tcXR0L2J1aWxkL2xpYi9jb25uZWN0L3dzLmpzP2MyOWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXJcIik7XG5jb25zdCB3c18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJ3c1wiKSk7XG5jb25zdCBkZWJ1Z18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJkZWJ1Z1wiKSk7XG5jb25zdCByZWFkYWJsZV9zdHJlYW1fMSA9IHJlcXVpcmUoXCJyZWFkYWJsZS1zdHJlYW1cIik7XG5jb25zdCBpc19icm93c2VyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL2lzLWJyb3dzZXJcIikpO1xuY29uc3QgQnVmZmVyZWREdXBsZXhfMSA9IHJlcXVpcmUoXCIuLi9CdWZmZXJlZER1cGxleFwiKTtcbmNvbnN0IGRlYnVnID0gKDAsIGRlYnVnXzEuZGVmYXVsdCkoJ21xdHRqczp3cycpO1xuY29uc3QgV1NTX09QVElPTlMgPSBbXG4gICAgJ3JlamVjdFVuYXV0aG9yaXplZCcsXG4gICAgJ2NhJyxcbiAgICAnY2VydCcsXG4gICAgJ2tleScsXG4gICAgJ3BmeCcsXG4gICAgJ3Bhc3NwaHJhc2UnLFxuXTtcbmZ1bmN0aW9uIGJ1aWxkVXJsKG9wdHMsIGNsaWVudCkge1xuICAgIGxldCB1cmwgPSBgJHtvcHRzLnByb3RvY29sfTovLyR7b3B0cy5ob3N0bmFtZX06JHtvcHRzLnBvcnR9JHtvcHRzLnBhdGh9YDtcbiAgICBpZiAodHlwZW9mIG9wdHMudHJhbnNmb3JtV3NVcmwgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdXJsID0gb3B0cy50cmFuc2Zvcm1Xc1VybCh1cmwsIG9wdHMsIGNsaWVudCk7XG4gICAgfVxuICAgIHJldHVybiB1cmw7XG59XG5mdW5jdGlvbiBzZXREZWZhdWx0T3B0cyhvcHRzKSB7XG4gICAgY29uc3Qgb3B0aW9ucyA9IG9wdHM7XG4gICAgaWYgKCFvcHRzLmhvc3RuYW1lKSB7XG4gICAgICAgIG9wdGlvbnMuaG9zdG5hbWUgPSAnbG9jYWxob3N0JztcbiAgICB9XG4gICAgaWYgKCFvcHRzLnBvcnQpIHtcbiAgICAgICAgaWYgKG9wdHMucHJvdG9jb2wgPT09ICd3c3MnKSB7XG4gICAgICAgICAgICBvcHRpb25zLnBvcnQgPSA0NDM7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBvcHRpb25zLnBvcnQgPSA4MDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoIW9wdHMucGF0aCkge1xuICAgICAgICBvcHRpb25zLnBhdGggPSAnLyc7XG4gICAgfVxuICAgIGlmICghb3B0cy53c09wdGlvbnMpIHtcbiAgICAgICAgb3B0aW9ucy53c09wdGlvbnMgPSB7fTtcbiAgICB9XG4gICAgaWYgKCFpc19icm93c2VyXzEuZGVmYXVsdCAmJiBvcHRzLnByb3RvY29sID09PSAnd3NzJykge1xuICAgICAgICBXU1NfT1BUSU9OUy5mb3JFYWNoKChwcm9wKSA9PiB7XG4gICAgICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9wdHMsIHByb3ApICYmXG4gICAgICAgICAgICAgICAgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvcHRzLndzT3B0aW9ucywgcHJvcCkpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25zLndzT3B0aW9uc1twcm9wXSA9IG9wdHNbcHJvcF07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gb3B0aW9ucztcbn1cbmZ1bmN0aW9uIHNldERlZmF1bHRCcm93c2VyT3B0cyhvcHRzKSB7XG4gICAgY29uc3Qgb3B0aW9ucyA9IHNldERlZmF1bHRPcHRzKG9wdHMpO1xuICAgIGlmICghb3B0aW9ucy5ob3N0bmFtZSkge1xuICAgICAgICBvcHRpb25zLmhvc3RuYW1lID0gb3B0aW9ucy5ob3N0O1xuICAgIH1cbiAgICBpZiAoIW9wdGlvbnMuaG9zdG5hbWUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ291bGQgbm90IGRldGVybWluZSBob3N0LiBTcGVjaWZ5IGhvc3QgbWFudWFsbHkuJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcGFyc2VkID0gbmV3IFVSTChkb2N1bWVudC5VUkwpO1xuICAgICAgICBvcHRpb25zLmhvc3RuYW1lID0gcGFyc2VkLmhvc3RuYW1lO1xuICAgICAgICBpZiAoIW9wdGlvbnMucG9ydCkge1xuICAgICAgICAgICAgb3B0aW9ucy5wb3J0ID0gTnVtYmVyKHBhcnNlZC5wb3J0KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAob3B0aW9ucy5vYmplY3RNb2RlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgb3B0aW9ucy5vYmplY3RNb2RlID0gIShvcHRpb25zLmJpbmFyeSA9PT0gdHJ1ZSB8fCBvcHRpb25zLmJpbmFyeSA9PT0gdW5kZWZpbmVkKTtcbiAgICB9XG4gICAgcmV0dXJuIG9wdGlvbnM7XG59XG5mdW5jdGlvbiBjcmVhdGVXZWJTb2NrZXQoY2xpZW50LCB1cmwsIG9wdHMpIHtcbiAgICBkZWJ1ZygnY3JlYXRlV2ViU29ja2V0Jyk7XG4gICAgZGVidWcoYHByb3RvY29sOiAke29wdHMucHJvdG9jb2xJZH0gJHtvcHRzLnByb3RvY29sVmVyc2lvbn1gKTtcbiAgICBjb25zdCB3ZWJzb2NrZXRTdWJQcm90b2NvbCA9IG9wdHMucHJvdG9jb2xJZCA9PT0gJ01RSXNkcCcgJiYgb3B0cy5wcm90b2NvbFZlcnNpb24gPT09IDNcbiAgICAgICAgPyAnbXF0dHYzLjEnXG4gICAgICAgIDogJ21xdHQnO1xuICAgIGRlYnVnKGBjcmVhdGluZyBuZXcgV2Vic29ja2V0IGZvciB1cmw6ICR7dXJsfSBhbmQgcHJvdG9jb2w6ICR7d2Vic29ja2V0U3ViUHJvdG9jb2x9YCk7XG4gICAgbGV0IHNvY2tldDtcbiAgICBpZiAob3B0cy5jcmVhdGVXZWJzb2NrZXQpIHtcbiAgICAgICAgc29ja2V0ID0gb3B0cy5jcmVhdGVXZWJzb2NrZXQodXJsLCBbd2Vic29ja2V0U3ViUHJvdG9jb2xdLCBvcHRzKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHNvY2tldCA9IG5ldyB3c18xLmRlZmF1bHQodXJsLCBbd2Vic29ja2V0U3ViUHJvdG9jb2xdLCBvcHRzLndzT3B0aW9ucyk7XG4gICAgfVxuICAgIHJldHVybiBzb2NrZXQ7XG59XG5mdW5jdGlvbiBjcmVhdGVCcm93c2VyV2ViU29ja2V0KGNsaWVudCwgb3B0cykge1xuICAgIGNvbnN0IHdlYnNvY2tldFN1YlByb3RvY29sID0gb3B0cy5wcm90b2NvbElkID09PSAnTVFJc2RwJyAmJiBvcHRzLnByb3RvY29sVmVyc2lvbiA9PT0gM1xuICAgICAgICA/ICdtcXR0djMuMSdcbiAgICAgICAgOiAnbXF0dCc7XG4gICAgY29uc3QgdXJsID0gYnVpbGRVcmwob3B0cywgY2xpZW50KTtcbiAgICBsZXQgc29ja2V0O1xuICAgIGlmIChvcHRzLmNyZWF0ZVdlYnNvY2tldCkge1xuICAgICAgICBzb2NrZXQgPSBvcHRzLmNyZWF0ZVdlYnNvY2tldCh1cmwsIFt3ZWJzb2NrZXRTdWJQcm90b2NvbF0sIG9wdHMpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgc29ja2V0ID0gbmV3IFdlYlNvY2tldCh1cmwsIFt3ZWJzb2NrZXRTdWJQcm90b2NvbF0pO1xuICAgIH1cbiAgICBzb2NrZXQuYmluYXJ5VHlwZSA9ICdhcnJheWJ1ZmZlcic7XG4gICAgcmV0dXJuIHNvY2tldDtcbn1cbmNvbnN0IHN0cmVhbUJ1aWxkZXIgPSAoY2xpZW50LCBvcHRzKSA9PiB7XG4gICAgZGVidWcoJ3N0cmVhbUJ1aWxkZXInKTtcbiAgICBjb25zdCBvcHRpb25zID0gc2V0RGVmYXVsdE9wdHMob3B0cyk7XG4gICAgY29uc3QgdXJsID0gYnVpbGRVcmwob3B0aW9ucywgY2xpZW50KTtcbiAgICBjb25zdCBzb2NrZXQgPSBjcmVhdGVXZWJTb2NrZXQoY2xpZW50LCB1cmwsIG9wdGlvbnMpO1xuICAgIGNvbnN0IHdlYlNvY2tldFN0cmVhbSA9IHdzXzEuZGVmYXVsdC5jcmVhdGVXZWJTb2NrZXRTdHJlYW0oc29ja2V0LCBvcHRpb25zLndzT3B0aW9ucyk7XG4gICAgd2ViU29ja2V0U3RyZWFtWyd1cmwnXSA9IHVybDtcbiAgICBzb2NrZXQub24oJ2Nsb3NlJywgKCkgPT4ge1xuICAgICAgICB3ZWJTb2NrZXRTdHJlYW0uZGVzdHJveSgpO1xuICAgIH0pO1xuICAgIHJldHVybiB3ZWJTb2NrZXRTdHJlYW07XG59O1xuY29uc3QgYnJvd3NlclN0cmVhbUJ1aWxkZXIgPSAoY2xpZW50LCBvcHRzKSA9PiB7XG4gICAgZGVidWcoJ2Jyb3dzZXJTdHJlYW1CdWlsZGVyJyk7XG4gICAgbGV0IHN0cmVhbTtcbiAgICBjb25zdCBvcHRpb25zID0gc2V0RGVmYXVsdEJyb3dzZXJPcHRzKG9wdHMpO1xuICAgIGNvbnN0IGJ1ZmZlclNpemUgPSBvcHRpb25zLmJyb3dzZXJCdWZmZXJTaXplIHx8IDEwMjQgKiA1MTI7XG4gICAgY29uc3QgYnVmZmVyVGltZW91dCA9IG9wdHMuYnJvd3NlckJ1ZmZlclRpbWVvdXQgfHwgMTAwMDtcbiAgICBjb25zdCBjb2VyY2VUb0J1ZmZlciA9ICFvcHRzLm9iamVjdE1vZGU7XG4gICAgY29uc3Qgc29ja2V0ID0gY3JlYXRlQnJvd3NlcldlYlNvY2tldChjbGllbnQsIG9wdHMpO1xuICAgIGNvbnN0IHByb3h5ID0gYnVpbGRQcm94eShvcHRzLCBzb2NrZXRXcml0ZUJyb3dzZXIsIHNvY2tldEVuZEJyb3dzZXIpO1xuICAgIGlmICghb3B0cy5vYmplY3RNb2RlKSB7XG4gICAgICAgIHByb3h5Ll93cml0ZXYgPSBCdWZmZXJlZER1cGxleF8xLndyaXRldi5iaW5kKHByb3h5KTtcbiAgICB9XG4gICAgcHJveHkub24oJ2Nsb3NlJywgKCkgPT4ge1xuICAgICAgICBzb2NrZXQuY2xvc2UoKTtcbiAgICB9KTtcbiAgICBjb25zdCBldmVudExpc3RlbmVyU3VwcG9ydCA9IHR5cGVvZiBzb2NrZXQuYWRkRXZlbnRMaXN0ZW5lciAhPT0gJ3VuZGVmaW5lZCc7XG4gICAgaWYgKHNvY2tldC5yZWFkeVN0YXRlID09PSBzb2NrZXQuT1BFTikge1xuICAgICAgICBzdHJlYW0gPSBwcm94eTtcbiAgICAgICAgc3RyZWFtLnNvY2tldCA9IHNvY2tldDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHN0cmVhbSA9IG5ldyBCdWZmZXJlZER1cGxleF8xLkJ1ZmZlcmVkRHVwbGV4KG9wdHMsIHByb3h5LCBzb2NrZXQpO1xuICAgICAgICBpZiAoZXZlbnRMaXN0ZW5lclN1cHBvcnQpIHtcbiAgICAgICAgICAgIHNvY2tldC5hZGRFdmVudExpc3RlbmVyKCdvcGVuJywgb25PcGVuKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHNvY2tldC5vbm9wZW4gPSBvbk9wZW47XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKGV2ZW50TGlzdGVuZXJTdXBwb3J0KSB7XG4gICAgICAgIHNvY2tldC5hZGRFdmVudExpc3RlbmVyKCdjbG9zZScsIG9uQ2xvc2UpO1xuICAgICAgICBzb2NrZXQuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCBvbkVycm9yKTtcbiAgICAgICAgc29ja2V0LmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBvbk1lc3NhZ2UpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgc29ja2V0Lm9uY2xvc2UgPSBvbkNsb3NlO1xuICAgICAgICBzb2NrZXQub25lcnJvciA9IG9uRXJyb3I7XG4gICAgICAgIHNvY2tldC5vbm1lc3NhZ2UgPSBvbk1lc3NhZ2U7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJ1aWxkUHJveHkocE9wdGlvbnMsIHNvY2tldFdyaXRlLCBzb2NrZXRFbmQpIHtcbiAgICAgICAgY29uc3QgX3Byb3h5ID0gbmV3IHJlYWRhYmxlX3N0cmVhbV8xLlRyYW5zZm9ybSh7XG4gICAgICAgICAgICBvYmplY3RNb2RlOiBwT3B0aW9ucy5vYmplY3RNb2RlLFxuICAgICAgICB9KTtcbiAgICAgICAgX3Byb3h5Ll93cml0ZSA9IHNvY2tldFdyaXRlO1xuICAgICAgICBfcHJveHkuX2ZsdXNoID0gc29ja2V0RW5kO1xuICAgICAgICByZXR1cm4gX3Byb3h5O1xuICAgIH1cbiAgICBmdW5jdGlvbiBvbk9wZW4oKSB7XG4gICAgICAgIGRlYnVnKCdXZWJTb2NrZXQgb25PcGVuJyk7XG4gICAgICAgIGlmIChzdHJlYW0gaW5zdGFuY2VvZiBCdWZmZXJlZER1cGxleF8xLkJ1ZmZlcmVkRHVwbGV4KSB7XG4gICAgICAgICAgICBzdHJlYW0uc29ja2V0UmVhZHkoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBvbkNsb3NlKGV2ZW50KSB7XG4gICAgICAgIGRlYnVnKCdXZWJTb2NrZXQgb25DbG9zZScsIGV2ZW50KTtcbiAgICAgICAgc3RyZWFtLmVuZCgpO1xuICAgICAgICBzdHJlYW0uZGVzdHJveSgpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBvbkVycm9yKGVycikge1xuICAgICAgICBkZWJ1ZygnV2ViU29ja2V0IG9uRXJyb3InLCBlcnIpO1xuICAgICAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcignV2ViU29ja2V0IGVycm9yJyk7XG4gICAgICAgIGVycm9yWydldmVudCddID0gZXJyO1xuICAgICAgICBzdHJlYW0uZGVzdHJveShlcnJvcik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uTWVzc2FnZShldmVudCkge1xuICAgICAgICBsZXQgeyBkYXRhIH0gPSBldmVudDtcbiAgICAgICAgaWYgKGRhdGEgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcilcbiAgICAgICAgICAgIGRhdGEgPSBidWZmZXJfMS5CdWZmZXIuZnJvbShkYXRhKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgZGF0YSA9IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKGRhdGEsICd1dGY4Jyk7XG4gICAgICAgIHByb3h5LnB1c2goZGF0YSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNvY2tldFdyaXRlQnJvd3NlcihjaHVuaywgZW5jLCBuZXh0KSB7XG4gICAgICAgIGlmIChzb2NrZXQuYnVmZmVyZWRBbW91bnQgPiBidWZmZXJTaXplKSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KHNvY2tldFdyaXRlQnJvd3NlciwgYnVmZmVyVGltZW91dCwgY2h1bmssIGVuYywgbmV4dCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvZXJjZVRvQnVmZmVyICYmIHR5cGVvZiBjaHVuayA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGNodW5rID0gYnVmZmVyXzEuQnVmZmVyLmZyb20oY2h1bmssICd1dGY4Jyk7XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHNvY2tldC5zZW5kKGNodW5rKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV4dChlcnIpO1xuICAgICAgICB9XG4gICAgICAgIG5leHQoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc29ja2V0RW5kQnJvd3Nlcihkb25lKSB7XG4gICAgICAgIHNvY2tldC5jbG9zZSgpO1xuICAgICAgICBkb25lKCk7XG4gICAgfVxuICAgIHJldHVybiBzdHJlYW07XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gaXNfYnJvd3Nlcl8xLmRlZmF1bHQgPyBicm93c2VyU3RyZWFtQnVpbGRlciA6IHN0cmVhbUJ1aWxkZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD13cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/connect/ws.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/connect/wx.js":
/*!****************************************************!*\
  !*** ../node_modules/mqtt/build/lib/connect/wx.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst readable_stream_1 = __webpack_require__(/*! readable-stream */ \"(ssr)/../node_modules/readable-stream/lib/ours/index.js\");\nconst BufferedDuplex_1 = __webpack_require__(/*! ../BufferedDuplex */ \"(ssr)/../node_modules/mqtt/build/lib/BufferedDuplex.js\");\nlet socketTask;\nlet proxy;\nlet stream;\nfunction buildProxy() {\n    const _proxy = new readable_stream_1.Transform();\n    _proxy._write = (chunk, encoding, next) => {\n        socketTask.send({\n            data: chunk.buffer,\n            success() {\n                next();\n            },\n            fail(errMsg) {\n                next(new Error(errMsg));\n            },\n        });\n    };\n    _proxy._flush = (done) => {\n        socketTask.close({\n            success() {\n                done();\n            },\n        });\n    };\n    return _proxy;\n}\nfunction setDefaultOpts(opts) {\n    if (!opts.hostname) {\n        opts.hostname = 'localhost';\n    }\n    if (!opts.path) {\n        opts.path = '/';\n    }\n    if (!opts.wsOptions) {\n        opts.wsOptions = {};\n    }\n}\nfunction buildUrl(opts, client) {\n    const protocol = opts.protocol === 'wxs' ? 'wss' : 'ws';\n    let url = `${protocol}://${opts.hostname}${opts.path}`;\n    if (opts.port && opts.port !== 80 && opts.port !== 443) {\n        url = `${protocol}://${opts.hostname}:${opts.port}${opts.path}`;\n    }\n    if (typeof opts.transformWsUrl === 'function') {\n        url = opts.transformWsUrl(url, opts, client);\n    }\n    return url;\n}\nfunction bindEventHandler() {\n    socketTask.onOpen(() => {\n        stream.socketReady();\n    });\n    socketTask.onMessage((res) => {\n        let { data } = res;\n        if (data instanceof ArrayBuffer)\n            data = buffer_1.Buffer.from(data);\n        else\n            data = buffer_1.Buffer.from(data, 'utf8');\n        proxy.push(data);\n    });\n    socketTask.onClose(() => {\n        stream.emit('close');\n        stream.end();\n        stream.destroy();\n    });\n    socketTask.onError((error) => {\n        const err = new Error(error.errMsg);\n        stream.destroy(err);\n    });\n}\nconst buildStream = (client, opts) => {\n    opts.hostname = opts.hostname || opts.host;\n    if (!opts.hostname) {\n        throw new Error('Could not determine host. Specify host manually.');\n    }\n    const websocketSubProtocol = opts.protocolId === 'MQIsdp' && opts.protocolVersion === 3\n        ? 'mqttv3.1'\n        : 'mqtt';\n    setDefaultOpts(opts);\n    const url = buildUrl(opts, client);\n    socketTask = wx.connectSocket({\n        url,\n        protocols: [websocketSubProtocol],\n    });\n    proxy = buildProxy();\n    stream = new BufferedDuplex_1.BufferedDuplex(opts, proxy, socketTask);\n    stream._destroy = (err, cb) => {\n        socketTask.close({\n            success() {\n                if (cb)\n                    cb(err);\n            },\n        });\n    };\n    const destroyRef = stream.destroy;\n    stream.destroy = (err, cb) => {\n        stream.destroy = destroyRef;\n        setTimeout(() => {\n            socketTask.close({\n                fail() {\n                    stream._destroy(err, cb);\n                },\n            });\n        }, 0);\n        return stream;\n    };\n    bindEventHandler();\n    return stream;\n};\nexports[\"default\"] = buildStream;\n//# sourceMappingURL=wx.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL2Nvbm5lY3Qvd3guanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsMEJBQTBCLG1CQUFPLENBQUMsZ0ZBQWlCO0FBQ25ELHlCQUF5QixtQkFBTyxDQUFDLGlGQUFtQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixTQUFTLEtBQUssY0FBYyxFQUFFLFVBQVU7QUFDekQ7QUFDQSxpQkFBaUIsU0FBUyxLQUFLLGNBQWMsR0FBRyxVQUFVLEVBQUUsVUFBVTtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxjQUFjLE9BQU87QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4uL25vZGVfbW9kdWxlcy9tcXR0L2J1aWxkL2xpYi9jb25uZWN0L3d4LmpzP2Q5ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXJcIik7XG5jb25zdCByZWFkYWJsZV9zdHJlYW1fMSA9IHJlcXVpcmUoXCJyZWFkYWJsZS1zdHJlYW1cIik7XG5jb25zdCBCdWZmZXJlZER1cGxleF8xID0gcmVxdWlyZShcIi4uL0J1ZmZlcmVkRHVwbGV4XCIpO1xubGV0IHNvY2tldFRhc2s7XG5sZXQgcHJveHk7XG5sZXQgc3RyZWFtO1xuZnVuY3Rpb24gYnVpbGRQcm94eSgpIHtcbiAgICBjb25zdCBfcHJveHkgPSBuZXcgcmVhZGFibGVfc3RyZWFtXzEuVHJhbnNmb3JtKCk7XG4gICAgX3Byb3h5Ll93cml0ZSA9IChjaHVuaywgZW5jb2RpbmcsIG5leHQpID0+IHtcbiAgICAgICAgc29ja2V0VGFzay5zZW5kKHtcbiAgICAgICAgICAgIGRhdGE6IGNodW5rLmJ1ZmZlcixcbiAgICAgICAgICAgIHN1Y2Nlc3MoKSB7XG4gICAgICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWwoZXJyTXNnKSB7XG4gICAgICAgICAgICAgICAgbmV4dChuZXcgRXJyb3IoZXJyTXNnKSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIF9wcm94eS5fZmx1c2ggPSAoZG9uZSkgPT4ge1xuICAgICAgICBzb2NrZXRUYXNrLmNsb3NlKHtcbiAgICAgICAgICAgIHN1Y2Nlc3MoKSB7XG4gICAgICAgICAgICAgICAgZG9uZSgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gX3Byb3h5O1xufVxuZnVuY3Rpb24gc2V0RGVmYXVsdE9wdHMob3B0cykge1xuICAgIGlmICghb3B0cy5ob3N0bmFtZSkge1xuICAgICAgICBvcHRzLmhvc3RuYW1lID0gJ2xvY2FsaG9zdCc7XG4gICAgfVxuICAgIGlmICghb3B0cy5wYXRoKSB7XG4gICAgICAgIG9wdHMucGF0aCA9ICcvJztcbiAgICB9XG4gICAgaWYgKCFvcHRzLndzT3B0aW9ucykge1xuICAgICAgICBvcHRzLndzT3B0aW9ucyA9IHt9O1xuICAgIH1cbn1cbmZ1bmN0aW9uIGJ1aWxkVXJsKG9wdHMsIGNsaWVudCkge1xuICAgIGNvbnN0IHByb3RvY29sID0gb3B0cy5wcm90b2NvbCA9PT0gJ3d4cycgPyAnd3NzJyA6ICd3cyc7XG4gICAgbGV0IHVybCA9IGAke3Byb3RvY29sfTovLyR7b3B0cy5ob3N0bmFtZX0ke29wdHMucGF0aH1gO1xuICAgIGlmIChvcHRzLnBvcnQgJiYgb3B0cy5wb3J0ICE9PSA4MCAmJiBvcHRzLnBvcnQgIT09IDQ0Mykge1xuICAgICAgICB1cmwgPSBgJHtwcm90b2NvbH06Ly8ke29wdHMuaG9zdG5hbWV9OiR7b3B0cy5wb3J0fSR7b3B0cy5wYXRofWA7XG4gICAgfVxuICAgIGlmICh0eXBlb2Ygb3B0cy50cmFuc2Zvcm1Xc1VybCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB1cmwgPSBvcHRzLnRyYW5zZm9ybVdzVXJsKHVybCwgb3B0cywgY2xpZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIHVybDtcbn1cbmZ1bmN0aW9uIGJpbmRFdmVudEhhbmRsZXIoKSB7XG4gICAgc29ja2V0VGFzay5vbk9wZW4oKCkgPT4ge1xuICAgICAgICBzdHJlYW0uc29ja2V0UmVhZHkoKTtcbiAgICB9KTtcbiAgICBzb2NrZXRUYXNrLm9uTWVzc2FnZSgocmVzKSA9PiB7XG4gICAgICAgIGxldCB7IGRhdGEgfSA9IHJlcztcbiAgICAgICAgaWYgKGRhdGEgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcilcbiAgICAgICAgICAgIGRhdGEgPSBidWZmZXJfMS5CdWZmZXIuZnJvbShkYXRhKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgZGF0YSA9IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKGRhdGEsICd1dGY4Jyk7XG4gICAgICAgIHByb3h5LnB1c2goZGF0YSk7XG4gICAgfSk7XG4gICAgc29ja2V0VGFzay5vbkNsb3NlKCgpID0+IHtcbiAgICAgICAgc3RyZWFtLmVtaXQoJ2Nsb3NlJyk7XG4gICAgICAgIHN0cmVhbS5lbmQoKTtcbiAgICAgICAgc3RyZWFtLmRlc3Ryb3koKTtcbiAgICB9KTtcbiAgICBzb2NrZXRUYXNrLm9uRXJyb3IoKGVycm9yKSA9PiB7XG4gICAgICAgIGNvbnN0IGVyciA9IG5ldyBFcnJvcihlcnJvci5lcnJNc2cpO1xuICAgICAgICBzdHJlYW0uZGVzdHJveShlcnIpO1xuICAgIH0pO1xufVxuY29uc3QgYnVpbGRTdHJlYW0gPSAoY2xpZW50LCBvcHRzKSA9PiB7XG4gICAgb3B0cy5ob3N0bmFtZSA9IG9wdHMuaG9zdG5hbWUgfHwgb3B0cy5ob3N0O1xuICAgIGlmICghb3B0cy5ob3N0bmFtZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvdWxkIG5vdCBkZXRlcm1pbmUgaG9zdC4gU3BlY2lmeSBob3N0IG1hbnVhbGx5LicpO1xuICAgIH1cbiAgICBjb25zdCB3ZWJzb2NrZXRTdWJQcm90b2NvbCA9IG9wdHMucHJvdG9jb2xJZCA9PT0gJ01RSXNkcCcgJiYgb3B0cy5wcm90b2NvbFZlcnNpb24gPT09IDNcbiAgICAgICAgPyAnbXF0dHYzLjEnXG4gICAgICAgIDogJ21xdHQnO1xuICAgIHNldERlZmF1bHRPcHRzKG9wdHMpO1xuICAgIGNvbnN0IHVybCA9IGJ1aWxkVXJsKG9wdHMsIGNsaWVudCk7XG4gICAgc29ja2V0VGFzayA9IHd4LmNvbm5lY3RTb2NrZXQoe1xuICAgICAgICB1cmwsXG4gICAgICAgIHByb3RvY29sczogW3dlYnNvY2tldFN1YlByb3RvY29sXSxcbiAgICB9KTtcbiAgICBwcm94eSA9IGJ1aWxkUHJveHkoKTtcbiAgICBzdHJlYW0gPSBuZXcgQnVmZmVyZWREdXBsZXhfMS5CdWZmZXJlZER1cGxleChvcHRzLCBwcm94eSwgc29ja2V0VGFzayk7XG4gICAgc3RyZWFtLl9kZXN0cm95ID0gKGVyciwgY2IpID0+IHtcbiAgICAgICAgc29ja2V0VGFzay5jbG9zZSh7XG4gICAgICAgICAgICBzdWNjZXNzKCkge1xuICAgICAgICAgICAgICAgIGlmIChjYilcbiAgICAgICAgICAgICAgICAgICAgY2IoZXJyKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgY29uc3QgZGVzdHJveVJlZiA9IHN0cmVhbS5kZXN0cm95O1xuICAgIHN0cmVhbS5kZXN0cm95ID0gKGVyciwgY2IpID0+IHtcbiAgICAgICAgc3RyZWFtLmRlc3Ryb3kgPSBkZXN0cm95UmVmO1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHNvY2tldFRhc2suY2xvc2Uoe1xuICAgICAgICAgICAgICAgIGZhaWwoKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0cmVhbS5fZGVzdHJveShlcnIsIGNiKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIDApO1xuICAgICAgICByZXR1cm4gc3RyZWFtO1xuICAgIH07XG4gICAgYmluZEV2ZW50SGFuZGxlcigpO1xuICAgIHJldHVybiBzdHJlYW07XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gYnVpbGRTdHJlYW07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13eC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/connect/wx.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/default-message-id-provider.js":
/*!*********************************************************************!*\
  !*** ../node_modules/mqtt/build/lib/default-message-id-provider.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass DefaultMessageIdProvider {\n    constructor() {\n        this.nextId = Math.max(1, Math.floor(Math.random() * 65535));\n    }\n    allocate() {\n        const id = this.nextId++;\n        if (this.nextId === 65536) {\n            this.nextId = 1;\n        }\n        return id;\n    }\n    getLastAllocated() {\n        return this.nextId === 1 ? 65535 : this.nextId - 1;\n    }\n    register(messageId) {\n        return true;\n    }\n    deallocate(messageId) { }\n    clear() { }\n}\nexports[\"default\"] = DefaultMessageIdProvider;\n//# sourceMappingURL=default-message-id-provider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL2RlZmF1bHQtbWVzc2FnZS1pZC1wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uLi9ub2RlX21vZHVsZXMvbXF0dC9idWlsZC9saWIvZGVmYXVsdC1tZXNzYWdlLWlkLXByb3ZpZGVyLmpzPzhiMGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jbGFzcyBEZWZhdWx0TWVzc2FnZUlkUHJvdmlkZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLm5leHRJZCA9IE1hdGgubWF4KDEsIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDY1NTM1KSk7XG4gICAgfVxuICAgIGFsbG9jYXRlKCkge1xuICAgICAgICBjb25zdCBpZCA9IHRoaXMubmV4dElkKys7XG4gICAgICAgIGlmICh0aGlzLm5leHRJZCA9PT0gNjU1MzYpIHtcbiAgICAgICAgICAgIHRoaXMubmV4dElkID0gMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaWQ7XG4gICAgfVxuICAgIGdldExhc3RBbGxvY2F0ZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm5leHRJZCA9PT0gMSA/IDY1NTM1IDogdGhpcy5uZXh0SWQgLSAxO1xuICAgIH1cbiAgICByZWdpc3RlcihtZXNzYWdlSWQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGRlYWxsb2NhdGUobWVzc2FnZUlkKSB7IH1cbiAgICBjbGVhcigpIHsgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gRGVmYXVsdE1lc3NhZ2VJZFByb3ZpZGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVmYXVsdC1tZXNzYWdlLWlkLXByb3ZpZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/default-message-id-provider.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/handlers/ack.js":
/*!******************************************************!*\
  !*** ../node_modules/mqtt/build/lib/handlers/ack.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ReasonCodes = void 0;\nexports.ReasonCodes = {\n    0: '',\n    1: 'Unacceptable protocol version',\n    2: 'Identifier rejected',\n    3: 'Server unavailable',\n    4: 'Bad username or password',\n    5: 'Not authorized',\n    16: 'No matching subscribers',\n    17: 'No subscription existed',\n    128: 'Unspecified error',\n    129: 'Malformed Packet',\n    130: 'Protocol Error',\n    131: 'Implementation specific error',\n    132: 'Unsupported Protocol Version',\n    133: 'Client Identifier not valid',\n    134: 'Bad User Name or Password',\n    135: 'Not authorized',\n    136: 'Server unavailable',\n    137: 'Server busy',\n    138: 'Banned',\n    139: 'Server shutting down',\n    140: 'Bad authentication method',\n    141: 'Keep Alive timeout',\n    142: 'Session taken over',\n    143: 'Topic Filter invalid',\n    144: 'Topic Name invalid',\n    145: 'Packet identifier in use',\n    146: 'Packet Identifier not found',\n    147: 'Receive Maximum exceeded',\n    148: 'Topic Alias invalid',\n    149: 'Packet too large',\n    150: 'Message rate too high',\n    151: 'Quota exceeded',\n    152: 'Administrative action',\n    153: 'Payload format invalid',\n    154: 'Retain not supported',\n    155: 'QoS not supported',\n    156: 'Use another server',\n    157: 'Server moved',\n    158: 'Shared Subscriptions not supported',\n    159: 'Connection rate exceeded',\n    160: 'Maximum connect time',\n    161: 'Subscription Identifiers not supported',\n    162: 'Wildcard Subscriptions not supported',\n};\nconst handleAck = (client, packet) => {\n    const { messageId } = packet;\n    const type = packet.cmd;\n    let response = null;\n    const cb = client.outgoing[messageId] ? client.outgoing[messageId].cb : null;\n    let err;\n    if (!cb) {\n        client.log('_handleAck :: Server sent an ack in error. Ignoring.');\n        return;\n    }\n    client.log('_handleAck :: packet type', type);\n    switch (type) {\n        case 'pubcomp':\n        case 'puback': {\n            const pubackRC = packet.reasonCode;\n            if (pubackRC && pubackRC > 0 && pubackRC !== 16) {\n                err = new Error(`Publish error: ${exports.ReasonCodes[pubackRC]}`);\n                err.code = pubackRC;\n                client['_removeOutgoingAndStoreMessage'](messageId, () => {\n                    cb(err, packet);\n                });\n            }\n            else {\n                client['_removeOutgoingAndStoreMessage'](messageId, cb);\n            }\n            break;\n        }\n        case 'pubrec': {\n            response = {\n                cmd: 'pubrel',\n                qos: 2,\n                messageId,\n            };\n            const pubrecRC = packet.reasonCode;\n            if (pubrecRC && pubrecRC > 0 && pubrecRC !== 16) {\n                err = new Error(`Publish error: ${exports.ReasonCodes[pubrecRC]}`);\n                err.code = pubrecRC;\n                client['_removeOutgoingAndStoreMessage'](messageId, () => {\n                    cb(err, packet);\n                });\n            }\n            else {\n                client['_sendPacket'](response);\n            }\n            break;\n        }\n        case 'suback': {\n            delete client.outgoing[messageId];\n            client.messageIdProvider.deallocate(messageId);\n            const granted = packet.granted;\n            for (let grantedI = 0; grantedI < granted.length; grantedI++) {\n                if ((granted[grantedI] & 0x80) !== 0) {\n                    const topics = client.messageIdToTopic[messageId];\n                    if (topics) {\n                        topics.forEach((topic) => {\n                            delete client['_resubscribeTopics'][topic];\n                        });\n                    }\n                }\n            }\n            delete client.messageIdToTopic[messageId];\n            client['_invokeStoreProcessingQueue']();\n            cb(null, packet);\n            break;\n        }\n        case 'unsuback': {\n            delete client.outgoing[messageId];\n            client.messageIdProvider.deallocate(messageId);\n            client['_invokeStoreProcessingQueue']();\n            cb(null);\n            break;\n        }\n        default:\n            client.emit('error', new Error('unrecognized packet type'));\n    }\n    if (client.disconnecting && Object.keys(client.outgoing).length === 0) {\n        client.emit('outgoingEmpty');\n    }\n};\nexports[\"default\"] = handleAck;\n//# sourceMappingURL=ack.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL2hhbmRsZXJzL2Fjay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksWUFBWTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELDhCQUE4QjtBQUNoRjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCw4QkFBOEI7QUFDaEY7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLDJCQUEyQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uLi9ub2RlX21vZHVsZXMvbXF0dC9idWlsZC9saWIvaGFuZGxlcnMvYWNrLmpzPzcyMGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJlYXNvbkNvZGVzID0gdm9pZCAwO1xuZXhwb3J0cy5SZWFzb25Db2RlcyA9IHtcbiAgICAwOiAnJyxcbiAgICAxOiAnVW5hY2NlcHRhYmxlIHByb3RvY29sIHZlcnNpb24nLFxuICAgIDI6ICdJZGVudGlmaWVyIHJlamVjdGVkJyxcbiAgICAzOiAnU2VydmVyIHVuYXZhaWxhYmxlJyxcbiAgICA0OiAnQmFkIHVzZXJuYW1lIG9yIHBhc3N3b3JkJyxcbiAgICA1OiAnTm90IGF1dGhvcml6ZWQnLFxuICAgIDE2OiAnTm8gbWF0Y2hpbmcgc3Vic2NyaWJlcnMnLFxuICAgIDE3OiAnTm8gc3Vic2NyaXB0aW9uIGV4aXN0ZWQnLFxuICAgIDEyODogJ1Vuc3BlY2lmaWVkIGVycm9yJyxcbiAgICAxMjk6ICdNYWxmb3JtZWQgUGFja2V0JyxcbiAgICAxMzA6ICdQcm90b2NvbCBFcnJvcicsXG4gICAgMTMxOiAnSW1wbGVtZW50YXRpb24gc3BlY2lmaWMgZXJyb3InLFxuICAgIDEzMjogJ1Vuc3VwcG9ydGVkIFByb3RvY29sIFZlcnNpb24nLFxuICAgIDEzMzogJ0NsaWVudCBJZGVudGlmaWVyIG5vdCB2YWxpZCcsXG4gICAgMTM0OiAnQmFkIFVzZXIgTmFtZSBvciBQYXNzd29yZCcsXG4gICAgMTM1OiAnTm90IGF1dGhvcml6ZWQnLFxuICAgIDEzNjogJ1NlcnZlciB1bmF2YWlsYWJsZScsXG4gICAgMTM3OiAnU2VydmVyIGJ1c3knLFxuICAgIDEzODogJ0Jhbm5lZCcsXG4gICAgMTM5OiAnU2VydmVyIHNodXR0aW5nIGRvd24nLFxuICAgIDE0MDogJ0JhZCBhdXRoZW50aWNhdGlvbiBtZXRob2QnLFxuICAgIDE0MTogJ0tlZXAgQWxpdmUgdGltZW91dCcsXG4gICAgMTQyOiAnU2Vzc2lvbiB0YWtlbiBvdmVyJyxcbiAgICAxNDM6ICdUb3BpYyBGaWx0ZXIgaW52YWxpZCcsXG4gICAgMTQ0OiAnVG9waWMgTmFtZSBpbnZhbGlkJyxcbiAgICAxNDU6ICdQYWNrZXQgaWRlbnRpZmllciBpbiB1c2UnLFxuICAgIDE0NjogJ1BhY2tldCBJZGVudGlmaWVyIG5vdCBmb3VuZCcsXG4gICAgMTQ3OiAnUmVjZWl2ZSBNYXhpbXVtIGV4Y2VlZGVkJyxcbiAgICAxNDg6ICdUb3BpYyBBbGlhcyBpbnZhbGlkJyxcbiAgICAxNDk6ICdQYWNrZXQgdG9vIGxhcmdlJyxcbiAgICAxNTA6ICdNZXNzYWdlIHJhdGUgdG9vIGhpZ2gnLFxuICAgIDE1MTogJ1F1b3RhIGV4Y2VlZGVkJyxcbiAgICAxNTI6ICdBZG1pbmlzdHJhdGl2ZSBhY3Rpb24nLFxuICAgIDE1MzogJ1BheWxvYWQgZm9ybWF0IGludmFsaWQnLFxuICAgIDE1NDogJ1JldGFpbiBub3Qgc3VwcG9ydGVkJyxcbiAgICAxNTU6ICdRb1Mgbm90IHN1cHBvcnRlZCcsXG4gICAgMTU2OiAnVXNlIGFub3RoZXIgc2VydmVyJyxcbiAgICAxNTc6ICdTZXJ2ZXIgbW92ZWQnLFxuICAgIDE1ODogJ1NoYXJlZCBTdWJzY3JpcHRpb25zIG5vdCBzdXBwb3J0ZWQnLFxuICAgIDE1OTogJ0Nvbm5lY3Rpb24gcmF0ZSBleGNlZWRlZCcsXG4gICAgMTYwOiAnTWF4aW11bSBjb25uZWN0IHRpbWUnLFxuICAgIDE2MTogJ1N1YnNjcmlwdGlvbiBJZGVudGlmaWVycyBub3Qgc3VwcG9ydGVkJyxcbiAgICAxNjI6ICdXaWxkY2FyZCBTdWJzY3JpcHRpb25zIG5vdCBzdXBwb3J0ZWQnLFxufTtcbmNvbnN0IGhhbmRsZUFjayA9IChjbGllbnQsIHBhY2tldCkgPT4ge1xuICAgIGNvbnN0IHsgbWVzc2FnZUlkIH0gPSBwYWNrZXQ7XG4gICAgY29uc3QgdHlwZSA9IHBhY2tldC5jbWQ7XG4gICAgbGV0IHJlc3BvbnNlID0gbnVsbDtcbiAgICBjb25zdCBjYiA9IGNsaWVudC5vdXRnb2luZ1ttZXNzYWdlSWRdID8gY2xpZW50Lm91dGdvaW5nW21lc3NhZ2VJZF0uY2IgOiBudWxsO1xuICAgIGxldCBlcnI7XG4gICAgaWYgKCFjYikge1xuICAgICAgICBjbGllbnQubG9nKCdfaGFuZGxlQWNrIDo6IFNlcnZlciBzZW50IGFuIGFjayBpbiBlcnJvci4gSWdub3JpbmcuJyk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY2xpZW50LmxvZygnX2hhbmRsZUFjayA6OiBwYWNrZXQgdHlwZScsIHR5cGUpO1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlICdwdWJjb21wJzpcbiAgICAgICAgY2FzZSAncHViYWNrJzoge1xuICAgICAgICAgICAgY29uc3QgcHViYWNrUkMgPSBwYWNrZXQucmVhc29uQ29kZTtcbiAgICAgICAgICAgIGlmIChwdWJhY2tSQyAmJiBwdWJhY2tSQyA+IDAgJiYgcHViYWNrUkMgIT09IDE2KSB7XG4gICAgICAgICAgICAgICAgZXJyID0gbmV3IEVycm9yKGBQdWJsaXNoIGVycm9yOiAke2V4cG9ydHMuUmVhc29uQ29kZXNbcHViYWNrUkNdfWApO1xuICAgICAgICAgICAgICAgIGVyci5jb2RlID0gcHViYWNrUkM7XG4gICAgICAgICAgICAgICAgY2xpZW50WydfcmVtb3ZlT3V0Z29pbmdBbmRTdG9yZU1lc3NhZ2UnXShtZXNzYWdlSWQsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY2IoZXJyLCBwYWNrZXQpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY2xpZW50WydfcmVtb3ZlT3V0Z29pbmdBbmRTdG9yZU1lc3NhZ2UnXShtZXNzYWdlSWQsIGNiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ3B1YnJlYyc6IHtcbiAgICAgICAgICAgIHJlc3BvbnNlID0ge1xuICAgICAgICAgICAgICAgIGNtZDogJ3B1YnJlbCcsXG4gICAgICAgICAgICAgICAgcW9zOiAyLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2VJZCxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjb25zdCBwdWJyZWNSQyA9IHBhY2tldC5yZWFzb25Db2RlO1xuICAgICAgICAgICAgaWYgKHB1YnJlY1JDICYmIHB1YnJlY1JDID4gMCAmJiBwdWJyZWNSQyAhPT0gMTYpIHtcbiAgICAgICAgICAgICAgICBlcnIgPSBuZXcgRXJyb3IoYFB1Ymxpc2ggZXJyb3I6ICR7ZXhwb3J0cy5SZWFzb25Db2Rlc1twdWJyZWNSQ119YCk7XG4gICAgICAgICAgICAgICAgZXJyLmNvZGUgPSBwdWJyZWNSQztcbiAgICAgICAgICAgICAgICBjbGllbnRbJ19yZW1vdmVPdXRnb2luZ0FuZFN0b3JlTWVzc2FnZSddKG1lc3NhZ2VJZCwgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjYihlcnIsIHBhY2tldCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjbGllbnRbJ19zZW5kUGFja2V0J10ocmVzcG9uc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAnc3ViYWNrJzoge1xuICAgICAgICAgICAgZGVsZXRlIGNsaWVudC5vdXRnb2luZ1ttZXNzYWdlSWRdO1xuICAgICAgICAgICAgY2xpZW50Lm1lc3NhZ2VJZFByb3ZpZGVyLmRlYWxsb2NhdGUobWVzc2FnZUlkKTtcbiAgICAgICAgICAgIGNvbnN0IGdyYW50ZWQgPSBwYWNrZXQuZ3JhbnRlZDtcbiAgICAgICAgICAgIGZvciAobGV0IGdyYW50ZWRJID0gMDsgZ3JhbnRlZEkgPCBncmFudGVkLmxlbmd0aDsgZ3JhbnRlZEkrKykge1xuICAgICAgICAgICAgICAgIGlmICgoZ3JhbnRlZFtncmFudGVkSV0gJiAweDgwKSAhPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0b3BpY3MgPSBjbGllbnQubWVzc2FnZUlkVG9Ub3BpY1ttZXNzYWdlSWRdO1xuICAgICAgICAgICAgICAgICAgICBpZiAodG9waWNzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0b3BpY3MuZm9yRWFjaCgodG9waWMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgY2xpZW50WydfcmVzdWJzY3JpYmVUb3BpY3MnXVt0b3BpY107XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRlbGV0ZSBjbGllbnQubWVzc2FnZUlkVG9Ub3BpY1ttZXNzYWdlSWRdO1xuICAgICAgICAgICAgY2xpZW50WydfaW52b2tlU3RvcmVQcm9jZXNzaW5nUXVldWUnXSgpO1xuICAgICAgICAgICAgY2IobnVsbCwgcGFja2V0KTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ3Vuc3ViYWNrJzoge1xuICAgICAgICAgICAgZGVsZXRlIGNsaWVudC5vdXRnb2luZ1ttZXNzYWdlSWRdO1xuICAgICAgICAgICAgY2xpZW50Lm1lc3NhZ2VJZFByb3ZpZGVyLmRlYWxsb2NhdGUobWVzc2FnZUlkKTtcbiAgICAgICAgICAgIGNsaWVudFsnX2ludm9rZVN0b3JlUHJvY2Vzc2luZ1F1ZXVlJ10oKTtcbiAgICAgICAgICAgIGNiKG51bGwpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGNsaWVudC5lbWl0KCdlcnJvcicsIG5ldyBFcnJvcigndW5yZWNvZ25pemVkIHBhY2tldCB0eXBlJykpO1xuICAgIH1cbiAgICBpZiAoY2xpZW50LmRpc2Nvbm5lY3RpbmcgJiYgT2JqZWN0LmtleXMoY2xpZW50Lm91dGdvaW5nKS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgY2xpZW50LmVtaXQoJ291dGdvaW5nRW1wdHknKTtcbiAgICB9XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gaGFuZGxlQWNrO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWNrLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/handlers/ack.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/handlers/auth.js":
/*!*******************************************************!*\
  !*** ../node_modules/mqtt/build/lib/handlers/auth.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst shared_1 = __webpack_require__(/*! ../shared */ \"(ssr)/../node_modules/mqtt/build/lib/shared.js\");\nconst ack_1 = __webpack_require__(/*! ./ack */ \"(ssr)/../node_modules/mqtt/build/lib/handlers/ack.js\");\nconst handleAuth = (client, packet) => {\n    const { options } = client;\n    const version = options.protocolVersion;\n    const rc = version === 5 ? packet.reasonCode : packet.returnCode;\n    if (version !== 5) {\n        const err = new shared_1.ErrorWithReasonCode(`Protocol error: Auth packets are only supported in MQTT 5. Your version:${version}`, rc);\n        client.emit('error', err);\n        return;\n    }\n    client.handleAuth(packet, (err, packet2) => {\n        if (err) {\n            client.emit('error', err);\n            return;\n        }\n        if (rc === 24) {\n            client.reconnecting = false;\n            client['_sendPacket'](packet2);\n        }\n        else {\n            const error = new shared_1.ErrorWithReasonCode(`Connection refused: ${ack_1.ReasonCodes[rc]}`, rc);\n            client.emit('error', error);\n        }\n    });\n};\nexports[\"default\"] = handleAuth;\n//# sourceMappingURL=auth.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL2hhbmRsZXJzL2F1dGguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLG1CQUFPLENBQUMsaUVBQVc7QUFDcEMsY0FBYyxtQkFBTyxDQUFDLG1FQUFPO0FBQzdCO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLGdJQUFnSSxRQUFRO0FBQ3hJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0ZBQWtGLHNCQUFzQjtBQUN4RztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uLi9ub2RlX21vZHVsZXMvbXF0dC9idWlsZC9saWIvaGFuZGxlcnMvYXV0aC5qcz9iMDg1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3Qgc2hhcmVkXzEgPSByZXF1aXJlKFwiLi4vc2hhcmVkXCIpO1xuY29uc3QgYWNrXzEgPSByZXF1aXJlKFwiLi9hY2tcIik7XG5jb25zdCBoYW5kbGVBdXRoID0gKGNsaWVudCwgcGFja2V0KSA9PiB7XG4gICAgY29uc3QgeyBvcHRpb25zIH0gPSBjbGllbnQ7XG4gICAgY29uc3QgdmVyc2lvbiA9IG9wdGlvbnMucHJvdG9jb2xWZXJzaW9uO1xuICAgIGNvbnN0IHJjID0gdmVyc2lvbiA9PT0gNSA/IHBhY2tldC5yZWFzb25Db2RlIDogcGFja2V0LnJldHVybkNvZGU7XG4gICAgaWYgKHZlcnNpb24gIT09IDUpIHtcbiAgICAgICAgY29uc3QgZXJyID0gbmV3IHNoYXJlZF8xLkVycm9yV2l0aFJlYXNvbkNvZGUoYFByb3RvY29sIGVycm9yOiBBdXRoIHBhY2tldHMgYXJlIG9ubHkgc3VwcG9ydGVkIGluIE1RVFQgNS4gWW91ciB2ZXJzaW9uOiR7dmVyc2lvbn1gLCByYyk7XG4gICAgICAgIGNsaWVudC5lbWl0KCdlcnJvcicsIGVycik7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY2xpZW50LmhhbmRsZUF1dGgocGFja2V0LCAoZXJyLCBwYWNrZXQyKSA9PiB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgIGNsaWVudC5lbWl0KCdlcnJvcicsIGVycik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJjID09PSAyNCkge1xuICAgICAgICAgICAgY2xpZW50LnJlY29ubmVjdGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgY2xpZW50Wydfc2VuZFBhY2tldCddKHBhY2tldDIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgc2hhcmVkXzEuRXJyb3JXaXRoUmVhc29uQ29kZShgQ29ubmVjdGlvbiByZWZ1c2VkOiAke2Fja18xLlJlYXNvbkNvZGVzW3JjXX1gLCByYyk7XG4gICAgICAgICAgICBjbGllbnQuZW1pdCgnZXJyb3InLCBlcnJvcik7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5leHBvcnRzLmRlZmF1bHQgPSBoYW5kbGVBdXRoO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXV0aC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/handlers/auth.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/handlers/connack.js":
/*!**********************************************************!*\
  !*** ../node_modules/mqtt/build/lib/handlers/connack.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst ack_1 = __webpack_require__(/*! ./ack */ \"(ssr)/../node_modules/mqtt/build/lib/handlers/ack.js\");\nconst topic_alias_send_1 = __importDefault(__webpack_require__(/*! ../topic-alias-send */ \"(ssr)/../node_modules/mqtt/build/lib/topic-alias-send.js\"));\nconst shared_1 = __webpack_require__(/*! ../shared */ \"(ssr)/../node_modules/mqtt/build/lib/shared.js\");\nconst handleConnack = (client, packet) => {\n    client.log('_handleConnack');\n    const { options } = client;\n    const version = options.protocolVersion;\n    const rc = version === 5 ? packet.reasonCode : packet.returnCode;\n    clearTimeout(client['connackTimer']);\n    delete client['topicAliasSend'];\n    if (packet.properties) {\n        if (packet.properties.topicAliasMaximum) {\n            if (packet.properties.topicAliasMaximum > 0xffff) {\n                client.emit('error', new Error('topicAliasMaximum from broker is out of range'));\n                return;\n            }\n            if (packet.properties.topicAliasMaximum > 0) {\n                client['topicAliasSend'] = new topic_alias_send_1.default(packet.properties.topicAliasMaximum);\n            }\n        }\n        if (packet.properties.serverKeepAlive && options.keepalive) {\n            options.keepalive = packet.properties.serverKeepAlive;\n            client['_shiftPingInterval']();\n        }\n        if (packet.properties.maximumPacketSize) {\n            if (!options.properties) {\n                options.properties = {};\n            }\n            options.properties.maximumPacketSize =\n                packet.properties.maximumPacketSize;\n        }\n    }\n    if (rc === 0) {\n        client.reconnecting = false;\n        client['_onConnect'](packet);\n    }\n    else if (rc > 0) {\n        const err = new shared_1.ErrorWithReasonCode(`Connection refused: ${ack_1.ReasonCodes[rc]}`, rc);\n        client.emit('error', err);\n    }\n};\nexports[\"default\"] = handleConnack;\n//# sourceMappingURL=connack.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL2hhbmRsZXJzL2Nvbm5hY2suanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLG1CQUFPLENBQUMsbUVBQU87QUFDN0IsMkNBQTJDLG1CQUFPLENBQUMscUZBQXFCO0FBQ3hFLGlCQUFpQixtQkFBTyxDQUFDLGlFQUFXO0FBQ3BDO0FBQ0E7QUFDQSxZQUFZLFVBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RUFBNEUsc0JBQXNCO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL2hhbmRsZXJzL2Nvbm5hY2suanM/M2I2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGFja18xID0gcmVxdWlyZShcIi4vYWNrXCIpO1xuY29uc3QgdG9waWNfYWxpYXNfc2VuZF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi90b3BpYy1hbGlhcy1zZW5kXCIpKTtcbmNvbnN0IHNoYXJlZF8xID0gcmVxdWlyZShcIi4uL3NoYXJlZFwiKTtcbmNvbnN0IGhhbmRsZUNvbm5hY2sgPSAoY2xpZW50LCBwYWNrZXQpID0+IHtcbiAgICBjbGllbnQubG9nKCdfaGFuZGxlQ29ubmFjaycpO1xuICAgIGNvbnN0IHsgb3B0aW9ucyB9ID0gY2xpZW50O1xuICAgIGNvbnN0IHZlcnNpb24gPSBvcHRpb25zLnByb3RvY29sVmVyc2lvbjtcbiAgICBjb25zdCByYyA9IHZlcnNpb24gPT09IDUgPyBwYWNrZXQucmVhc29uQ29kZSA6IHBhY2tldC5yZXR1cm5Db2RlO1xuICAgIGNsZWFyVGltZW91dChjbGllbnRbJ2Nvbm5hY2tUaW1lciddKTtcbiAgICBkZWxldGUgY2xpZW50Wyd0b3BpY0FsaWFzU2VuZCddO1xuICAgIGlmIChwYWNrZXQucHJvcGVydGllcykge1xuICAgICAgICBpZiAocGFja2V0LnByb3BlcnRpZXMudG9waWNBbGlhc01heGltdW0pIHtcbiAgICAgICAgICAgIGlmIChwYWNrZXQucHJvcGVydGllcy50b3BpY0FsaWFzTWF4aW11bSA+IDB4ZmZmZikge1xuICAgICAgICAgICAgICAgIGNsaWVudC5lbWl0KCdlcnJvcicsIG5ldyBFcnJvcigndG9waWNBbGlhc01heGltdW0gZnJvbSBicm9rZXIgaXMgb3V0IG9mIHJhbmdlJykpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChwYWNrZXQucHJvcGVydGllcy50b3BpY0FsaWFzTWF4aW11bSA+IDApIHtcbiAgICAgICAgICAgICAgICBjbGllbnRbJ3RvcGljQWxpYXNTZW5kJ10gPSBuZXcgdG9waWNfYWxpYXNfc2VuZF8xLmRlZmF1bHQocGFja2V0LnByb3BlcnRpZXMudG9waWNBbGlhc01heGltdW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChwYWNrZXQucHJvcGVydGllcy5zZXJ2ZXJLZWVwQWxpdmUgJiYgb3B0aW9ucy5rZWVwYWxpdmUpIHtcbiAgICAgICAgICAgIG9wdGlvbnMua2VlcGFsaXZlID0gcGFja2V0LnByb3BlcnRpZXMuc2VydmVyS2VlcEFsaXZlO1xuICAgICAgICAgICAgY2xpZW50Wydfc2hpZnRQaW5nSW50ZXJ2YWwnXSgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwYWNrZXQucHJvcGVydGllcy5tYXhpbXVtUGFja2V0U2l6ZSkge1xuICAgICAgICAgICAgaWYgKCFvcHRpb25zLnByb3BlcnRpZXMpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25zLnByb3BlcnRpZXMgPSB7fTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9wdGlvbnMucHJvcGVydGllcy5tYXhpbXVtUGFja2V0U2l6ZSA9XG4gICAgICAgICAgICAgICAgcGFja2V0LnByb3BlcnRpZXMubWF4aW11bVBhY2tldFNpemU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKHJjID09PSAwKSB7XG4gICAgICAgIGNsaWVudC5yZWNvbm5lY3RpbmcgPSBmYWxzZTtcbiAgICAgICAgY2xpZW50Wydfb25Db25uZWN0J10ocGFja2V0KTtcbiAgICB9XG4gICAgZWxzZSBpZiAocmMgPiAwKSB7XG4gICAgICAgIGNvbnN0IGVyciA9IG5ldyBzaGFyZWRfMS5FcnJvcldpdGhSZWFzb25Db2RlKGBDb25uZWN0aW9uIHJlZnVzZWQ6ICR7YWNrXzEuUmVhc29uQ29kZXNbcmNdfWAsIHJjKTtcbiAgICAgICAgY2xpZW50LmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgICB9XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gaGFuZGxlQ29ubmFjaztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbm5hY2suanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/handlers/connack.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/handlers/index.js":
/*!********************************************************!*\
  !*** ../node_modules/mqtt/build/lib/handlers/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst publish_1 = __importDefault(__webpack_require__(/*! ./publish */ \"(ssr)/../node_modules/mqtt/build/lib/handlers/publish.js\"));\nconst auth_1 = __importDefault(__webpack_require__(/*! ./auth */ \"(ssr)/../node_modules/mqtt/build/lib/handlers/auth.js\"));\nconst connack_1 = __importDefault(__webpack_require__(/*! ./connack */ \"(ssr)/../node_modules/mqtt/build/lib/handlers/connack.js\"));\nconst ack_1 = __importDefault(__webpack_require__(/*! ./ack */ \"(ssr)/../node_modules/mqtt/build/lib/handlers/ack.js\"));\nconst pubrel_1 = __importDefault(__webpack_require__(/*! ./pubrel */ \"(ssr)/../node_modules/mqtt/build/lib/handlers/pubrel.js\"));\nconst handle = (client, packet, done) => {\n    const { options } = client;\n    if (options.protocolVersion === 5 &&\n        options.properties &&\n        options.properties.maximumPacketSize &&\n        options.properties.maximumPacketSize < packet.length) {\n        client.emit('error', new Error(`exceeding packets size ${packet.cmd}`));\n        client.end({\n            reasonCode: 149,\n            properties: { reasonString: 'Maximum packet size was exceeded' },\n        });\n        return client;\n    }\n    client.log('_handlePacket :: emitting packetreceive');\n    client.emit('packetreceive', packet);\n    switch (packet.cmd) {\n        case 'publish':\n            (0, publish_1.default)(client, packet, done);\n            break;\n        case 'puback':\n        case 'pubrec':\n        case 'pubcomp':\n        case 'suback':\n        case 'unsuback':\n            (0, ack_1.default)(client, packet);\n            done();\n            break;\n        case 'pubrel':\n            (0, pubrel_1.default)(client, packet, done);\n            break;\n        case 'connack':\n            (0, connack_1.default)(client, packet);\n            done();\n            break;\n        case 'auth':\n            (0, auth_1.default)(client, packet);\n            done();\n            break;\n        case 'pingresp':\n            client.pingResp = true;\n            done();\n            break;\n        case 'disconnect':\n            client.emit('disconnect', packet);\n            done();\n            break;\n        default:\n            client.log('_handlePacket :: unknown command');\n            done();\n            break;\n    }\n};\nexports[\"default\"] = handle;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL2hhbmRsZXJzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0NBQWtDLG1CQUFPLENBQUMsMkVBQVc7QUFDckQsK0JBQStCLG1CQUFPLENBQUMscUVBQVE7QUFDL0Msa0NBQWtDLG1CQUFPLENBQUMsMkVBQVc7QUFDckQsOEJBQThCLG1CQUFPLENBQUMsbUVBQU87QUFDN0MsaUNBQWlDLG1CQUFPLENBQUMseUVBQVU7QUFDbkQ7QUFDQSxZQUFZLFVBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUsV0FBVztBQUM1RTtBQUNBO0FBQ0EsMEJBQTBCLGtEQUFrRDtBQUM1RSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL2hhbmRsZXJzL2luZGV4LmpzP2YwZmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBwdWJsaXNoXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vcHVibGlzaFwiKSk7XG5jb25zdCBhdXRoXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYXV0aFwiKSk7XG5jb25zdCBjb25uYWNrXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vY29ubmFja1wiKSk7XG5jb25zdCBhY2tfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9hY2tcIikpO1xuY29uc3QgcHVicmVsXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vcHVicmVsXCIpKTtcbmNvbnN0IGhhbmRsZSA9IChjbGllbnQsIHBhY2tldCwgZG9uZSkgPT4ge1xuICAgIGNvbnN0IHsgb3B0aW9ucyB9ID0gY2xpZW50O1xuICAgIGlmIChvcHRpb25zLnByb3RvY29sVmVyc2lvbiA9PT0gNSAmJlxuICAgICAgICBvcHRpb25zLnByb3BlcnRpZXMgJiZcbiAgICAgICAgb3B0aW9ucy5wcm9wZXJ0aWVzLm1heGltdW1QYWNrZXRTaXplICYmXG4gICAgICAgIG9wdGlvbnMucHJvcGVydGllcy5tYXhpbXVtUGFja2V0U2l6ZSA8IHBhY2tldC5sZW5ndGgpIHtcbiAgICAgICAgY2xpZW50LmVtaXQoJ2Vycm9yJywgbmV3IEVycm9yKGBleGNlZWRpbmcgcGFja2V0cyBzaXplICR7cGFja2V0LmNtZH1gKSk7XG4gICAgICAgIGNsaWVudC5lbmQoe1xuICAgICAgICAgICAgcmVhc29uQ29kZTogMTQ5LFxuICAgICAgICAgICAgcHJvcGVydGllczogeyByZWFzb25TdHJpbmc6ICdNYXhpbXVtIHBhY2tldCBzaXplIHdhcyBleGNlZWRlZCcgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBjbGllbnQ7XG4gICAgfVxuICAgIGNsaWVudC5sb2coJ19oYW5kbGVQYWNrZXQgOjogZW1pdHRpbmcgcGFja2V0cmVjZWl2ZScpO1xuICAgIGNsaWVudC5lbWl0KCdwYWNrZXRyZWNlaXZlJywgcGFja2V0KTtcbiAgICBzd2l0Y2ggKHBhY2tldC5jbWQpIHtcbiAgICAgICAgY2FzZSAncHVibGlzaCc6XG4gICAgICAgICAgICAoMCwgcHVibGlzaF8xLmRlZmF1bHQpKGNsaWVudCwgcGFja2V0LCBkb25lKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdwdWJhY2snOlxuICAgICAgICBjYXNlICdwdWJyZWMnOlxuICAgICAgICBjYXNlICdwdWJjb21wJzpcbiAgICAgICAgY2FzZSAnc3ViYWNrJzpcbiAgICAgICAgY2FzZSAndW5zdWJhY2snOlxuICAgICAgICAgICAgKDAsIGFja18xLmRlZmF1bHQpKGNsaWVudCwgcGFja2V0KTtcbiAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdwdWJyZWwnOlxuICAgICAgICAgICAgKDAsIHB1YnJlbF8xLmRlZmF1bHQpKGNsaWVudCwgcGFja2V0LCBkb25lKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdjb25uYWNrJzpcbiAgICAgICAgICAgICgwLCBjb25uYWNrXzEuZGVmYXVsdCkoY2xpZW50LCBwYWNrZXQpO1xuICAgICAgICAgICAgZG9uZSgpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2F1dGgnOlxuICAgICAgICAgICAgKDAsIGF1dGhfMS5kZWZhdWx0KShjbGllbnQsIHBhY2tldCk7XG4gICAgICAgICAgICBkb25lKCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAncGluZ3Jlc3AnOlxuICAgICAgICAgICAgY2xpZW50LnBpbmdSZXNwID0gdHJ1ZTtcbiAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdkaXNjb25uZWN0JzpcbiAgICAgICAgICAgIGNsaWVudC5lbWl0KCdkaXNjb25uZWN0JywgcGFja2V0KTtcbiAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgY2xpZW50LmxvZygnX2hhbmRsZVBhY2tldCA6OiB1bmtub3duIGNvbW1hbmQnKTtcbiAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgIH1cbn07XG5leHBvcnRzLmRlZmF1bHQgPSBoYW5kbGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/handlers/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/handlers/publish.js":
/*!**********************************************************!*\
  !*** ../node_modules/mqtt/build/lib/handlers/publish.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst validReasonCodes = [0, 16, 128, 131, 135, 144, 145, 151, 153];\nconst handlePublish = (client, packet, done) => {\n    client.log('handlePublish: packet %o', packet);\n    done = typeof done !== 'undefined' ? done : client.noop;\n    let topic = packet.topic.toString();\n    const message = packet.payload;\n    const { qos } = packet;\n    const { messageId } = packet;\n    const { options } = client;\n    if (client.options.protocolVersion === 5) {\n        let alias;\n        if (packet.properties) {\n            alias = packet.properties.topicAlias;\n        }\n        if (typeof alias !== 'undefined') {\n            if (topic.length === 0) {\n                if (alias > 0 && alias <= 0xffff) {\n                    const gotTopic = client['topicAliasRecv'].getTopicByAlias(alias);\n                    if (gotTopic) {\n                        topic = gotTopic;\n                        client.log('handlePublish :: topic complemented by alias. topic: %s - alias: %d', topic, alias);\n                    }\n                    else {\n                        client.log('handlePublish :: unregistered topic alias. alias: %d', alias);\n                        client.emit('error', new Error('Received unregistered Topic Alias'));\n                        return;\n                    }\n                }\n                else {\n                    client.log('handlePublish :: topic alias out of range. alias: %d', alias);\n                    client.emit('error', new Error('Received Topic Alias is out of range'));\n                    return;\n                }\n            }\n            else if (client['topicAliasRecv'].put(topic, alias)) {\n                client.log('handlePublish :: registered topic: %s - alias: %d', topic, alias);\n            }\n            else {\n                client.log('handlePublish :: topic alias out of range. alias: %d', alias);\n                client.emit('error', new Error('Received Topic Alias is out of range'));\n                return;\n            }\n        }\n    }\n    client.log('handlePublish: qos %d', qos);\n    switch (qos) {\n        case 2: {\n            options.customHandleAcks(topic, message, packet, (error, code) => {\n                if (typeof error === 'number') {\n                    code = error;\n                    error = null;\n                }\n                if (error) {\n                    return client.emit('error', error);\n                }\n                if (validReasonCodes.indexOf(code) === -1) {\n                    return client.emit('error', new Error('Wrong reason code for pubrec'));\n                }\n                if (code) {\n                    client['_sendPacket']({ cmd: 'pubrec', messageId, reasonCode: code }, done);\n                }\n                else {\n                    client.incomingStore.put(packet, () => {\n                        client['_sendPacket']({ cmd: 'pubrec', messageId }, done);\n                    });\n                }\n            });\n            break;\n        }\n        case 1: {\n            options.customHandleAcks(topic, message, packet, (error, code) => {\n                if (typeof error === 'number') {\n                    code = error;\n                    error = null;\n                }\n                if (error) {\n                    return client.emit('error', error);\n                }\n                if (validReasonCodes.indexOf(code) === -1) {\n                    return client.emit('error', new Error('Wrong reason code for puback'));\n                }\n                if (!code) {\n                    client.emit('message', topic, message, packet);\n                }\n                client.handleMessage(packet, (err) => {\n                    if (err) {\n                        return done && done(err);\n                    }\n                    client['_sendPacket']({ cmd: 'puback', messageId, reasonCode: code }, done);\n                });\n            });\n            break;\n        }\n        case 0:\n            client.emit('message', topic, message, packet);\n            client.handleMessage(packet, done);\n            break;\n        default:\n            client.log('handlePublish: unknown QoS. Doing nothing.');\n            break;\n    }\n};\nexports[\"default\"] = handlePublish;\n//# sourceMappingURL=publish.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL2hhbmRsZXJzL3B1Ymxpc2guanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxNQUFNO0FBQ2xCLFlBQVksWUFBWTtBQUN4QixZQUFZLFVBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0Qyw0Q0FBNEM7QUFDeEY7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELDBCQUEwQjtBQUMxRSxxQkFBcUI7QUFDckI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLDRDQUE0QztBQUN4RixpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4uL25vZGVfbW9kdWxlcy9tcXR0L2J1aWxkL2xpYi9oYW5kbGVycy9wdWJsaXNoLmpzPzEyN2QiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB2YWxpZFJlYXNvbkNvZGVzID0gWzAsIDE2LCAxMjgsIDEzMSwgMTM1LCAxNDQsIDE0NSwgMTUxLCAxNTNdO1xuY29uc3QgaGFuZGxlUHVibGlzaCA9IChjbGllbnQsIHBhY2tldCwgZG9uZSkgPT4ge1xuICAgIGNsaWVudC5sb2coJ2hhbmRsZVB1Ymxpc2g6IHBhY2tldCAlbycsIHBhY2tldCk7XG4gICAgZG9uZSA9IHR5cGVvZiBkb25lICE9PSAndW5kZWZpbmVkJyA/IGRvbmUgOiBjbGllbnQubm9vcDtcbiAgICBsZXQgdG9waWMgPSBwYWNrZXQudG9waWMudG9TdHJpbmcoKTtcbiAgICBjb25zdCBtZXNzYWdlID0gcGFja2V0LnBheWxvYWQ7XG4gICAgY29uc3QgeyBxb3MgfSA9IHBhY2tldDtcbiAgICBjb25zdCB7IG1lc3NhZ2VJZCB9ID0gcGFja2V0O1xuICAgIGNvbnN0IHsgb3B0aW9ucyB9ID0gY2xpZW50O1xuICAgIGlmIChjbGllbnQub3B0aW9ucy5wcm90b2NvbFZlcnNpb24gPT09IDUpIHtcbiAgICAgICAgbGV0IGFsaWFzO1xuICAgICAgICBpZiAocGFja2V0LnByb3BlcnRpZXMpIHtcbiAgICAgICAgICAgIGFsaWFzID0gcGFja2V0LnByb3BlcnRpZXMudG9waWNBbGlhcztcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIGFsaWFzICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgaWYgKHRvcGljLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGlmIChhbGlhcyA+IDAgJiYgYWxpYXMgPD0gMHhmZmZmKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGdvdFRvcGljID0gY2xpZW50Wyd0b3BpY0FsaWFzUmVjdiddLmdldFRvcGljQnlBbGlhcyhhbGlhcyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChnb3RUb3BpYykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdG9waWMgPSBnb3RUb3BpYztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWVudC5sb2coJ2hhbmRsZVB1Ymxpc2ggOjogdG9waWMgY29tcGxlbWVudGVkIGJ5IGFsaWFzLiB0b3BpYzogJXMgLSBhbGlhczogJWQnLCB0b3BpYywgYWxpYXMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2xpZW50LmxvZygnaGFuZGxlUHVibGlzaCA6OiB1bnJlZ2lzdGVyZWQgdG9waWMgYWxpYXMuIGFsaWFzOiAlZCcsIGFsaWFzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWVudC5lbWl0KCdlcnJvcicsIG5ldyBFcnJvcignUmVjZWl2ZWQgdW5yZWdpc3RlcmVkIFRvcGljIEFsaWFzJykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjbGllbnQubG9nKCdoYW5kbGVQdWJsaXNoIDo6IHRvcGljIGFsaWFzIG91dCBvZiByYW5nZS4gYWxpYXM6ICVkJywgYWxpYXMpO1xuICAgICAgICAgICAgICAgICAgICBjbGllbnQuZW1pdCgnZXJyb3InLCBuZXcgRXJyb3IoJ1JlY2VpdmVkIFRvcGljIEFsaWFzIGlzIG91dCBvZiByYW5nZScpKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGNsaWVudFsndG9waWNBbGlhc1JlY3YnXS5wdXQodG9waWMsIGFsaWFzKSkge1xuICAgICAgICAgICAgICAgIGNsaWVudC5sb2coJ2hhbmRsZVB1Ymxpc2ggOjogcmVnaXN0ZXJlZCB0b3BpYzogJXMgLSBhbGlhczogJWQnLCB0b3BpYywgYWxpYXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY2xpZW50LmxvZygnaGFuZGxlUHVibGlzaCA6OiB0b3BpYyBhbGlhcyBvdXQgb2YgcmFuZ2UuIGFsaWFzOiAlZCcsIGFsaWFzKTtcbiAgICAgICAgICAgICAgICBjbGllbnQuZW1pdCgnZXJyb3InLCBuZXcgRXJyb3IoJ1JlY2VpdmVkIFRvcGljIEFsaWFzIGlzIG91dCBvZiByYW5nZScpKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2xpZW50LmxvZygnaGFuZGxlUHVibGlzaDogcW9zICVkJywgcW9zKTtcbiAgICBzd2l0Y2ggKHFvcykge1xuICAgICAgICBjYXNlIDI6IHtcbiAgICAgICAgICAgIG9wdGlvbnMuY3VzdG9tSGFuZGxlQWNrcyh0b3BpYywgbWVzc2FnZSwgcGFja2V0LCAoZXJyb3IsIGNvZGUpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGVycm9yID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgICAgICAgICBjb2RlID0gZXJyb3I7XG4gICAgICAgICAgICAgICAgICAgIGVycm9yID0gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjbGllbnQuZW1pdCgnZXJyb3InLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh2YWxpZFJlYXNvbkNvZGVzLmluZGV4T2YoY29kZSkgPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjbGllbnQuZW1pdCgnZXJyb3InLCBuZXcgRXJyb3IoJ1dyb25nIHJlYXNvbiBjb2RlIGZvciBwdWJyZWMnKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChjb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsaWVudFsnX3NlbmRQYWNrZXQnXSh7IGNtZDogJ3B1YnJlYycsIG1lc3NhZ2VJZCwgcmVhc29uQ29kZTogY29kZSB9LCBkb25lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNsaWVudC5pbmNvbWluZ1N0b3JlLnB1dChwYWNrZXQsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWVudFsnX3NlbmRQYWNrZXQnXSh7IGNtZDogJ3B1YnJlYycsIG1lc3NhZ2VJZCB9LCBkb25lKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIDE6IHtcbiAgICAgICAgICAgIG9wdGlvbnMuY3VzdG9tSGFuZGxlQWNrcyh0b3BpYywgbWVzc2FnZSwgcGFja2V0LCAoZXJyb3IsIGNvZGUpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGVycm9yID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgICAgICAgICBjb2RlID0gZXJyb3I7XG4gICAgICAgICAgICAgICAgICAgIGVycm9yID0gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjbGllbnQuZW1pdCgnZXJyb3InLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh2YWxpZFJlYXNvbkNvZGVzLmluZGV4T2YoY29kZSkgPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjbGllbnQuZW1pdCgnZXJyb3InLCBuZXcgRXJyb3IoJ1dyb25nIHJlYXNvbiBjb2RlIGZvciBwdWJhY2snKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghY29kZSkge1xuICAgICAgICAgICAgICAgICAgICBjbGllbnQuZW1pdCgnbWVzc2FnZScsIHRvcGljLCBtZXNzYWdlLCBwYWNrZXQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjbGllbnQuaGFuZGxlTWVzc2FnZShwYWNrZXQsIChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvbmUgJiYgZG9uZShlcnIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNsaWVudFsnX3NlbmRQYWNrZXQnXSh7IGNtZDogJ3B1YmFjaycsIG1lc3NhZ2VJZCwgcmVhc29uQ29kZTogY29kZSB9LCBkb25lKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgY2xpZW50LmVtaXQoJ21lc3NhZ2UnLCB0b3BpYywgbWVzc2FnZSwgcGFja2V0KTtcbiAgICAgICAgICAgIGNsaWVudC5oYW5kbGVNZXNzYWdlKHBhY2tldCwgZG9uZSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGNsaWVudC5sb2coJ2hhbmRsZVB1Ymxpc2g6IHVua25vd24gUW9TLiBEb2luZyBub3RoaW5nLicpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxufTtcbmV4cG9ydHMuZGVmYXVsdCA9IGhhbmRsZVB1Ymxpc2g7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wdWJsaXNoLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/handlers/publish.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/handlers/pubrel.js":
/*!*********************************************************!*\
  !*** ../node_modules/mqtt/build/lib/handlers/pubrel.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst handlePubrel = (client, packet, done) => {\n    client.log('handling pubrel packet');\n    const callback = typeof done !== 'undefined' ? done : client.noop;\n    const { messageId } = packet;\n    const comp = { cmd: 'pubcomp', messageId };\n    client.incomingStore.get(packet, (err, pub) => {\n        if (!err) {\n            client.emit('message', pub.topic, pub.payload, pub);\n            client.handleMessage(pub, (err2) => {\n                if (err2) {\n                    return callback(err2);\n                }\n                client.incomingStore.del(pub, client.noop);\n                client['_sendPacket'](comp, callback);\n            });\n        }\n        else {\n            client['_sendPacket'](comp, callback);\n        }\n    });\n};\nexports[\"default\"] = handlePubrel;\n//# sourceMappingURL=pubrel.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL2hhbmRsZXJzL3B1YnJlbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQSxZQUFZLFlBQVk7QUFDeEIsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL2hhbmRsZXJzL3B1YnJlbC5qcz9iMDYxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgaGFuZGxlUHVicmVsID0gKGNsaWVudCwgcGFja2V0LCBkb25lKSA9PiB7XG4gICAgY2xpZW50LmxvZygnaGFuZGxpbmcgcHVicmVsIHBhY2tldCcpO1xuICAgIGNvbnN0IGNhbGxiYWNrID0gdHlwZW9mIGRvbmUgIT09ICd1bmRlZmluZWQnID8gZG9uZSA6IGNsaWVudC5ub29wO1xuICAgIGNvbnN0IHsgbWVzc2FnZUlkIH0gPSBwYWNrZXQ7XG4gICAgY29uc3QgY29tcCA9IHsgY21kOiAncHViY29tcCcsIG1lc3NhZ2VJZCB9O1xuICAgIGNsaWVudC5pbmNvbWluZ1N0b3JlLmdldChwYWNrZXQsIChlcnIsIHB1YikgPT4ge1xuICAgICAgICBpZiAoIWVycikge1xuICAgICAgICAgICAgY2xpZW50LmVtaXQoJ21lc3NhZ2UnLCBwdWIudG9waWMsIHB1Yi5wYXlsb2FkLCBwdWIpO1xuICAgICAgICAgICAgY2xpZW50LmhhbmRsZU1lc3NhZ2UocHViLCAoZXJyMikgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlcnIyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhlcnIyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2xpZW50LmluY29taW5nU3RvcmUuZGVsKHB1YiwgY2xpZW50Lm5vb3ApO1xuICAgICAgICAgICAgICAgIGNsaWVudFsnX3NlbmRQYWNrZXQnXShjb21wLCBjYWxsYmFjayk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNsaWVudFsnX3NlbmRQYWNrZXQnXShjb21wLCBjYWxsYmFjayk7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5leHBvcnRzLmRlZmF1bHQgPSBoYW5kbGVQdWJyZWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wdWJyZWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/handlers/pubrel.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/is-browser.js":
/*!****************************************************!*\
  !*** ../node_modules/mqtt/build/lib/is-browser.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isWebWorker = void 0;\nconst isStandardBrowserEnv = () => typeof window !== 'undefined' && typeof window.document !== 'undefined';\nconst isWebWorkerEnv = () => {\n    var _a, _b;\n    return Boolean(typeof self === 'object' &&\n        ((_b = (_a = self === null || self === void 0 ? void 0 : self.constructor) === null || _a === void 0 ? void 0 : _a.name) === null || _b === void 0 ? void 0 : _b.includes('WorkerGlobalScope')));\n};\nconst isReactNativeEnv = () => typeof navigator !== 'undefined' && navigator.product === 'ReactNative';\nconst isBrowser = isStandardBrowserEnv() || isWebWorkerEnv() || isReactNativeEnv();\nexports.isWebWorker = isWebWorkerEnv();\nexports[\"default\"] = isBrowser;\n//# sourceMappingURL=is-browser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL2lzLWJyb3dzZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIsa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uLi9ub2RlX21vZHVsZXMvbXF0dC9idWlsZC9saWIvaXMtYnJvd3Nlci5qcz85NGRjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1dlYldvcmtlciA9IHZvaWQgMDtcbmNvbnN0IGlzU3RhbmRhcmRCcm93c2VyRW52ID0gKCkgPT4gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCc7XG5jb25zdCBpc1dlYldvcmtlckVudiA9ICgpID0+IHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIHJldHVybiBCb29sZWFuKHR5cGVvZiBzZWxmID09PSAnb2JqZWN0JyAmJlxuICAgICAgICAoKF9iID0gKF9hID0gc2VsZiA9PT0gbnVsbCB8fCBzZWxmID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzZWxmLmNvbnN0cnVjdG9yKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubmFtZSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmluY2x1ZGVzKCdXb3JrZXJHbG9iYWxTY29wZScpKSk7XG59O1xuY29uc3QgaXNSZWFjdE5hdGl2ZUVudiA9ICgpID0+IHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvci5wcm9kdWN0ID09PSAnUmVhY3ROYXRpdmUnO1xuY29uc3QgaXNCcm93c2VyID0gaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSB8fCBpc1dlYldvcmtlckVudigpIHx8IGlzUmVhY3ROYXRpdmVFbnYoKTtcbmV4cG9ydHMuaXNXZWJXb3JrZXIgPSBpc1dlYldvcmtlckVudigpO1xuZXhwb3J0cy5kZWZhdWx0ID0gaXNCcm93c2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXMtYnJvd3Nlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/is-browser.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/shared.js":
/*!************************************************!*\
  !*** ../node_modules/mqtt/build/lib/shared.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.nextTick = exports.applyMixin = exports.ErrorWithReasonCode = void 0;\nclass ErrorWithReasonCode extends Error {\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n        Object.setPrototypeOf(this, ErrorWithReasonCode.prototype);\n        Object.getPrototypeOf(this).name = 'ErrorWithReasonCode';\n    }\n}\nexports.ErrorWithReasonCode = ErrorWithReasonCode;\nfunction applyMixin(target, mixin, includeConstructor = false) {\n    var _a;\n    const inheritanceChain = [mixin];\n    while (true) {\n        const current = inheritanceChain[0];\n        const base = Object.getPrototypeOf(current);\n        if (base === null || base === void 0 ? void 0 : base.prototype) {\n            inheritanceChain.unshift(base);\n        }\n        else {\n            break;\n        }\n    }\n    for (const ctor of inheritanceChain) {\n        for (const prop of Object.getOwnPropertyNames(ctor.prototype)) {\n            if (includeConstructor || prop !== 'constructor') {\n                Object.defineProperty(target.prototype, prop, (_a = Object.getOwnPropertyDescriptor(ctor.prototype, prop)) !== null && _a !== void 0 ? _a : Object.create(null));\n            }\n        }\n    }\n}\nexports.applyMixin = applyMixin;\nexports.nextTick = process\n    ? process.nextTick\n    : (callback) => {\n        setTimeout(callback, 0);\n    };\n//# sourceMappingURL=shared.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL3NoYXJlZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsR0FBRyxrQkFBa0IsR0FBRywyQkFBMkI7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL3NoYXJlZC5qcz84OTlmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5uZXh0VGljayA9IGV4cG9ydHMuYXBwbHlNaXhpbiA9IGV4cG9ydHMuRXJyb3JXaXRoUmVhc29uQ29kZSA9IHZvaWQgMDtcbmNsYXNzIEVycm9yV2l0aFJlYXNvbkNvZGUgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgY29kZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIEVycm9yV2l0aFJlYXNvbkNvZGUucHJvdG90eXBlKTtcbiAgICAgICAgT2JqZWN0LmdldFByb3RvdHlwZU9mKHRoaXMpLm5hbWUgPSAnRXJyb3JXaXRoUmVhc29uQ29kZSc7XG4gICAgfVxufVxuZXhwb3J0cy5FcnJvcldpdGhSZWFzb25Db2RlID0gRXJyb3JXaXRoUmVhc29uQ29kZTtcbmZ1bmN0aW9uIGFwcGx5TWl4aW4odGFyZ2V0LCBtaXhpbiwgaW5jbHVkZUNvbnN0cnVjdG9yID0gZmFsc2UpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgaW5oZXJpdGFuY2VDaGFpbiA9IFttaXhpbl07XG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgY29uc3QgY3VycmVudCA9IGluaGVyaXRhbmNlQ2hhaW5bMF07XG4gICAgICAgIGNvbnN0IGJhc2UgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoY3VycmVudCk7XG4gICAgICAgIGlmIChiYXNlID09PSBudWxsIHx8IGJhc2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGJhc2UucHJvdG90eXBlKSB7XG4gICAgICAgICAgICBpbmhlcml0YW5jZUNoYWluLnVuc2hpZnQoYmFzZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbiAgICBmb3IgKGNvbnN0IGN0b3Igb2YgaW5oZXJpdGFuY2VDaGFpbikge1xuICAgICAgICBmb3IgKGNvbnN0IHByb3Agb2YgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoY3Rvci5wcm90b3R5cGUpKSB7XG4gICAgICAgICAgICBpZiAoaW5jbHVkZUNvbnN0cnVjdG9yIHx8IHByb3AgIT09ICdjb25zdHJ1Y3RvcicpIHtcbiAgICAgICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LnByb3RvdHlwZSwgcHJvcCwgKF9hID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihjdG9yLnByb3RvdHlwZSwgcHJvcCkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IE9iamVjdC5jcmVhdGUobnVsbCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5hcHBseU1peGluID0gYXBwbHlNaXhpbjtcbmV4cG9ydHMubmV4dFRpY2sgPSBwcm9jZXNzXG4gICAgPyBwcm9jZXNzLm5leHRUaWNrXG4gICAgOiAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgc2V0VGltZW91dChjYWxsYmFjaywgMCk7XG4gICAgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNoYXJlZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/shared.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/store.js":
/*!***********************************************!*\
  !*** ../node_modules/mqtt/build/lib/store.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst readable_stream_1 = __webpack_require__(/*! readable-stream */ \"(ssr)/../node_modules/readable-stream/lib/ours/index.js\");\nconst streamsOpts = { objectMode: true };\nconst defaultStoreOptions = {\n    clean: true,\n};\nclass Store {\n    constructor(options) {\n        this.options = options || {};\n        this.options = Object.assign(Object.assign({}, defaultStoreOptions), options);\n        this._inflights = new Map();\n    }\n    put(packet, cb) {\n        this._inflights.set(packet.messageId, packet);\n        if (cb) {\n            cb();\n        }\n        return this;\n    }\n    createStream() {\n        const stream = new readable_stream_1.Readable(streamsOpts);\n        const values = [];\n        let destroyed = false;\n        let i = 0;\n        this._inflights.forEach((value, key) => {\n            values.push(value);\n        });\n        stream._read = () => {\n            if (!destroyed && i < values.length) {\n                stream.push(values[i++]);\n            }\n            else {\n                stream.push(null);\n            }\n        };\n        stream.destroy = (err) => {\n            if (destroyed) {\n                return;\n            }\n            destroyed = true;\n            setTimeout(() => {\n                stream.emit('close');\n            }, 0);\n            return stream;\n        };\n        return stream;\n    }\n    del(packet, cb) {\n        const toDelete = this._inflights.get(packet.messageId);\n        if (toDelete) {\n            this._inflights.delete(packet.messageId);\n            cb(null, toDelete);\n        }\n        else if (cb) {\n            cb(new Error('missing packet'));\n        }\n        return this;\n    }\n    get(packet, cb) {\n        const storedPacket = this._inflights.get(packet.messageId);\n        if (storedPacket) {\n            cb(null, storedPacket);\n        }\n        else if (cb) {\n            cb(new Error('missing packet'));\n        }\n        return this;\n    }\n    close(cb) {\n        if (this.options.clean) {\n            this._inflights = null;\n        }\n        if (cb) {\n            cb();\n        }\n    }\n}\nexports[\"default\"] = Store;\n//# sourceMappingURL=store.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL3N0b3JlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQixtQkFBTyxDQUFDLGdGQUFpQjtBQUNuRCxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFEO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL3N0b3JlLmpzP2VjM2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCByZWFkYWJsZV9zdHJlYW1fMSA9IHJlcXVpcmUoXCJyZWFkYWJsZS1zdHJlYW1cIik7XG5jb25zdCBzdHJlYW1zT3B0cyA9IHsgb2JqZWN0TW9kZTogdHJ1ZSB9O1xuY29uc3QgZGVmYXVsdFN0b3JlT3B0aW9ucyA9IHtcbiAgICBjbGVhbjogdHJ1ZSxcbn07XG5jbGFzcyBTdG9yZSB7XG4gICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRTdG9yZU9wdGlvbnMpLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5faW5mbGlnaHRzID0gbmV3IE1hcCgpO1xuICAgIH1cbiAgICBwdXQocGFja2V0LCBjYikge1xuICAgICAgICB0aGlzLl9pbmZsaWdodHMuc2V0KHBhY2tldC5tZXNzYWdlSWQsIHBhY2tldCk7XG4gICAgICAgIGlmIChjYikge1xuICAgICAgICAgICAgY2IoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgY3JlYXRlU3RyZWFtKCkge1xuICAgICAgICBjb25zdCBzdHJlYW0gPSBuZXcgcmVhZGFibGVfc3RyZWFtXzEuUmVhZGFibGUoc3RyZWFtc09wdHMpO1xuICAgICAgICBjb25zdCB2YWx1ZXMgPSBbXTtcbiAgICAgICAgbGV0IGRlc3Ryb3llZCA9IGZhbHNlO1xuICAgICAgICBsZXQgaSA9IDA7XG4gICAgICAgIHRoaXMuX2luZmxpZ2h0cy5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgICAgICB2YWx1ZXMucHVzaCh2YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgICAgICBzdHJlYW0uX3JlYWQgPSAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWRlc3Ryb3llZCAmJiBpIDwgdmFsdWVzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHN0cmVhbS5wdXNoKHZhbHVlc1tpKytdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHN0cmVhbS5wdXNoKG51bGwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBzdHJlYW0uZGVzdHJveSA9IChlcnIpID0+IHtcbiAgICAgICAgICAgIGlmIChkZXN0cm95ZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkZXN0cm95ZWQgPSB0cnVlO1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgc3RyZWFtLmVtaXQoJ2Nsb3NlJyk7XG4gICAgICAgICAgICB9LCAwKTtcbiAgICAgICAgICAgIHJldHVybiBzdHJlYW07XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBzdHJlYW07XG4gICAgfVxuICAgIGRlbChwYWNrZXQsIGNiKSB7XG4gICAgICAgIGNvbnN0IHRvRGVsZXRlID0gdGhpcy5faW5mbGlnaHRzLmdldChwYWNrZXQubWVzc2FnZUlkKTtcbiAgICAgICAgaWYgKHRvRGVsZXRlKSB7XG4gICAgICAgICAgICB0aGlzLl9pbmZsaWdodHMuZGVsZXRlKHBhY2tldC5tZXNzYWdlSWQpO1xuICAgICAgICAgICAgY2IobnVsbCwgdG9EZWxldGUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGNiKSB7XG4gICAgICAgICAgICBjYihuZXcgRXJyb3IoJ21pc3NpbmcgcGFja2V0JykpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBnZXQocGFja2V0LCBjYikge1xuICAgICAgICBjb25zdCBzdG9yZWRQYWNrZXQgPSB0aGlzLl9pbmZsaWdodHMuZ2V0KHBhY2tldC5tZXNzYWdlSWQpO1xuICAgICAgICBpZiAoc3RvcmVkUGFja2V0KSB7XG4gICAgICAgICAgICBjYihudWxsLCBzdG9yZWRQYWNrZXQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGNiKSB7XG4gICAgICAgICAgICBjYihuZXcgRXJyb3IoJ21pc3NpbmcgcGFja2V0JykpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBjbG9zZShjYikge1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmNsZWFuKSB7XG4gICAgICAgICAgICB0aGlzLl9pbmZsaWdodHMgPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjYikge1xuICAgICAgICAgICAgY2IoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFN0b3JlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RvcmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/store.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/timers.js":
/*!************************************************!*\
  !*** ../node_modules/mqtt/build/lib/timers.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst is_browser_1 = __importStar(__webpack_require__(/*! ./is-browser */ \"(ssr)/../node_modules/mqtt/build/lib/is-browser.js\"));\nconst worker_timers_1 = __webpack_require__(/*! worker-timers */ \"(ssr)/../node_modules/worker-timers/build/es2019/module.js\");\nconst timers = {\n    set: is_browser_1.default && !is_browser_1.isWebWorker\n        ? worker_timers_1.setTimeout\n        : (func, time) => setTimeout(func, time),\n    clear: is_browser_1.default && !is_browser_1.isWebWorker ? worker_timers_1.clearTimeout : (timer) => clearTimeout(timer),\n};\nexports[\"default\"] = timers;\n//# sourceMappingURL=timers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL3RpbWVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0NBQWtDLG1CQUFPLENBQUMsd0VBQWM7QUFDeEQsd0JBQXdCLG1CQUFPLENBQUMsaUZBQWU7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uLi9ub2RlX21vZHVsZXMvbXF0dC9idWlsZC9saWIvdGltZXJzLmpzPzg3MDUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGlzX2Jyb3dzZXJfMSA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9pcy1icm93c2VyXCIpKTtcbmNvbnN0IHdvcmtlcl90aW1lcnNfMSA9IHJlcXVpcmUoXCJ3b3JrZXItdGltZXJzXCIpO1xuY29uc3QgdGltZXJzID0ge1xuICAgIHNldDogaXNfYnJvd3Nlcl8xLmRlZmF1bHQgJiYgIWlzX2Jyb3dzZXJfMS5pc1dlYldvcmtlclxuICAgICAgICA/IHdvcmtlcl90aW1lcnNfMS5zZXRUaW1lb3V0XG4gICAgICAgIDogKGZ1bmMsIHRpbWUpID0+IHNldFRpbWVvdXQoZnVuYywgdGltZSksXG4gICAgY2xlYXI6IGlzX2Jyb3dzZXJfMS5kZWZhdWx0ICYmICFpc19icm93c2VyXzEuaXNXZWJXb3JrZXIgPyB3b3JrZXJfdGltZXJzXzEuY2xlYXJUaW1lb3V0IDogKHRpbWVyKSA9PiBjbGVhclRpbWVvdXQodGltZXIpLFxufTtcbmV4cG9ydHMuZGVmYXVsdCA9IHRpbWVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRpbWVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/timers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/topic-alias-recv.js":
/*!**********************************************************!*\
  !*** ../node_modules/mqtt/build/lib/topic-alias-recv.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass TopicAliasRecv {\n    constructor(max) {\n        this.aliasToTopic = {};\n        this.max = max;\n    }\n    put(topic, alias) {\n        if (alias === 0 || alias > this.max) {\n            return false;\n        }\n        this.aliasToTopic[alias] = topic;\n        this.length = Object.keys(this.aliasToTopic).length;\n        return true;\n    }\n    getTopicByAlias(alias) {\n        return this.aliasToTopic[alias];\n    }\n    clear() {\n        this.aliasToTopic = {};\n    }\n}\nexports[\"default\"] = TopicAliasRecv;\n//# sourceMappingURL=topic-alias-recv.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL3RvcGljLWFsaWFzLXJlY3YuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL3RvcGljLWFsaWFzLXJlY3YuanM/ZWMzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIFRvcGljQWxpYXNSZWN2IHtcbiAgICBjb25zdHJ1Y3RvcihtYXgpIHtcbiAgICAgICAgdGhpcy5hbGlhc1RvVG9waWMgPSB7fTtcbiAgICAgICAgdGhpcy5tYXggPSBtYXg7XG4gICAgfVxuICAgIHB1dCh0b3BpYywgYWxpYXMpIHtcbiAgICAgICAgaWYgKGFsaWFzID09PSAwIHx8IGFsaWFzID4gdGhpcy5tYXgpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmFsaWFzVG9Ub3BpY1thbGlhc10gPSB0b3BpYztcbiAgICAgICAgdGhpcy5sZW5ndGggPSBPYmplY3Qua2V5cyh0aGlzLmFsaWFzVG9Ub3BpYykubGVuZ3RoO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgZ2V0VG9waWNCeUFsaWFzKGFsaWFzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFsaWFzVG9Ub3BpY1thbGlhc107XG4gICAgfVxuICAgIGNsZWFyKCkge1xuICAgICAgICB0aGlzLmFsaWFzVG9Ub3BpYyA9IHt9O1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFRvcGljQWxpYXNSZWN2O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dG9waWMtYWxpYXMtcmVjdi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/topic-alias-recv.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/topic-alias-send.js":
/*!**********************************************************!*\
  !*** ../node_modules/mqtt/build/lib/topic-alias-send.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst lru_cache_1 = __webpack_require__(/*! lru-cache */ \"(ssr)/../node_modules/lru-cache/dist/commonjs/index.js\");\nconst number_allocator_1 = __webpack_require__(/*! number-allocator */ \"(ssr)/../node_modules/number-allocator/index.js\");\nclass TopicAliasSend {\n    constructor(max) {\n        if (max > 0) {\n            this.aliasToTopic = new lru_cache_1.LRUCache({ max });\n            this.topicToAlias = {};\n            this.numberAllocator = new number_allocator_1.NumberAllocator(1, max);\n            this.max = max;\n            this.length = 0;\n        }\n    }\n    put(topic, alias) {\n        if (alias === 0 || alias > this.max) {\n            return false;\n        }\n        const entry = this.aliasToTopic.get(alias);\n        if (entry) {\n            delete this.topicToAlias[entry];\n        }\n        this.aliasToTopic.set(alias, topic);\n        this.topicToAlias[topic] = alias;\n        this.numberAllocator.use(alias);\n        this.length = this.aliasToTopic.size;\n        return true;\n    }\n    getTopicByAlias(alias) {\n        return this.aliasToTopic.get(alias);\n    }\n    getAliasByTopic(topic) {\n        const alias = this.topicToAlias[topic];\n        if (typeof alias !== 'undefined') {\n            this.aliasToTopic.get(alias);\n        }\n        return alias;\n    }\n    clear() {\n        this.aliasToTopic.clear();\n        this.topicToAlias = {};\n        this.numberAllocator.clear();\n        this.length = 0;\n    }\n    getLruAlias() {\n        const alias = this.numberAllocator.firstVacant();\n        if (alias)\n            return alias;\n        return [...this.aliasToTopic.keys()][this.aliasToTopic.size - 1];\n    }\n}\nexports[\"default\"] = TopicAliasSend;\n//# sourceMappingURL=topic-alias-send.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL3RvcGljLWFsaWFzLXNlbmQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLG1CQUFPLENBQUMseUVBQVc7QUFDdkMsMkJBQTJCLG1CQUFPLENBQUMseUVBQWtCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxLQUFLO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uLi9ub2RlX21vZHVsZXMvbXF0dC9idWlsZC9saWIvdG9waWMtYWxpYXMtc2VuZC5qcz9mOTk3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgbHJ1X2NhY2hlXzEgPSByZXF1aXJlKFwibHJ1LWNhY2hlXCIpO1xuY29uc3QgbnVtYmVyX2FsbG9jYXRvcl8xID0gcmVxdWlyZShcIm51bWJlci1hbGxvY2F0b3JcIik7XG5jbGFzcyBUb3BpY0FsaWFzU2VuZCB7XG4gICAgY29uc3RydWN0b3IobWF4KSB7XG4gICAgICAgIGlmIChtYXggPiAwKSB7XG4gICAgICAgICAgICB0aGlzLmFsaWFzVG9Ub3BpYyA9IG5ldyBscnVfY2FjaGVfMS5MUlVDYWNoZSh7IG1heCB9KTtcbiAgICAgICAgICAgIHRoaXMudG9waWNUb0FsaWFzID0ge307XG4gICAgICAgICAgICB0aGlzLm51bWJlckFsbG9jYXRvciA9IG5ldyBudW1iZXJfYWxsb2NhdG9yXzEuTnVtYmVyQWxsb2NhdG9yKDEsIG1heCk7XG4gICAgICAgICAgICB0aGlzLm1heCA9IG1heDtcbiAgICAgICAgICAgIHRoaXMubGVuZ3RoID0gMDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwdXQodG9waWMsIGFsaWFzKSB7XG4gICAgICAgIGlmIChhbGlhcyA9PT0gMCB8fCBhbGlhcyA+IHRoaXMubWF4KSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZW50cnkgPSB0aGlzLmFsaWFzVG9Ub3BpYy5nZXQoYWxpYXMpO1xuICAgICAgICBpZiAoZW50cnkpIHtcbiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLnRvcGljVG9BbGlhc1tlbnRyeV07XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5hbGlhc1RvVG9waWMuc2V0KGFsaWFzLCB0b3BpYyk7XG4gICAgICAgIHRoaXMudG9waWNUb0FsaWFzW3RvcGljXSA9IGFsaWFzO1xuICAgICAgICB0aGlzLm51bWJlckFsbG9jYXRvci51c2UoYWxpYXMpO1xuICAgICAgICB0aGlzLmxlbmd0aCA9IHRoaXMuYWxpYXNUb1RvcGljLnNpemU7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBnZXRUb3BpY0J5QWxpYXMoYWxpYXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYWxpYXNUb1RvcGljLmdldChhbGlhcyk7XG4gICAgfVxuICAgIGdldEFsaWFzQnlUb3BpYyh0b3BpYykge1xuICAgICAgICBjb25zdCBhbGlhcyA9IHRoaXMudG9waWNUb0FsaWFzW3RvcGljXTtcbiAgICAgICAgaWYgKHR5cGVvZiBhbGlhcyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIHRoaXMuYWxpYXNUb1RvcGljLmdldChhbGlhcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFsaWFzO1xuICAgIH1cbiAgICBjbGVhcigpIHtcbiAgICAgICAgdGhpcy5hbGlhc1RvVG9waWMuY2xlYXIoKTtcbiAgICAgICAgdGhpcy50b3BpY1RvQWxpYXMgPSB7fTtcbiAgICAgICAgdGhpcy5udW1iZXJBbGxvY2F0b3IuY2xlYXIoKTtcbiAgICAgICAgdGhpcy5sZW5ndGggPSAwO1xuICAgIH1cbiAgICBnZXRMcnVBbGlhcygpIHtcbiAgICAgICAgY29uc3QgYWxpYXMgPSB0aGlzLm51bWJlckFsbG9jYXRvci5maXJzdFZhY2FudCgpO1xuICAgICAgICBpZiAoYWxpYXMpXG4gICAgICAgICAgICByZXR1cm4gYWxpYXM7XG4gICAgICAgIHJldHVybiBbLi4udGhpcy5hbGlhc1RvVG9waWMua2V5cygpXVt0aGlzLmFsaWFzVG9Ub3BpYy5zaXplIC0gMV07XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gVG9waWNBbGlhc1NlbmQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10b3BpYy1hbGlhcy1zZW5kLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/topic-alias-send.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/unique-message-id-provider.js":
/*!********************************************************************!*\
  !*** ../node_modules/mqtt/build/lib/unique-message-id-provider.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst number_allocator_1 = __webpack_require__(/*! number-allocator */ \"(ssr)/../node_modules/number-allocator/index.js\");\nclass UniqueMessageIdProvider {\n    constructor() {\n        this.numberAllocator = new number_allocator_1.NumberAllocator(1, 65535);\n    }\n    allocate() {\n        this.lastId = this.numberAllocator.alloc();\n        return this.lastId;\n    }\n    getLastAllocated() {\n        return this.lastId;\n    }\n    register(messageId) {\n        return this.numberAllocator.use(messageId);\n    }\n    deallocate(messageId) {\n        this.numberAllocator.free(messageId);\n    }\n    clear() {\n        this.numberAllocator.clear();\n    }\n}\nexports[\"default\"] = UniqueMessageIdProvider;\n//# sourceMappingURL=unique-message-id-provider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL3VuaXF1ZS1tZXNzYWdlLWlkLXByb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQixtQkFBTyxDQUFDLHlFQUFrQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4uL25vZGVfbW9kdWxlcy9tcXR0L2J1aWxkL2xpYi91bmlxdWUtbWVzc2FnZS1pZC1wcm92aWRlci5qcz9iZGVlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgbnVtYmVyX2FsbG9jYXRvcl8xID0gcmVxdWlyZShcIm51bWJlci1hbGxvY2F0b3JcIik7XG5jbGFzcyBVbmlxdWVNZXNzYWdlSWRQcm92aWRlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMubnVtYmVyQWxsb2NhdG9yID0gbmV3IG51bWJlcl9hbGxvY2F0b3JfMS5OdW1iZXJBbGxvY2F0b3IoMSwgNjU1MzUpO1xuICAgIH1cbiAgICBhbGxvY2F0ZSgpIHtcbiAgICAgICAgdGhpcy5sYXN0SWQgPSB0aGlzLm51bWJlckFsbG9jYXRvci5hbGxvYygpO1xuICAgICAgICByZXR1cm4gdGhpcy5sYXN0SWQ7XG4gICAgfVxuICAgIGdldExhc3RBbGxvY2F0ZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxhc3RJZDtcbiAgICB9XG4gICAgcmVnaXN0ZXIobWVzc2FnZUlkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm51bWJlckFsbG9jYXRvci51c2UobWVzc2FnZUlkKTtcbiAgICB9XG4gICAgZGVhbGxvY2F0ZShtZXNzYWdlSWQpIHtcbiAgICAgICAgdGhpcy5udW1iZXJBbGxvY2F0b3IuZnJlZShtZXNzYWdlSWQpO1xuICAgIH1cbiAgICBjbGVhcigpIHtcbiAgICAgICAgdGhpcy5udW1iZXJBbGxvY2F0b3IuY2xlYXIoKTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBVbmlxdWVNZXNzYWdlSWRQcm92aWRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVuaXF1ZS1tZXNzYWdlLWlkLXByb3ZpZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/unique-message-id-provider.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/lib/validations.js":
/*!*****************************************************!*\
  !*** ../node_modules/mqtt/build/lib/validations.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.validateTopics = exports.validateTopic = void 0;\nfunction validateTopic(topic) {\n    const parts = topic.split('/');\n    for (let i = 0; i < parts.length; i++) {\n        if (parts[i] === '+') {\n            continue;\n        }\n        if (parts[i] === '#') {\n            return i === parts.length - 1;\n        }\n        if (parts[i].indexOf('+') !== -1 || parts[i].indexOf('#') !== -1) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.validateTopic = validateTopic;\nfunction validateTopics(topics) {\n    if (topics.length === 0) {\n        return 'empty_topic_list';\n    }\n    for (let i = 0; i < topics.length; i++) {\n        if (!validateTopic(topics[i])) {\n            return topics[i];\n        }\n    }\n    return null;\n}\nexports.validateTopics = validateTopics;\n//# sourceMappingURL=validations.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbGliL3ZhbGlkYXRpb25zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixHQUFHLHFCQUFxQjtBQUM5QztBQUNBO0FBQ0Esb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQW1CO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uLi9ub2RlX21vZHVsZXMvbXF0dC9idWlsZC9saWIvdmFsaWRhdGlvbnMuanM/NDI4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudmFsaWRhdGVUb3BpY3MgPSBleHBvcnRzLnZhbGlkYXRlVG9waWMgPSB2b2lkIDA7XG5mdW5jdGlvbiB2YWxpZGF0ZVRvcGljKHRvcGljKSB7XG4gICAgY29uc3QgcGFydHMgPSB0b3BpYy5zcGxpdCgnLycpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGFydHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKHBhcnRzW2ldID09PSAnKycpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwYXJ0c1tpXSA9PT0gJyMnKSB7XG4gICAgICAgICAgICByZXR1cm4gaSA9PT0gcGFydHMubGVuZ3RoIC0gMTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocGFydHNbaV0uaW5kZXhPZignKycpICE9PSAtMSB8fCBwYXJ0c1tpXS5pbmRleE9mKCcjJykgIT09IC0xKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnRzLnZhbGlkYXRlVG9waWMgPSB2YWxpZGF0ZVRvcGljO1xuZnVuY3Rpb24gdmFsaWRhdGVUb3BpY3ModG9waWNzKSB7XG4gICAgaWYgKHRvcGljcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuICdlbXB0eV90b3BpY19saXN0JztcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0b3BpY3MubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKCF2YWxpZGF0ZVRvcGljKHRvcGljc1tpXSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0b3BpY3NbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG5leHBvcnRzLnZhbGlkYXRlVG9waWNzID0gdmFsaWRhdGVUb3BpY3M7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YWxpZGF0aW9ucy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/lib/validations.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/mqtt/build/mqtt.js":
/*!******************************************!*\
  !*** ../node_modules/mqtt/build/mqtt.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ReasonCodes = exports.PingTimer = exports.UniqueMessageIdProvider = exports.DefaultMessageIdProvider = exports.Store = exports.MqttClient = exports.connectAsync = exports.connect = exports.Client = void 0;\nconst client_1 = __importDefault(__webpack_require__(/*! ./lib/client */ \"(ssr)/../node_modules/mqtt/build/lib/client.js\"));\nexports.MqttClient = client_1.default;\nconst default_message_id_provider_1 = __importDefault(__webpack_require__(/*! ./lib/default-message-id-provider */ \"(ssr)/../node_modules/mqtt/build/lib/default-message-id-provider.js\"));\nexports.DefaultMessageIdProvider = default_message_id_provider_1.default;\nconst unique_message_id_provider_1 = __importDefault(__webpack_require__(/*! ./lib/unique-message-id-provider */ \"(ssr)/../node_modules/mqtt/build/lib/unique-message-id-provider.js\"));\nexports.UniqueMessageIdProvider = unique_message_id_provider_1.default;\nconst store_1 = __importDefault(__webpack_require__(/*! ./lib/store */ \"(ssr)/../node_modules/mqtt/build/lib/store.js\"));\nexports.Store = store_1.default;\nconst connect_1 = __importStar(__webpack_require__(/*! ./lib/connect */ \"(ssr)/../node_modules/mqtt/build/lib/connect/index.js\"));\nexports.connect = connect_1.default;\nObject.defineProperty(exports, \"connectAsync\", ({ enumerable: true, get: function () { return connect_1.connectAsync; } }));\nconst PingTimer_1 = __importDefault(__webpack_require__(/*! ./lib/PingTimer */ \"(ssr)/../node_modules/mqtt/build/lib/PingTimer.js\"));\nexports.PingTimer = PingTimer_1.default;\nexports.Client = client_1.default;\n__exportStar(__webpack_require__(/*! ./lib/client */ \"(ssr)/../node_modules/mqtt/build/lib/client.js\"), exports);\n__exportStar(__webpack_require__(/*! ./lib/shared */ \"(ssr)/../node_modules/mqtt/build/lib/shared.js\"), exports);\nvar ack_1 = __webpack_require__(/*! ./lib/handlers/ack */ \"(ssr)/../node_modules/mqtt/build/lib/handlers/ack.js\");\nObject.defineProperty(exports, \"ReasonCodes\", ({ enumerable: true, get: function () { return ack_1.ReasonCodes; } }));\n//# sourceMappingURL=mqtt.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL21xdHQvYnVpbGQvbXF0dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyxpQkFBaUIsR0FBRywrQkFBK0IsR0FBRyxnQ0FBZ0MsR0FBRyxhQUFhLEdBQUcsa0JBQWtCLEdBQUcsb0JBQW9CLEdBQUcsZUFBZSxHQUFHLGNBQWM7QUFDM00saUNBQWlDLG1CQUFPLENBQUMsb0VBQWM7QUFDdkQsa0JBQWtCO0FBQ2xCLHNEQUFzRCxtQkFBTyxDQUFDLDhHQUFtQztBQUNqRyxnQ0FBZ0M7QUFDaEMscURBQXFELG1CQUFPLENBQUMsNEdBQWtDO0FBQy9GLCtCQUErQjtBQUMvQixnQ0FBZ0MsbUJBQU8sQ0FBQyxrRUFBYTtBQUNyRCxhQUFhO0FBQ2IsK0JBQStCLG1CQUFPLENBQUMsNEVBQWU7QUFDdEQsZUFBZTtBQUNmLGdEQUErQyxFQUFFLHFDQUFxQyxrQ0FBa0MsRUFBQztBQUN6SCxvQ0FBb0MsbUJBQU8sQ0FBQywwRUFBaUI7QUFDN0QsaUJBQWlCO0FBQ2pCLGNBQWM7QUFDZCxhQUFhLG1CQUFPLENBQUMsb0VBQWM7QUFDbkMsYUFBYSxtQkFBTyxDQUFDLG9FQUFjO0FBQ25DLFlBQVksbUJBQU8sQ0FBQyxnRkFBb0I7QUFDeEMsK0NBQThDLEVBQUUscUNBQXFDLDZCQUE2QixFQUFDO0FBQ25IIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4uL25vZGVfbW9kdWxlcy9tcXR0L2J1aWxkL21xdHQuanM/OTc1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmVhc29uQ29kZXMgPSBleHBvcnRzLlBpbmdUaW1lciA9IGV4cG9ydHMuVW5pcXVlTWVzc2FnZUlkUHJvdmlkZXIgPSBleHBvcnRzLkRlZmF1bHRNZXNzYWdlSWRQcm92aWRlciA9IGV4cG9ydHMuU3RvcmUgPSBleHBvcnRzLk1xdHRDbGllbnQgPSBleHBvcnRzLmNvbm5lY3RBc3luYyA9IGV4cG9ydHMuY29ubmVjdCA9IGV4cG9ydHMuQ2xpZW50ID0gdm9pZCAwO1xuY29uc3QgY2xpZW50XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vbGliL2NsaWVudFwiKSk7XG5leHBvcnRzLk1xdHRDbGllbnQgPSBjbGllbnRfMS5kZWZhdWx0O1xuY29uc3QgZGVmYXVsdF9tZXNzYWdlX2lkX3Byb3ZpZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vbGliL2RlZmF1bHQtbWVzc2FnZS1pZC1wcm92aWRlclwiKSk7XG5leHBvcnRzLkRlZmF1bHRNZXNzYWdlSWRQcm92aWRlciA9IGRlZmF1bHRfbWVzc2FnZV9pZF9wcm92aWRlcl8xLmRlZmF1bHQ7XG5jb25zdCB1bmlxdWVfbWVzc2FnZV9pZF9wcm92aWRlcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2xpYi91bmlxdWUtbWVzc2FnZS1pZC1wcm92aWRlclwiKSk7XG5leHBvcnRzLlVuaXF1ZU1lc3NhZ2VJZFByb3ZpZGVyID0gdW5pcXVlX21lc3NhZ2VfaWRfcHJvdmlkZXJfMS5kZWZhdWx0O1xuY29uc3Qgc3RvcmVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9saWIvc3RvcmVcIikpO1xuZXhwb3J0cy5TdG9yZSA9IHN0b3JlXzEuZGVmYXVsdDtcbmNvbnN0IGNvbm5lY3RfMSA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9saWIvY29ubmVjdFwiKSk7XG5leHBvcnRzLmNvbm5lY3QgPSBjb25uZWN0XzEuZGVmYXVsdDtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNvbm5lY3RBc3luY1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29ubmVjdF8xLmNvbm5lY3RBc3luYzsgfSB9KTtcbmNvbnN0IFBpbmdUaW1lcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2xpYi9QaW5nVGltZXJcIikpO1xuZXhwb3J0cy5QaW5nVGltZXIgPSBQaW5nVGltZXJfMS5kZWZhdWx0O1xuZXhwb3J0cy5DbGllbnQgPSBjbGllbnRfMS5kZWZhdWx0O1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2xpYi9jbGllbnRcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2xpYi9zaGFyZWRcIiksIGV4cG9ydHMpO1xudmFyIGFja18xID0gcmVxdWlyZShcIi4vbGliL2hhbmRsZXJzL2Fja1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlYXNvbkNvZGVzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhY2tfMS5SZWFzb25Db2RlczsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1xdHQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/mqtt/build/mqtt.js\n");

/***/ })

};
;